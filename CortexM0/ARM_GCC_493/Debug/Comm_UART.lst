ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Comm_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Comm_configUart
  18              		.section	.rodata
  19              		.align	2
  20              		.type	Comm_configUart, %object
  21              		.size	Comm_configUart, 112
  22              	Comm_configUart:
  23 0000 00000000 		.word	0
  24 0004 03000000 		.word	3
  25 0008 08000000 		.word	8
  26 000c 02000000 		.word	2
  27 0010 02000000 		.word	2
  28 0014 10000000 		.word	16
  29 0018 00000000 		.word	0
  30 001c 00000000 		.word	0
  31 0020 00000000 		.word	0
  32 0024 00000000 		.word	0
  33 0028 00000000 		.word	0
  34 002c 00000000 		.word	0
  35 0030 00000000 		.word	0
  36 0034 00000000 		.word	0
  37 0038 00000000 		.word	0
  38 003c 00000000 		.word	0
  39 0040 00000000 		.word	0
  40 0044 00000000 		.word	0
  41 0048 00000000 		.word	0
  42 004c 02000000 		.word	2
  43 0050 FF000000 		.word	255
  44 0054 01000000 		.word	1
  45 0058 00000000 		.word	0
  46 005c 07000000 		.word	7
  47 0060 00000000 		.word	0
  48 0064 00000000 		.word	0
  49 0068 00       		.byte	0
  50 0069 00       		.byte	0
  51 006a 00       		.byte	0
  52 006b 00       		.byte	0
  53 006c 04       		.byte	4
  54 006d 000000   		.space	3
  55              		.section	.text.Comm_UartInit,"ax",%progbits
  56              		.align	2
  57              		.global	Comm_UartInit
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 2


  58              		.code	16
  59              		.thumb_func
  60              		.type	Comm_UartInit, %function
  61              	Comm_UartInit:
  62              	.LFB0:
  63              		.file 1 ".\\Generated_Source\\PSoC4\\Comm_UART.c"
   1:.\Generated_Source\PSoC4/Comm_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Comm_UART.c **** * File Name: Comm_UART.c
   3:.\Generated_Source\PSoC4/Comm_UART.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/Comm_UART.c **** *
   5:.\Generated_Source\PSoC4/Comm_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/Comm_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/Comm_UART.c **** *  UART mode.
   8:.\Generated_Source\PSoC4/Comm_UART.c **** *
   9:.\Generated_Source\PSoC4/Comm_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/Comm_UART.c **** *
  11:.\Generated_Source\PSoC4/Comm_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/Comm_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/Comm_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/Comm_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/Comm_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/Comm_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/Comm_UART.c **** 
  18:.\Generated_Source\PSoC4/Comm_UART.c **** #include "Comm_PVT.h"
  19:.\Generated_Source\PSoC4/Comm_UART.c **** #include "Comm_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/Comm_UART.c **** 
  21:.\Generated_Source\PSoC4/Comm_UART.c **** 
  22:.\Generated_Source\PSoC4/Comm_UART.c **** #if(Comm_SCB_MODE_UNCONFIG_CONST_CFG)
  23:.\Generated_Source\PSoC4/Comm_UART.c **** 
  24:.\Generated_Source\PSoC4/Comm_UART.c ****     /***************************************
  25:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Configuration Structure Initialization
  26:.\Generated_Source\PSoC4/Comm_UART.c ****     ***************************************/
  27:.\Generated_Source\PSoC4/Comm_UART.c **** 
  28:.\Generated_Source\PSoC4/Comm_UART.c ****     const Comm_UART_INIT_STRUCT Comm_configUart =
  29:.\Generated_Source\PSoC4/Comm_UART.c ****     {
  30:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_SUB_MODE,
  31:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_DIRECTION,
  32:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_DATA_BITS_NUM,
  33:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_PARITY_TYPE,
  34:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_STOP_BITS_NUM,
  35:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_OVS_FACTOR,
  36:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_IRDA_LOW_POWER,
  37:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_MEDIAN_FILTER_ENABLE,
  38:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_RETRY_ON_NACK,
  39:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_IRDA_POLARITY,
  40:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_DROP_ON_PARITY_ERR,
  41:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_DROP_ON_FRAME_ERR,
  42:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_WAKE_ENABLE,
  43:.\Generated_Source\PSoC4/Comm_UART.c ****         0u,
  44:.\Generated_Source\PSoC4/Comm_UART.c ****         NULL,
  45:.\Generated_Source\PSoC4/Comm_UART.c ****         0u,
  46:.\Generated_Source\PSoC4/Comm_UART.c ****         NULL,
  47:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_MP_MODE_ENABLE,
  48:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_MP_ACCEPT_ADDRESS,
  49:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_MP_RX_ADDRESS,
  50:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_MP_RX_ADDRESS_MASK,
  51:.\Generated_Source\PSoC4/Comm_UART.c ****         (uint32) Comm_SCB_IRQ_INTERNAL,
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 3


  52:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_INTR_RX_MASK,
  53:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_RX_TRIGGER_LEVEL,
  54:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_INTR_TX_MASK,
  55:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_TX_TRIGGER_LEVEL,
  56:.\Generated_Source\PSoC4/Comm_UART.c ****         (uint8) Comm_UART_BYTE_MODE_ENABLE,
  57:.\Generated_Source\PSoC4/Comm_UART.c ****         (uint8) Comm_UART_CTS_ENABLE,
  58:.\Generated_Source\PSoC4/Comm_UART.c ****         (uint8) Comm_UART_CTS_POLARITY,
  59:.\Generated_Source\PSoC4/Comm_UART.c ****         (uint8) Comm_UART_RTS_POLARITY,
  60:.\Generated_Source\PSoC4/Comm_UART.c ****         (uint8) Comm_UART_RTS_FIFO_LEVEL
  61:.\Generated_Source\PSoC4/Comm_UART.c ****     };
  62:.\Generated_Source\PSoC4/Comm_UART.c **** 
  63:.\Generated_Source\PSoC4/Comm_UART.c **** 
  64:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
  65:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartInit
  66:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
  67:.\Generated_Source\PSoC4/Comm_UART.c ****     *
  68:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
  69:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Configures the SCB for the UART operation.
  70:.\Generated_Source\PSoC4/Comm_UART.c ****     *
  71:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
  72:.\Generated_Source\PSoC4/Comm_UART.c ****     *  config:  Pointer to a structure that contains the following ordered list of
  73:.\Generated_Source\PSoC4/Comm_UART.c ****     *           fields. These fields match the selections available in the
  74:.\Generated_Source\PSoC4/Comm_UART.c ****     *           customizer.
  75:.\Generated_Source\PSoC4/Comm_UART.c ****     *
  76:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
  77:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
  78:.\Generated_Source\PSoC4/Comm_UART.c ****     *
  79:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
  80:.\Generated_Source\PSoC4/Comm_UART.c ****     void Comm_UartInit(const Comm_UART_INIT_STRUCT *config)
  81:.\Generated_Source\PSoC4/Comm_UART.c ****     {
  64              		.loc 1 81 0
  65              		.cfi_startproc
  66 0000 80B5     		push	{r7, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 7, -8
  69              		.cfi_offset 14, -4
  70 0002 84B0     		sub	sp, sp, #16
  71              		.cfi_def_cfa_offset 24
  72 0004 00AF     		add	r7, sp, #0
  73              		.cfi_def_cfa_register 7
  74 0006 7860     		str	r0, [r7, #4]
  82:.\Generated_Source\PSoC4/Comm_UART.c ****         uint32 pinsConfig;
  83:.\Generated_Source\PSoC4/Comm_UART.c **** 
  84:.\Generated_Source\PSoC4/Comm_UART.c ****         if (NULL == config)
  75              		.loc 1 84 0
  76 0008 7B68     		ldr	r3, [r7, #4]
  77 000a 002B     		cmp	r3, #0
  78 000c 03D1     		bne	.L2
  85:.\Generated_Source\PSoC4/Comm_UART.c ****         {
  86:.\Generated_Source\PSoC4/Comm_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
  79              		.loc 1 86 0 discriminator 1
  80 000e 0020     		mov	r0, #0
  81 0010 FFF7FEFF 		bl	CyHalt
  82 0014 5AE1     		b	.L1
  83              	.L2:
  87:.\Generated_Source\PSoC4/Comm_UART.c ****         }
  88:.\Generated_Source\PSoC4/Comm_UART.c ****         else
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 4


  89:.\Generated_Source\PSoC4/Comm_UART.c ****         {
  90:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
  91:.\Generated_Source\PSoC4/Comm_UART.c ****             pinsConfig  = config->direction;
  84              		.loc 1 91 0
  85 0016 7B68     		ldr	r3, [r7, #4]
  86 0018 5B68     		ldr	r3, [r3, #4]
  87 001a FB60     		str	r3, [r7, #12]
  92:.\Generated_Source\PSoC4/Comm_UART.c **** 
  93:.\Generated_Source\PSoC4/Comm_UART.c ****         #if !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1)
  94:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Add RTS and CTS pins to configure */
  95:.\Generated_Source\PSoC4/Comm_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (Comm_UART_RTS_PIN_ENABLE) : (0u);
  96:.\Generated_Source\PSoC4/Comm_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (Comm_UART_CTS_PIN_ENABLE) : (0u);
  97:.\Generated_Source\PSoC4/Comm_UART.c ****         #endif /* !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1) */
  98:.\Generated_Source\PSoC4/Comm_UART.c **** 
  99:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure pins */
 100:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_SetPins(Comm_SCB_MODE_UART, config->mode, pinsConfig);
  88              		.loc 1 100 0
  89 001c 7B68     		ldr	r3, [r7, #4]
  90 001e 1A68     		ldr	r2, [r3]
  91 0020 FB68     		ldr	r3, [r7, #12]
  92 0022 0420     		mov	r0, #4
  93 0024 111C     		mov	r1, r2
  94 0026 1A1C     		mov	r2, r3
  95 0028 FFF7FEFF 		bl	Comm_SetPins
 101:.\Generated_Source\PSoC4/Comm_UART.c **** 
 102:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Store internal configuration */
 103:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_scbMode       = (uint8) Comm_SCB_MODE_UART;
  96              		.loc 1 103 0
  97 002c A94B     		ldr	r3, .L46
  98 002e 0422     		mov	r2, #4
  99 0030 1A70     		strb	r2, [r3]
 104:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_scbEnableWake = (uint8) config->enableWake;
 100              		.loc 1 104 0
 101 0032 7B68     		ldr	r3, [r7, #4]
 102 0034 1B6B     		ldr	r3, [r3, #48]
 103 0036 DAB2     		uxtb	r2, r3
 104 0038 A74B     		ldr	r3, .L46+4
 105 003a 1A70     		strb	r2, [r3]
 105:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_scbEnableIntr = (uint8) config->enableInterrupt;
 106              		.loc 1 105 0
 107 003c 7B68     		ldr	r3, [r7, #4]
 108 003e 5B6D     		ldr	r3, [r3, #84]
 109 0040 DAB2     		uxtb	r2, r3
 110 0042 A64B     		ldr	r3, .L46+8
 111 0044 1A70     		strb	r2, [r3]
 106:.\Generated_Source\PSoC4/Comm_UART.c **** 
 107:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Set RX direction internal variables */
 108:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_rxBuffer      =         config->rxBuffer;
 112              		.loc 1 108 0
 113 0046 7B68     		ldr	r3, [r7, #4]
 114 0048 9A6B     		ldr	r2, [r3, #56]
 115 004a A54B     		ldr	r3, .L46+12
 116 004c 1A60     		str	r2, [r3]
 109:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_rxDataBits    = (uint8) config->dataBits;
 117              		.loc 1 109 0
 118 004e 7B68     		ldr	r3, [r7, #4]
 119 0050 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 5


 120 0052 DAB2     		uxtb	r2, r3
 121 0054 A34B     		ldr	r3, .L46+16
 122 0056 1A70     		strb	r2, [r3]
 110:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_rxBufferSize  = (uint8) config->rxBufferSize;
 123              		.loc 1 110 0
 124 0058 7B68     		ldr	r3, [r7, #4]
 125 005a 5B6B     		ldr	r3, [r3, #52]
 126 005c DBB2     		uxtb	r3, r3
 127 005e 1A1C     		mov	r2, r3
 128 0060 A14B     		ldr	r3, .L46+20
 129 0062 1A60     		str	r2, [r3]
 111:.\Generated_Source\PSoC4/Comm_UART.c **** 
 112:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Set TX direction internal variables */
 113:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_txBuffer      =         config->txBuffer;
 130              		.loc 1 113 0
 131 0064 7B68     		ldr	r3, [r7, #4]
 132 0066 1A6C     		ldr	r2, [r3, #64]
 133 0068 A04B     		ldr	r3, .L46+24
 134 006a 1A60     		str	r2, [r3]
 114:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_txDataBits    = (uint8) config->dataBits;
 135              		.loc 1 114 0
 136 006c 7B68     		ldr	r3, [r7, #4]
 137 006e 9B68     		ldr	r3, [r3, #8]
 138 0070 DAB2     		uxtb	r2, r3
 139 0072 9F4B     		ldr	r3, .L46+28
 140 0074 1A70     		strb	r2, [r3]
 115:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_txBufferSize  = (uint8) config->txBufferSize;
 141              		.loc 1 115 0
 142 0076 7B68     		ldr	r3, [r7, #4]
 143 0078 DB6B     		ldr	r3, [r3, #60]
 144 007a DBB2     		uxtb	r3, r3
 145 007c 1A1C     		mov	r2, r3
 146 007e 9D4B     		ldr	r3, .L46+32
 147 0080 1A60     		str	r2, [r3]
 116:.\Generated_Source\PSoC4/Comm_UART.c **** 
 117:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure UART interface */
 118:.\Generated_Source\PSoC4/Comm_UART.c ****             if(Comm_UART_MODE_IRDA == config->mode)
 148              		.loc 1 118 0
 149 0082 7B68     		ldr	r3, [r7, #4]
 150 0084 1B68     		ldr	r3, [r3]
 151 0086 022B     		cmp	r3, #2
 152 0088 37D1     		bne	.L4
 119:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 120:.\Generated_Source\PSoC4/Comm_UART.c ****                 /* OVS settings: IrDA */
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 153              		.loc 1 121 0
 154 008a 9B4A     		ldr	r2, .L46+36
 155 008c 7B68     		ldr	r3, [r7, #4]
 156 008e 9B69     		ldr	r3, [r3, #24]
 157 0090 002B     		cmp	r3, #0
 158 0092 2FD0     		beq	.L5
 122:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 159              		.loc 1 122 0 discriminator 1
 160 0094 7B68     		ldr	r3, [r7, #4]
 161 0096 5B69     		ldr	r3, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 162              		.loc 1 121 0 discriminator 1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 6


 163 0098 102B     		cmp	r3, #16
 164 009a 29D0     		beq	.L6
 165              		.loc 1 122 0 discriminator 3
 166 009c 7B68     		ldr	r3, [r7, #4]
 167 009e 5B69     		ldr	r3, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 168              		.loc 1 121 0 discriminator 3
 169 00a0 202B     		cmp	r3, #32
 170 00a2 23D0     		beq	.L7
 171              		.loc 1 122 0 discriminator 5
 172 00a4 7B68     		ldr	r3, [r7, #4]
 173 00a6 5B69     		ldr	r3, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 174              		.loc 1 121 0 discriminator 5
 175 00a8 302B     		cmp	r3, #48
 176 00aa 1DD0     		beq	.L8
 177              		.loc 1 122 0 discriminator 7
 178 00ac 7B68     		ldr	r3, [r7, #4]
 179 00ae 5B69     		ldr	r3, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 180              		.loc 1 121 0 discriminator 7
 181 00b0 602B     		cmp	r3, #96
 182 00b2 17D0     		beq	.L9
 183              		.loc 1 122 0 discriminator 9
 184 00b4 7B68     		ldr	r3, [r7, #4]
 185 00b6 5B69     		ldr	r3, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 186              		.loc 1 121 0 discriminator 9
 187 00b8 C02B     		cmp	r3, #192
 188 00ba 11D0     		beq	.L10
 189              		.loc 1 122 0 discriminator 11
 190 00bc 7B68     		ldr	r3, [r7, #4]
 191 00be 5969     		ldr	r1, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 192              		.loc 1 121 0 discriminator 11
 193 00c0 C023     		mov	r3, #192
 194 00c2 9B00     		lsl	r3, r3, #2
 195 00c4 9942     		cmp	r1, r3
 196 00c6 09D0     		beq	.L11
 197              		.loc 1 122 0 discriminator 13
 198 00c8 7B68     		ldr	r3, [r7, #4]
 199 00ca 5969     		ldr	r1, [r3, #20]
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 200              		.loc 1 121 0 discriminator 13
 201 00cc C023     		mov	r3, #192
 202 00ce DB00     		lsl	r3, r3, #3
 203 00d0 9942     		cmp	r1, r3
 204 00d2 01D1     		bne	.L12
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 205              		.loc 1 121 0 is_stmt 0 discriminator 15
 206 00d4 0623     		mov	r3, #6
 207 00d6 0EE0     		b	.L20
 208              	.L12:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 209              		.loc 1 121 0 discriminator 16
 210 00d8 0023     		mov	r3, #0
 211 00da 0CE0     		b	.L20
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 7


 212              	.L11:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 213              		.loc 1 121 0 discriminator 14
 214 00dc 0523     		mov	r3, #5
 215 00de 0AE0     		b	.L20
 216              	.L10:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 217              		.loc 1 121 0 discriminator 12
 218 00e0 0423     		mov	r3, #4
 219 00e2 08E0     		b	.L20
 220              	.L9:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 221              		.loc 1 121 0 discriminator 10
 222 00e4 0323     		mov	r3, #3
 223 00e6 06E0     		b	.L20
 224              	.L8:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 225              		.loc 1 121 0 discriminator 8
 226 00e8 0223     		mov	r3, #2
 227 00ea 04E0     		b	.L20
 228              	.L7:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 229              		.loc 1 121 0 discriminator 6
 230 00ec 0123     		mov	r3, #1
 231 00ee 02E0     		b	.L20
 232              	.L6:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 233              		.loc 1 121 0 discriminator 4
 234 00f0 0023     		mov	r3, #0
 235 00f2 00E0     		b	.L20
 236              	.L5:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 237              		.loc 1 121 0 discriminator 2
 238 00f4 1023     		mov	r3, #16
 239              	.L20:
 121:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 240              		.loc 1 121 0 discriminator 32
 241 00f6 1360     		str	r3, [r2]
 242 00f8 06E0     		b	.L21
 243              	.L4:
 123:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 (Comm_CTRL_OVS_IRDA_OVS16));
 124:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 125:.\Generated_Source\PSoC4/Comm_UART.c ****             else
 126:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 127:.\Generated_Source\PSoC4/Comm_UART.c ****                 /* OVS settings: UART and SmartCard */
 128:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_CTRL_REG  = Comm_GET_CTRL_OVS(config->oversample);
 244              		.loc 1 128 0 is_stmt 1
 245 00fa 7F4A     		ldr	r2, .L46+36
 246 00fc 7B68     		ldr	r3, [r7, #4]
 247 00fe 5B69     		ldr	r3, [r3, #20]
 248 0100 013B     		sub	r3, r3, #1
 249 0102 0F21     		mov	r1, #15
 250 0104 0B40     		and	r3, r1
 251 0106 1360     		str	r3, [r2]
 252              	.L21:
 129:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 130:.\Generated_Source\PSoC4/Comm_UART.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 8


 131:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_CTRL_REG     |= Comm_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 253              		.loc 1 131 0
 254 0108 7B4A     		ldr	r2, .L46+36
 255 010a 7B4B     		ldr	r3, .L46+36
 256 010c 1968     		ldr	r1, [r3]
 132:.\Generated_Source\PSoC4/Comm_UART.c ****                                              Comm_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 257              		.loc 1 132 0
 258 010e 7B68     		ldr	r3, [r7, #4]
 259 0110 9B6C     		ldr	r3, [r3, #72]
 260 0112 002B     		cmp	r3, #0
 261 0114 01D0     		beq	.L22
 262              		.loc 1 132 0 is_stmt 0 discriminator 1
 263 0116 794B     		ldr	r3, .L46+40
 264 0118 01E0     		b	.L23
 265              	.L22:
 266              		.loc 1 132 0 discriminator 2
 267 011a 8023     		mov	r3, #128
 268 011c 9B04     		lsl	r3, r3, #18
 269              	.L23:
 131:.\Generated_Source\PSoC4/Comm_UART.c ****                                              Comm_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 270              		.loc 1 131 0 is_stmt 1
 271 011e 0B43     		orr	r3, r1
 272 0120 1360     		str	r3, [r2]
 133:.\Generated_Source\PSoC4/Comm_UART.c ****                                              Comm_CTRL_UART;
 134:.\Generated_Source\PSoC4/Comm_UART.c **** 
 135:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 136:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_CTRL_REG = Comm_GET_UART_CTRL_MODE(config->mode);
 273              		.loc 1 136 0
 274 0122 774A     		ldr	r2, .L46+44
 275 0124 7B68     		ldr	r3, [r7, #4]
 276 0126 1B68     		ldr	r3, [r3]
 277 0128 1906     		lsl	r1, r3, #24
 278 012a C023     		mov	r3, #192
 279 012c 9B04     		lsl	r3, r3, #18
 280 012e 0B40     		and	r3, r1
 281 0130 1360     		str	r3, [r2]
 137:.\Generated_Source\PSoC4/Comm_UART.c **** 
 138:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure RX direction */
 139:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_RX_CTRL_REG = Comm_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 282              		.loc 1 139 0
 283 0132 744A     		ldr	r2, .L46+48
 284 0134 7B68     		ldr	r3, [r7, #4]
 285 0136 1B69     		ldr	r3, [r3, #16]
 286 0138 013B     		sub	r3, r3, #1
 287 013a 0721     		mov	r1, #7
 288 013c 1940     		and	r1, r3
 140:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 289              		.loc 1 140 0
 290 013e 7B68     		ldr	r3, [r7, #4]
 291 0140 5B6A     		ldr	r3, [r3, #36]
 292 0142 002B     		cmp	r3, #0
 293 0144 01D0     		beq	.L24
 294              		.loc 1 140 0 is_stmt 0 discriminator 1
 295 0146 4023     		mov	r3, #64
 296 0148 00E0     		b	.L25
 297              	.L24:
 298              		.loc 1 140 0 discriminator 2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 9


 299 014a 0023     		mov	r3, #0
 300              	.L25:
 139:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 301              		.loc 1 139 0 is_stmt 1
 302 014c 1943     		orr	r1, r3
 141:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 303              		.loc 1 141 0
 304 014e 7B68     		ldr	r3, [r7, #4]
 305 0150 5B6C     		ldr	r3, [r3, #68]
 306 0152 002B     		cmp	r3, #0
 307 0154 02D0     		beq	.L26
 308              		.loc 1 141 0 is_stmt 0 discriminator 1
 309 0156 8023     		mov	r3, #128
 310 0158 DB00     		lsl	r3, r3, #3
 311 015a 00E0     		b	.L27
 312              	.L26:
 313              		.loc 1 141 0 discriminator 2
 314 015c 0023     		mov	r3, #0
 315              	.L27:
 140:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 316              		.loc 1 140 0 is_stmt 1
 317 015e 1943     		orr	r1, r3
 142:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 318              		.loc 1 142 0
 319 0160 7B68     		ldr	r3, [r7, #4]
 320 0162 9B6A     		ldr	r3, [r3, #40]
 321 0164 002B     		cmp	r3, #0
 322 0166 02D0     		beq	.L28
 323              		.loc 1 142 0 is_stmt 0 discriminator 1
 324 0168 8023     		mov	r3, #128
 325 016a 5B00     		lsl	r3, r3, #1
 326 016c 00E0     		b	.L29
 327              	.L28:
 328              		.loc 1 142 0 discriminator 2
 329 016e 0023     		mov	r3, #0
 330              	.L29:
 141:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 331              		.loc 1 141 0 is_stmt 1
 332 0170 1943     		orr	r1, r3
 143:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 333              		.loc 1 143 0
 334 0172 7B68     		ldr	r3, [r7, #4]
 335 0174 DB6A     		ldr	r3, [r3, #44]
 336 0176 002B     		cmp	r3, #0
 337 0178 02D0     		beq	.L30
 338              		.loc 1 143 0 is_stmt 0 discriminator 1
 339 017a 8023     		mov	r3, #128
 340 017c 9B00     		lsl	r3, r3, #2
 341 017e 00E0     		b	.L31
 342              	.L30:
 343              		.loc 1 143 0 discriminator 2
 344 0180 0023     		mov	r3, #0
 345              	.L31:
 142:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 346              		.loc 1 142 0 is_stmt 1
 347 0182 0B43     		orr	r3, r1
 139:.\Generated_Source\PSoC4/Comm_UART.c ****                                         Comm_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 10


 348              		.loc 1 139 0
 349 0184 1360     		str	r3, [r2]
 144:.\Generated_Source\PSoC4/Comm_UART.c **** 
 145:.\Generated_Source\PSoC4/Comm_UART.c ****             if(Comm_UART_PARITY_NONE != config->parity)
 350              		.loc 1 145 0
 351 0186 7B68     		ldr	r3, [r7, #4]
 352 0188 DB68     		ldr	r3, [r3, #12]
 353 018a 022B     		cmp	r3, #2
 354 018c 0BD0     		beq	.L32
 146:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 147:.\Generated_Source\PSoC4/Comm_UART.c ****                Comm_UART_RX_CTRL_REG |= Comm_GET_UART_RX_CTRL_PARITY(config->parity) |
 355              		.loc 1 147 0
 356 018e 5D4A     		ldr	r2, .L46+48
 357 0190 5C4B     		ldr	r3, .L46+48
 358 0192 1968     		ldr	r1, [r3]
 359 0194 7B68     		ldr	r3, [r7, #4]
 360 0196 DB68     		ldr	r3, [r3, #12]
 361 0198 002B     		cmp	r3, #0
 362 019a 01D0     		beq	.L33
 363              		.loc 1 147 0 is_stmt 0 discriminator 1
 364 019c 3023     		mov	r3, #48
 365 019e 00E0     		b	.L34
 366              	.L33:
 367              		.loc 1 147 0 discriminator 2
 368 01a0 2023     		mov	r3, #32
 369              	.L34:
 370              		.loc 1 147 0 discriminator 4
 371 01a2 0B43     		orr	r3, r1
 372 01a4 1360     		str	r3, [r2]
 373              	.L32:
 148:.\Generated_Source\PSoC4/Comm_UART.c ****                                                     Comm_UART_RX_CTRL_PARITY_ENABLED;
 149:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 150:.\Generated_Source\PSoC4/Comm_UART.c **** 
 151:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_RX_CTRL_REG      = Comm_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 374              		.loc 1 151 0 is_stmt 1
 375 01a6 584A     		ldr	r2, .L46+52
 376 01a8 7B68     		ldr	r3, [r7, #4]
 377 01aa 9B68     		ldr	r3, [r3, #8]
 378 01ac 013B     		sub	r3, r3, #1
 379 01ae 0F21     		mov	r1, #15
 380 01b0 1940     		and	r1, r3
 152:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 381              		.loc 1 152 0
 382 01b2 7B68     		ldr	r3, [r7, #4]
 383 01b4 DB69     		ldr	r3, [r3, #28]
 384 01b6 002B     		cmp	r3, #0
 385 01b8 02D0     		beq	.L35
 386              		.loc 1 152 0 is_stmt 0 discriminator 1
 387 01ba 8023     		mov	r3, #128
 388 01bc 9B00     		lsl	r3, r3, #2
 389 01be 00E0     		b	.L36
 390              	.L35:
 391              		.loc 1 152 0 discriminator 2
 392 01c0 0023     		mov	r3, #0
 393              	.L36:
 151:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 394              		.loc 1 151 0 is_stmt 1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 11


 395 01c2 1943     		orr	r1, r3
 153:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_UART_RX_CTRL_ENABLED(config->direction);
 396              		.loc 1 153 0
 397 01c4 7B68     		ldr	r3, [r7, #4]
 398 01c6 5B68     		ldr	r3, [r3, #4]
 399 01c8 0120     		mov	r0, #1
 400 01ca 0340     		and	r3, r0
 401 01cc 02D0     		beq	.L37
 402              		.loc 1 153 0 is_stmt 0 discriminator 1
 403 01ce 8023     		mov	r3, #128
 404 01d0 1B06     		lsl	r3, r3, #24
 405 01d2 00E0     		b	.L38
 406              	.L37:
 407              		.loc 1 153 0 discriminator 2
 408 01d4 0023     		mov	r3, #0
 409              	.L38:
 152:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 410              		.loc 1 152 0 is_stmt 1
 411 01d6 0B43     		orr	r3, r1
 151:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 412              		.loc 1 151 0
 413 01d8 1360     		str	r3, [r2]
 154:.\Generated_Source\PSoC4/Comm_UART.c **** 
 155:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_RX_FIFO_CTRL_REG = Comm_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 414              		.loc 1 155 0
 415 01da 4C4A     		ldr	r2, .L46+56
 416 01dc 7B68     		ldr	r3, [r7, #4]
 417 01de DB6D     		ldr	r3, [r3, #92]
 418 01e0 0721     		mov	r1, #7
 419 01e2 0B40     		and	r3, r1
 420 01e4 1360     		str	r3, [r2]
 156:.\Generated_Source\PSoC4/Comm_UART.c **** 
 157:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure MP address */
 158:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_RX_MATCH_REG     = Comm_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 421              		.loc 1 158 0
 422 01e6 4A4A     		ldr	r2, .L46+60
 423 01e8 7B68     		ldr	r3, [r7, #4]
 424 01ea DB6C     		ldr	r3, [r3, #76]
 425 01ec FF21     		mov	r1, #255
 426 01ee 1940     		and	r1, r3
 159:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 427              		.loc 1 159 0
 428 01f0 7B68     		ldr	r3, [r7, #4]
 429 01f2 1B6D     		ldr	r3, [r3, #80]
 430 01f4 1804     		lsl	r0, r3, #16
 431 01f6 FF23     		mov	r3, #255
 432 01f8 1B04     		lsl	r3, r3, #16
 433 01fa 0340     		and	r3, r0
 158:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 434              		.loc 1 158 0
 435 01fc 0B43     		orr	r3, r1
 436 01fe 1360     		str	r3, [r2]
 160:.\Generated_Source\PSoC4/Comm_UART.c **** 
 161:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure RX direction */
 162:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_TX_CTRL_REG = Comm_GET_UART_TX_CTRL_MODE(config->stopBits) |
 437              		.loc 1 162 0
 438 0200 444A     		ldr	r2, .L46+64
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 12


 439 0202 7B68     		ldr	r3, [r7, #4]
 440 0204 1B69     		ldr	r3, [r3, #16]
 441 0206 013B     		sub	r3, r3, #1
 442 0208 0721     		mov	r1, #7
 443 020a 1940     		and	r1, r3
 163:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 444              		.loc 1 163 0
 445 020c 7B68     		ldr	r3, [r7, #4]
 446 020e 1B6A     		ldr	r3, [r3, #32]
 447 0210 002B     		cmp	r3, #0
 448 0212 02D0     		beq	.L39
 449              		.loc 1 163 0 is_stmt 0 discriminator 1
 450 0214 8023     		mov	r3, #128
 451 0216 5B00     		lsl	r3, r3, #1
 452 0218 00E0     		b	.L40
 453              	.L39:
 454              		.loc 1 163 0 discriminator 2
 455 021a 0023     		mov	r3, #0
 456              	.L40:
 162:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 457              		.loc 1 162 0 is_stmt 1
 458 021c 0B43     		orr	r3, r1
 459 021e 1360     		str	r3, [r2]
 164:.\Generated_Source\PSoC4/Comm_UART.c **** 
 165:.\Generated_Source\PSoC4/Comm_UART.c ****             if(Comm_UART_PARITY_NONE != config->parity)
 460              		.loc 1 165 0
 461 0220 7B68     		ldr	r3, [r7, #4]
 462 0222 DB68     		ldr	r3, [r3, #12]
 463 0224 022B     		cmp	r3, #2
 464 0226 0BD0     		beq	.L41
 166:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 167:.\Generated_Source\PSoC4/Comm_UART.c ****                Comm_UART_TX_CTRL_REG |= Comm_GET_UART_TX_CTRL_PARITY(config->parity) |
 465              		.loc 1 167 0
 466 0228 3A4A     		ldr	r2, .L46+64
 467 022a 3A4B     		ldr	r3, .L46+64
 468 022c 1968     		ldr	r1, [r3]
 469 022e 7B68     		ldr	r3, [r7, #4]
 470 0230 DB68     		ldr	r3, [r3, #12]
 471 0232 002B     		cmp	r3, #0
 472 0234 01D0     		beq	.L42
 473              		.loc 1 167 0 is_stmt 0 discriminator 1
 474 0236 3023     		mov	r3, #48
 475 0238 00E0     		b	.L43
 476              	.L42:
 477              		.loc 1 167 0 discriminator 2
 478 023a 2023     		mov	r3, #32
 479              	.L43:
 480              		.loc 1 167 0 discriminator 4
 481 023c 0B43     		orr	r3, r1
 482 023e 1360     		str	r3, [r2]
 483              	.L41:
 168:.\Generated_Source\PSoC4/Comm_UART.c ****                                                     Comm_UART_TX_CTRL_PARITY_ENABLED;
 169:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 170:.\Generated_Source\PSoC4/Comm_UART.c **** 
 171:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_TX_CTRL_REG      = Comm_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 484              		.loc 1 171 0 is_stmt 1
 485 0240 354A     		ldr	r2, .L46+68
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 13


 486 0242 7B68     		ldr	r3, [r7, #4]
 487 0244 9B68     		ldr	r3, [r3, #8]
 488 0246 013B     		sub	r3, r3, #1
 489 0248 0F21     		mov	r1, #15
 490 024a 1940     		and	r1, r3
 172:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_UART_TX_CTRL_ENABLED(config->direction);
 491              		.loc 1 172 0
 492 024c 7B68     		ldr	r3, [r7, #4]
 493 024e 5B68     		ldr	r3, [r3, #4]
 494 0250 0220     		mov	r0, #2
 495 0252 0340     		and	r3, r0
 496 0254 02D0     		beq	.L44
 497              		.loc 1 172 0 is_stmt 0 discriminator 1
 498 0256 8023     		mov	r3, #128
 499 0258 1B06     		lsl	r3, r3, #24
 500 025a 00E0     		b	.L45
 501              	.L44:
 502              		.loc 1 172 0 discriminator 2
 503 025c 0023     		mov	r3, #0
 504              	.L45:
 171:.\Generated_Source\PSoC4/Comm_UART.c ****                                                 Comm_GET_UART_TX_CTRL_ENABLED(config->direction);
 505              		.loc 1 171 0 is_stmt 1
 506 025e 0B43     		orr	r3, r1
 507 0260 1360     		str	r3, [r2]
 173:.\Generated_Source\PSoC4/Comm_UART.c **** 
 174:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_TX_FIFO_CTRL_REG = Comm_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 508              		.loc 1 174 0
 509 0262 2E4A     		ldr	r2, .L46+72
 510 0264 7B68     		ldr	r3, [r7, #4]
 511 0266 5B6E     		ldr	r3, [r3, #100]
 512 0268 0721     		mov	r1, #7
 513 026a 0B40     		and	r3, r1
 514 026c 1360     		str	r3, [r2]
 175:.\Generated_Source\PSoC4/Comm_UART.c **** 
 176:.\Generated_Source\PSoC4/Comm_UART.c ****         #if !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1)
 177:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_FLOW_CTRL_REG = Comm_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 178:.\Generated_Source\PSoC4/Comm_UART.c ****                                             Comm_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 179:.\Generated_Source\PSoC4/Comm_UART.c ****                                             Comm_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 180:.\Generated_Source\PSoC4/Comm_UART.c ****                                             Comm_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
 181:.\Generated_Source\PSoC4/Comm_UART.c ****         #endif /* !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1) */
 182:.\Generated_Source\PSoC4/Comm_UART.c **** 
 183:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 184:.\Generated_Source\PSoC4/Comm_UART.c ****             CyIntDisable    (Comm_ISR_NUMBER);
 515              		.loc 1 184 0
 516 026e 0A20     		mov	r0, #10
 517 0270 FFF7FEFF 		bl	CyIntDisable
 185:.\Generated_Source\PSoC4/Comm_UART.c ****             CyIntSetPriority(Comm_ISR_NUMBER, Comm_ISR_PRIORITY);
 518              		.loc 1 185 0
 519 0274 0A20     		mov	r0, #10
 520 0276 0321     		mov	r1, #3
 521 0278 FFF7FEFF 		bl	CyIntSetPriority
 186:.\Generated_Source\PSoC4/Comm_UART.c ****             (void) CyIntSetVector(Comm_ISR_NUMBER, &Comm_SPI_UART_ISR);
 522              		.loc 1 186 0
 523 027c 284B     		ldr	r3, .L46+76
 524 027e 0A20     		mov	r0, #10
 525 0280 191C     		mov	r1, r3
 526 0282 FFF7FEFF 		bl	CyIntSetVector
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 14


 187:.\Generated_Source\PSoC4/Comm_UART.c **** 
 188:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure WAKE interrupt */
 189:.\Generated_Source\PSoC4/Comm_UART.c ****         #if(Comm_UART_RX_WAKEUP_IRQ)
 190:.\Generated_Source\PSoC4/Comm_UART.c ****             CyIntDisable    (Comm_RX_WAKE_ISR_NUMBER);
 191:.\Generated_Source\PSoC4/Comm_UART.c ****             CyIntSetPriority(Comm_RX_WAKE_ISR_NUMBER, Comm_RX_WAKE_ISR_PRIORITY);
 192:.\Generated_Source\PSoC4/Comm_UART.c ****             (void) CyIntSetVector(Comm_RX_WAKE_ISR_NUMBER, &Comm_UART_WAKEUP_ISR);
 193:.\Generated_Source\PSoC4/Comm_UART.c ****         #endif /* (Comm_UART_RX_WAKEUP_IRQ) */
 194:.\Generated_Source\PSoC4/Comm_UART.c **** 
 195:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Configure interrupt sources */
 196:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_INTR_I2C_EC_MASK_REG = Comm_NO_INTR_SOURCES;
 527              		.loc 1 196 0
 528 0286 274B     		ldr	r3, .L46+80
 529 0288 0022     		mov	r2, #0
 530 028a 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_INTR_SPI_EC_MASK_REG = Comm_NO_INTR_SOURCES;
 531              		.loc 1 197 0
 532 028c 264B     		ldr	r3, .L46+84
 533 028e 0022     		mov	r2, #0
 534 0290 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_INTR_SLAVE_MASK_REG  = Comm_NO_INTR_SOURCES;
 535              		.loc 1 198 0
 536 0292 264B     		ldr	r3, .L46+88
 537 0294 0022     		mov	r2, #0
 538 0296 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_INTR_MASTER_MASK_REG = Comm_NO_INTR_SOURCES;
 539              		.loc 1 199 0
 540 0298 254B     		ldr	r3, .L46+92
 541 029a 0022     		mov	r2, #0
 542 029c 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_INTR_RX_MASK_REG     = config->rxInterruptMask;
 543              		.loc 1 200 0
 544 029e 254A     		ldr	r2, .L46+96
 545 02a0 7B68     		ldr	r3, [r7, #4]
 546 02a2 9B6D     		ldr	r3, [r3, #88]
 547 02a4 1360     		str	r3, [r2]
 201:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_INTR_TX_MASK_REG     = config->txInterruptMask;
 548              		.loc 1 201 0
 549 02a6 244A     		ldr	r2, .L46+100
 550 02a8 7B68     		ldr	r3, [r7, #4]
 551 02aa 1B6E     		ldr	r3, [r3, #96]
 552 02ac 1360     		str	r3, [r2]
 202:.\Generated_Source\PSoC4/Comm_UART.c **** 
 203:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Clear RX buffer indexes */
 204:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_rxBufferHead     = 0u;
 553              		.loc 1 204 0
 554 02ae 234B     		ldr	r3, .L46+104
 555 02b0 0022     		mov	r2, #0
 556 02b2 1A60     		str	r2, [r3]
 205:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_rxBufferTail     = 0u;
 557              		.loc 1 205 0
 558 02b4 224B     		ldr	r3, .L46+108
 559 02b6 0022     		mov	r2, #0
 560 02b8 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_rxBufferOverflow = 0u;
 561              		.loc 1 206 0
 562 02ba 224B     		ldr	r3, .L46+112
 563 02bc 0022     		mov	r2, #0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 15


 564 02be 1A70     		strb	r2, [r3]
 207:.\Generated_Source\PSoC4/Comm_UART.c **** 
 208:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Clear TX buffer indexes */
 209:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_txBufferHead = 0u;
 565              		.loc 1 209 0
 566 02c0 214B     		ldr	r3, .L46+116
 567 02c2 0022     		mov	r2, #0
 568 02c4 1A60     		str	r2, [r3]
 210:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_txBufferTail = 0u;
 569              		.loc 1 210 0
 570 02c6 214B     		ldr	r3, .L46+120
 571 02c8 0022     		mov	r2, #0
 572 02ca 1A60     		str	r2, [r3]
 573              	.L1:
 211:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 212:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 574              		.loc 1 212 0
 575 02cc BD46     		mov	sp, r7
 576 02ce 04B0     		add	sp, sp, #16
 577              		@ sp needed
 578 02d0 80BD     		pop	{r7, pc}
 579              	.L47:
 580 02d2 C046     		.align	2
 581              	.L46:
 582 02d4 00000000 		.word	Comm_scbMode
 583 02d8 00000000 		.word	Comm_scbEnableWake
 584 02dc 00000000 		.word	Comm_scbEnableIntr
 585 02e0 00000000 		.word	Comm_rxBuffer
 586 02e4 00000000 		.word	Comm_rxDataBits
 587 02e8 00000000 		.word	Comm_rxBufferSize
 588 02ec 00000000 		.word	Comm_txBuffer
 589 02f0 00000000 		.word	Comm_txDataBits
 590 02f4 00000000 		.word	Comm_txBufferSize
 591 02f8 00000640 		.word	1074135040
 592 02fc 00000102 		.word	33619968
 593 0300 40000640 		.word	1074135104
 594 0304 48000640 		.word	1074135112
 595 0308 00030640 		.word	1074135808
 596 030c 04030640 		.word	1074135812
 597 0310 10030640 		.word	1074135824
 598 0314 44000640 		.word	1074135108
 599 0318 00020640 		.word	1074135552
 600 031c 04020640 		.word	1074135556
 601 0320 00000000 		.word	Comm_SPI_UART_ISR
 602 0324 880E0640 		.word	1074138760
 603 0328 C80E0640 		.word	1074138824
 604 032c 480F0640 		.word	1074138952
 605 0330 080F0640 		.word	1074138888
 606 0334 C80F0640 		.word	1074139080
 607 0338 880F0640 		.word	1074139016
 608 033c 00000000 		.word	Comm_rxBufferHead
 609 0340 00000000 		.word	Comm_rxBufferTail
 610 0344 00000000 		.word	Comm_rxBufferOverflow
 611 0348 00000000 		.word	Comm_txBufferHead
 612 034c 00000000 		.word	Comm_txBufferTail
 613              		.cfi_endproc
 614              	.LFE0:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 16


 615              		.size	Comm_UartInit, .-Comm_UartInit
 616              		.section	.text.Comm_UartPostEnable,"ax",%progbits
 617              		.align	2
 618              		.global	Comm_UartPostEnable
 619              		.code	16
 620              		.thumb_func
 621              		.type	Comm_UartPostEnable, %function
 622              	Comm_UartPostEnable:
 623              	.LFB1:
 213:.\Generated_Source\PSoC4/Comm_UART.c **** 
 214:.\Generated_Source\PSoC4/Comm_UART.c **** #else
 215:.\Generated_Source\PSoC4/Comm_UART.c **** 
 216:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 217:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartInit
 218:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 219:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 220:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 221:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Configures the SCB for the UART operation.
 222:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 223:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 224:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 225:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 226:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 227:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 228:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 229:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 230:.\Generated_Source\PSoC4/Comm_UART.c ****     void Comm_UartInit(void)
 231:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 232:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure UART interface */
 233:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_CTRL_REG = Comm_UART_DEFAULT_CTRL;
 234:.\Generated_Source\PSoC4/Comm_UART.c **** 
 235:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 236:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_CTRL_REG = Comm_UART_DEFAULT_UART_CTRL;
 237:.\Generated_Source\PSoC4/Comm_UART.c **** 
 238:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure RX direction */
 239:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_RX_CTRL_REG = Comm_UART_DEFAULT_UART_RX_CTRL;
 240:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_RX_CTRL_REG      = Comm_UART_DEFAULT_RX_CTRL;
 241:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_RX_FIFO_CTRL_REG = Comm_UART_DEFAULT_RX_FIFO_CTRL;
 242:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_RX_MATCH_REG     = Comm_UART_DEFAULT_RX_MATCH_REG;
 243:.\Generated_Source\PSoC4/Comm_UART.c **** 
 244:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure TX direction */
 245:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_TX_CTRL_REG = Comm_UART_DEFAULT_UART_TX_CTRL;
 246:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_TX_CTRL_REG      = Comm_UART_DEFAULT_TX_CTRL;
 247:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_TX_FIFO_CTRL_REG = Comm_UART_DEFAULT_TX_FIFO_CTRL;
 248:.\Generated_Source\PSoC4/Comm_UART.c **** 
 249:.\Generated_Source\PSoC4/Comm_UART.c ****     #if !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1)
 250:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_FLOW_CTRL_REG = Comm_UART_DEFAULT_FLOW_CTRL;
 251:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1) */
 252:.\Generated_Source\PSoC4/Comm_UART.c **** 
 253:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 254:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_SCB_IRQ_INTERNAL)
 255:.\Generated_Source\PSoC4/Comm_UART.c ****         CyIntDisable    (Comm_ISR_NUMBER);
 256:.\Generated_Source\PSoC4/Comm_UART.c ****         CyIntSetPriority(Comm_ISR_NUMBER, Comm_ISR_PRIORITY);
 257:.\Generated_Source\PSoC4/Comm_UART.c ****         (void) CyIntSetVector(Comm_ISR_NUMBER, &Comm_SPI_UART_ISR);
 258:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_SCB_IRQ_INTERNAL) */
 259:.\Generated_Source\PSoC4/Comm_UART.c **** 
 260:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure WAKE interrupt */
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 17


 261:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_UART_RX_WAKEUP_IRQ)
 262:.\Generated_Source\PSoC4/Comm_UART.c ****         CyIntDisable    (Comm_RX_WAKE_ISR_NUMBER);
 263:.\Generated_Source\PSoC4/Comm_UART.c ****         CyIntSetPriority(Comm_RX_WAKE_ISR_NUMBER, Comm_RX_WAKE_ISR_PRIORITY);
 264:.\Generated_Source\PSoC4/Comm_UART.c ****         (void) CyIntSetVector(Comm_RX_WAKE_ISR_NUMBER, &Comm_UART_WAKEUP_ISR);
 265:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_UART_RX_WAKEUP_IRQ) */
 266:.\Generated_Source\PSoC4/Comm_UART.c **** 
 267:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Configure interrupt sources */
 268:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_INTR_I2C_EC_MASK_REG = Comm_UART_DEFAULT_INTR_I2C_EC_MASK;
 269:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_INTR_SPI_EC_MASK_REG = Comm_UART_DEFAULT_INTR_SPI_EC_MASK;
 270:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_INTR_SLAVE_MASK_REG  = Comm_UART_DEFAULT_INTR_SLAVE_MASK;
 271:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_INTR_MASTER_MASK_REG = Comm_UART_DEFAULT_INTR_MASTER_MASK;
 272:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_INTR_RX_MASK_REG     = Comm_UART_DEFAULT_INTR_RX_MASK;
 273:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_INTR_TX_MASK_REG     = Comm_UART_DEFAULT_INTR_TX_MASK;
 274:.\Generated_Source\PSoC4/Comm_UART.c **** 
 275:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_INTERNAL_RX_SW_BUFFER_CONST)
 276:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_rxBufferHead     = 0u;
 277:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_rxBufferTail     = 0u;
 278:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_rxBufferOverflow = 0u;
 279:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_INTERNAL_RX_SW_BUFFER_CONST) */
 280:.\Generated_Source\PSoC4/Comm_UART.c **** 
 281:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_INTERNAL_TX_SW_BUFFER_CONST)
 282:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_txBufferHead = 0u;
 283:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_txBufferTail = 0u;
 284:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_INTERNAL_TX_SW_BUFFER_CONST) */
 285:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 286:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_SCB_MODE_UNCONFIG_CONST_CFG) */
 287:.\Generated_Source\PSoC4/Comm_UART.c **** 
 288:.\Generated_Source\PSoC4/Comm_UART.c **** 
 289:.\Generated_Source\PSoC4/Comm_UART.c **** /*******************************************************************************
 290:.\Generated_Source\PSoC4/Comm_UART.c **** * Function Name: Comm_UartPostEnable
 291:.\Generated_Source\PSoC4/Comm_UART.c **** ********************************************************************************
 292:.\Generated_Source\PSoC4/Comm_UART.c **** *
 293:.\Generated_Source\PSoC4/Comm_UART.c **** * Summary:
 294:.\Generated_Source\PSoC4/Comm_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be 
 295:.\Generated_Source\PSoC4/Comm_UART.c **** *  controlled by the SCB UART.
 296:.\Generated_Source\PSoC4/Comm_UART.c **** *
 297:.\Generated_Source\PSoC4/Comm_UART.c **** * Parameters:
 298:.\Generated_Source\PSoC4/Comm_UART.c **** *  None
 299:.\Generated_Source\PSoC4/Comm_UART.c **** *
 300:.\Generated_Source\PSoC4/Comm_UART.c **** * Return:
 301:.\Generated_Source\PSoC4/Comm_UART.c **** *  None
 302:.\Generated_Source\PSoC4/Comm_UART.c **** *
 303:.\Generated_Source\PSoC4/Comm_UART.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/Comm_UART.c **** void Comm_UartPostEnable(void)
 305:.\Generated_Source\PSoC4/Comm_UART.c **** {
 624              		.loc 1 305 0
 625              		.cfi_startproc
 626 0000 80B5     		push	{r7, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 306:.\Generated_Source\PSoC4/Comm_UART.c **** #if (Comm_SCB_MODE_UNCONFIG_CONST_CFG)
 307:.\Generated_Source\PSoC4/Comm_UART.c **** 
 308:.\Generated_Source\PSoC4/Comm_UART.c **** #if (Comm_TX_SDA_MISO_PIN)
 309:.\Generated_Source\PSoC4/Comm_UART.c ****     if (Comm_CHECK_TX_SDA_MISO_PIN_USED)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 18


 632              		.loc 1 309 0
 633 0004 074B     		ldr	r3, .L50
 634 0006 1B68     		ldr	r3, [r3]
 635 0008 3822     		mov	r2, #56
 636 000a 1340     		and	r3, r2
 637 000c DB08     		lsr	r3, r3, #3
 638 000e 07D0     		beq	.L48
 310:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 311:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Set SCB UART to drive the output pin */
 312:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_SET_HSIOM_SEL(Comm_TX_SDA_MISO_HSIOM_REG, Comm_TX_SDA_MISO_HSIOM_MASK,
 639              		.loc 1 312 0
 640 0010 054B     		ldr	r3, .L50+4
 641 0012 054A     		ldr	r2, .L50+4
 642 0014 1268     		ldr	r2, [r2]
 643 0016 F021     		mov	r1, #240
 644 0018 8A43     		bic	r2, r1
 645 001a 9021     		mov	r1, #144
 646 001c 0A43     		orr	r2, r1
 647 001e 1A60     		str	r2, [r3]
 648              	.L48:
 313:.\Generated_Source\PSoC4/Comm_UART.c ****                                        Comm_TX_SDA_MISO_HSIOM_POS, Comm_HSIOM_UART_SEL);
 314:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 315:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_TX_SDA_MISO_PIN_PIN) */
 316:.\Generated_Source\PSoC4/Comm_UART.c **** 
 317:.\Generated_Source\PSoC4/Comm_UART.c **** #if (Comm_SS0_PIN)
 318:.\Generated_Source\PSoC4/Comm_UART.c ****     if (Comm_CHECK_SS0_PIN_USED)
 319:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 320:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Set SCB UART to drive the output pin */
 321:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_SET_HSIOM_SEL(Comm_SS0_HSIOM_REG, Comm_SS0_HSIOM_MASK,
 322:.\Generated_Source\PSoC4/Comm_UART.c ****                                        Comm_SS0_HSIOM_POS, Comm_HSIOM_UART_SEL);
 323:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 324:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_SS0_PIN) */
 325:.\Generated_Source\PSoC4/Comm_UART.c **** 
 326:.\Generated_Source\PSoC4/Comm_UART.c **** #else
 327:.\Generated_Source\PSoC4/Comm_UART.c **** #if (Comm_UART_TX_PIN)
 328:.\Generated_Source\PSoC4/Comm_UART.c ****      /* Set SCB UART to drive the output pin */
 329:.\Generated_Source\PSoC4/Comm_UART.c ****     Comm_SET_HSIOM_SEL(Comm_TX_HSIOM_REG, Comm_TX_HSIOM_MASK,
 330:.\Generated_Source\PSoC4/Comm_UART.c ****                                    Comm_TX_HSIOM_POS, Comm_HSIOM_UART_SEL);
 331:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_UART_TX_PIN) */
 332:.\Generated_Source\PSoC4/Comm_UART.c **** 
 333:.\Generated_Source\PSoC4/Comm_UART.c **** #if (Comm_UART_RTS_PIN)
 334:.\Generated_Source\PSoC4/Comm_UART.c ****     /* Set SCB UART to drive the output pin */
 335:.\Generated_Source\PSoC4/Comm_UART.c ****     Comm_SET_HSIOM_SEL(Comm_RTS_HSIOM_REG, Comm_RTS_HSIOM_MASK,
 336:.\Generated_Source\PSoC4/Comm_UART.c ****                                    Comm_RTS_HSIOM_POS, Comm_HSIOM_UART_SEL);
 337:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_UART_RTS_PIN) */
 338:.\Generated_Source\PSoC4/Comm_UART.c **** 
 339:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_SCB_MODE_UNCONFIG_CONST_CFG) */
 340:.\Generated_Source\PSoC4/Comm_UART.c **** }
 649              		.loc 1 340 0
 650 0020 BD46     		mov	sp, r7
 651              		@ sp needed
 652 0022 80BD     		pop	{r7, pc}
 653              	.L51:
 654              		.align	2
 655              	.L50:
 656 0024 08040440 		.word	1074005000
 657 0028 10000140 		.word	1073807376
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 19


 658              		.cfi_endproc
 659              	.LFE1:
 660              		.size	Comm_UartPostEnable, .-Comm_UartPostEnable
 661              		.section	.text.Comm_UartStop,"ax",%progbits
 662              		.align	2
 663              		.global	Comm_UartStop
 664              		.code	16
 665              		.thumb_func
 666              		.type	Comm_UartStop, %function
 667              	Comm_UartStop:
 668              	.LFB2:
 341:.\Generated_Source\PSoC4/Comm_UART.c **** 
 342:.\Generated_Source\PSoC4/Comm_UART.c **** 
 343:.\Generated_Source\PSoC4/Comm_UART.c **** /*******************************************************************************
 344:.\Generated_Source\PSoC4/Comm_UART.c **** * Function Name: Comm_UartStop
 345:.\Generated_Source\PSoC4/Comm_UART.c **** ********************************************************************************
 346:.\Generated_Source\PSoC4/Comm_UART.c **** *
 347:.\Generated_Source\PSoC4/Comm_UART.c **** * Summary:
 348:.\Generated_Source\PSoC4/Comm_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 349:.\Generated_Source\PSoC4/Comm_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 350:.\Generated_Source\PSoC4/Comm_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature to
 351:.\Generated_Source\PSoC4/Comm_UART.c **** *  not cause it to trigger after the component is enabled.
 352:.\Generated_Source\PSoC4/Comm_UART.c **** *
 353:.\Generated_Source\PSoC4/Comm_UART.c **** * Parameters:
 354:.\Generated_Source\PSoC4/Comm_UART.c **** *  None
 355:.\Generated_Source\PSoC4/Comm_UART.c **** *
 356:.\Generated_Source\PSoC4/Comm_UART.c **** * Return:
 357:.\Generated_Source\PSoC4/Comm_UART.c **** *  None
 358:.\Generated_Source\PSoC4/Comm_UART.c **** *
 359:.\Generated_Source\PSoC4/Comm_UART.c **** *******************************************************************************/
 360:.\Generated_Source\PSoC4/Comm_UART.c **** void Comm_UartStop(void)
 361:.\Generated_Source\PSoC4/Comm_UART.c **** {
 669              		.loc 1 361 0
 670              		.cfi_startproc
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 00AF     		add	r7, sp, #0
 676              		.cfi_def_cfa_register 7
 362:.\Generated_Source\PSoC4/Comm_UART.c **** #if(Comm_SCB_MODE_UNCONFIG_CONST_CFG)
 363:.\Generated_Source\PSoC4/Comm_UART.c ****     #if (Comm_TX_SDA_MISO_PIN)
 364:.\Generated_Source\PSoC4/Comm_UART.c ****         if (Comm_CHECK_TX_SDA_MISO_PIN_USED)
 677              		.loc 1 364 0
 678 0004 094B     		ldr	r3, .L54
 679 0006 1B68     		ldr	r3, [r3]
 680 0008 3822     		mov	r2, #56
 681 000a 1340     		and	r3, r2
 682 000c DB08     		lsr	r3, r3, #3
 683 000e 05D0     		beq	.L53
 365:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 366:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Set GPIO to drive output pin */
 367:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_SET_HSIOM_SEL(Comm_TX_SDA_MISO_HSIOM_REG, Comm_TX_SDA_MISO_HSIOM_MASK,
 684              		.loc 1 367 0
 685 0010 074B     		ldr	r3, .L54+4
 686 0012 074A     		ldr	r2, .L54+4
 687 0014 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 20


 688 0016 F021     		mov	r1, #240
 689 0018 8A43     		bic	r2, r1
 690 001a 1A60     		str	r2, [r3]
 691              	.L53:
 368:.\Generated_Source\PSoC4/Comm_UART.c ****                                            Comm_TX_SDA_MISO_HSIOM_POS, Comm_HSIOM_GPIO_SEL);
 369:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 370:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_TX_SDA_MISO_PIN_PIN) */
 371:.\Generated_Source\PSoC4/Comm_UART.c **** 
 372:.\Generated_Source\PSoC4/Comm_UART.c ****     #if (Comm_SS0_PIN)
 373:.\Generated_Source\PSoC4/Comm_UART.c ****         if (Comm_CHECK_SS0_PIN_USED)
 374:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 375:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Set output pin state after block is disabled */
 376:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_spi_ss0_Write(Comm_GET_UART_RTS_INACTIVE);
 377:.\Generated_Source\PSoC4/Comm_UART.c **** 
 378:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Set GPIO to drive output pin */
 379:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_SET_HSIOM_SEL(Comm_SS0_HSIOM_REG, Comm_SS0_HSIOM_MASK,
 380:.\Generated_Source\PSoC4/Comm_UART.c ****                                            Comm_SS0_HSIOM_POS, Comm_HSIOM_GPIO_SEL);
 381:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 382:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_SS0_PIN) */
 383:.\Generated_Source\PSoC4/Comm_UART.c **** 
 384:.\Generated_Source\PSoC4/Comm_UART.c **** #else
 385:.\Generated_Source\PSoC4/Comm_UART.c ****     #if (Comm_UART_TX_PIN)
 386:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Set GPIO to drive output pin */
 387:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_SET_HSIOM_SEL(Comm_TX_HSIOM_REG, Comm_TX_HSIOM_MASK,
 388:.\Generated_Source\PSoC4/Comm_UART.c ****                                        Comm_TX_HSIOM_POS, Comm_HSIOM_GPIO_SEL);
 389:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_UART_TX_PIN) */
 390:.\Generated_Source\PSoC4/Comm_UART.c **** 
 391:.\Generated_Source\PSoC4/Comm_UART.c ****     #if (Comm_UART_RTS_PIN)
 392:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Set output pin state after block is disabled */
 393:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_rts_Write(Comm_GET_UART_RTS_INACTIVE);
 394:.\Generated_Source\PSoC4/Comm_UART.c **** 
 395:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Set GPIO to drive output pin */
 396:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_SET_HSIOM_SEL(Comm_RTS_HSIOM_REG, Comm_RTS_HSIOM_MASK,
 397:.\Generated_Source\PSoC4/Comm_UART.c ****                                        Comm_RTS_HSIOM_POS, Comm_HSIOM_GPIO_SEL);
 398:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_UART_RTS_PIN) */
 399:.\Generated_Source\PSoC4/Comm_UART.c **** 
 400:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_SCB_MODE_UNCONFIG_CONST_CFG) */
 401:.\Generated_Source\PSoC4/Comm_UART.c **** 
 402:.\Generated_Source\PSoC4/Comm_UART.c **** #if (Comm_UART_WAKE_ENABLE_CONST)
 403:.\Generated_Source\PSoC4/Comm_UART.c ****     /* Disable skip start feature used for wakeup */
 404:.\Generated_Source\PSoC4/Comm_UART.c ****     Comm_UART_RX_CTRL_REG &= (uint32) ~Comm_UART_RX_CTRL_SKIP_START;
 692              		.loc 1 404 0
 693 001c 054B     		ldr	r3, .L54+8
 694 001e 054A     		ldr	r2, .L54+8
 695 0020 1268     		ldr	r2, [r2]
 696 0022 0549     		ldr	r1, .L54+12
 697 0024 0A40     		and	r2, r1
 698 0026 1A60     		str	r2, [r3]
 405:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_UART_WAKE_ENABLE_CONST) */
 406:.\Generated_Source\PSoC4/Comm_UART.c **** }
 699              		.loc 1 406 0
 700 0028 BD46     		mov	sp, r7
 701              		@ sp needed
 702 002a 80BD     		pop	{r7, pc}
 703              	.L55:
 704              		.align	2
 705              	.L54:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 21


 706 002c 08040440 		.word	1074005000
 707 0030 10000140 		.word	1073807376
 708 0034 48000640 		.word	1074135112
 709 0038 FFDFFFFF 		.word	-8193
 710              		.cfi_endproc
 711              	.LFE2:
 712              		.size	Comm_UartStop, .-Comm_UartStop
 713              		.section	.text.Comm_UartSetRxAddress,"ax",%progbits
 714              		.align	2
 715              		.global	Comm_UartSetRxAddress
 716              		.code	16
 717              		.thumb_func
 718              		.type	Comm_UartSetRxAddress, %function
 719              	Comm_UartSetRxAddress:
 720              	.LFB3:
 407:.\Generated_Source\PSoC4/Comm_UART.c **** 
 408:.\Generated_Source\PSoC4/Comm_UART.c **** 
 409:.\Generated_Source\PSoC4/Comm_UART.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/Comm_UART.c **** * Function Name: Comm_UartSetRxAddress
 411:.\Generated_Source\PSoC4/Comm_UART.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/Comm_UART.c **** *
 413:.\Generated_Source\PSoC4/Comm_UART.c **** * Summary:
 414:.\Generated_Source\PSoC4/Comm_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 415:.\Generated_Source\PSoC4/Comm_UART.c **** *  Multiprocessor mode.
 416:.\Generated_Source\PSoC4/Comm_UART.c **** *
 417:.\Generated_Source\PSoC4/Comm_UART.c **** * Parameters:
 418:.\Generated_Source\PSoC4/Comm_UART.c **** *  address: Address for hardware address detection.
 419:.\Generated_Source\PSoC4/Comm_UART.c **** *
 420:.\Generated_Source\PSoC4/Comm_UART.c **** * Return:
 421:.\Generated_Source\PSoC4/Comm_UART.c **** *  None
 422:.\Generated_Source\PSoC4/Comm_UART.c **** *
 423:.\Generated_Source\PSoC4/Comm_UART.c **** *******************************************************************************/
 424:.\Generated_Source\PSoC4/Comm_UART.c **** void Comm_UartSetRxAddress(uint32 address)
 425:.\Generated_Source\PSoC4/Comm_UART.c **** {
 721              		.loc 1 425 0
 722              		.cfi_startproc
 723 0000 80B5     		push	{r7, lr}
 724              		.cfi_def_cfa_offset 8
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 84B0     		sub	sp, sp, #16
 728              		.cfi_def_cfa_offset 24
 729 0004 00AF     		add	r7, sp, #0
 730              		.cfi_def_cfa_register 7
 731 0006 7860     		str	r0, [r7, #4]
 426:.\Generated_Source\PSoC4/Comm_UART.c ****      uint32 matchReg;
 427:.\Generated_Source\PSoC4/Comm_UART.c **** 
 428:.\Generated_Source\PSoC4/Comm_UART.c ****     matchReg = Comm_RX_MATCH_REG;
 732              		.loc 1 428 0
 733 0008 094B     		ldr	r3, .L57
 734 000a 1B68     		ldr	r3, [r3]
 735 000c FB60     		str	r3, [r7, #12]
 429:.\Generated_Source\PSoC4/Comm_UART.c **** 
 430:.\Generated_Source\PSoC4/Comm_UART.c ****     matchReg &= ((uint32) ~Comm_RX_MATCH_ADDR_MASK); /* Clear address bits */
 736              		.loc 1 430 0
 737 000e FB68     		ldr	r3, [r7, #12]
 738 0010 FF22     		mov	r2, #255
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 22


 739 0012 9343     		bic	r3, r2
 740 0014 FB60     		str	r3, [r7, #12]
 431:.\Generated_Source\PSoC4/Comm_UART.c ****     matchReg |= ((uint32)  (address & Comm_RX_MATCH_ADDR_MASK)); /* Set address  */
 741              		.loc 1 431 0
 742 0016 7B68     		ldr	r3, [r7, #4]
 743 0018 FF22     		mov	r2, #255
 744 001a 1340     		and	r3, r2
 745 001c FA68     		ldr	r2, [r7, #12]
 746 001e 1343     		orr	r3, r2
 747 0020 FB60     		str	r3, [r7, #12]
 432:.\Generated_Source\PSoC4/Comm_UART.c **** 
 433:.\Generated_Source\PSoC4/Comm_UART.c ****     Comm_RX_MATCH_REG = matchReg;
 748              		.loc 1 433 0
 749 0022 034B     		ldr	r3, .L57
 750 0024 FA68     		ldr	r2, [r7, #12]
 751 0026 1A60     		str	r2, [r3]
 434:.\Generated_Source\PSoC4/Comm_UART.c **** }
 752              		.loc 1 434 0
 753 0028 BD46     		mov	sp, r7
 754 002a 04B0     		add	sp, sp, #16
 755              		@ sp needed
 756 002c 80BD     		pop	{r7, pc}
 757              	.L58:
 758 002e C046     		.align	2
 759              	.L57:
 760 0030 10030640 		.word	1074135824
 761              		.cfi_endproc
 762              	.LFE3:
 763              		.size	Comm_UartSetRxAddress, .-Comm_UartSetRxAddress
 764              		.section	.text.Comm_UartSetRxAddressMask,"ax",%progbits
 765              		.align	2
 766              		.global	Comm_UartSetRxAddressMask
 767              		.code	16
 768              		.thumb_func
 769              		.type	Comm_UartSetRxAddressMask, %function
 770              	Comm_UartSetRxAddressMask:
 771              	.LFB4:
 435:.\Generated_Source\PSoC4/Comm_UART.c **** 
 436:.\Generated_Source\PSoC4/Comm_UART.c **** 
 437:.\Generated_Source\PSoC4/Comm_UART.c **** /*******************************************************************************
 438:.\Generated_Source\PSoC4/Comm_UART.c **** * Function Name: Comm_UartSetRxAddressMask
 439:.\Generated_Source\PSoC4/Comm_UART.c **** ********************************************************************************
 440:.\Generated_Source\PSoC4/Comm_UART.c **** *
 441:.\Generated_Source\PSoC4/Comm_UART.c **** * Summary:
 442:.\Generated_Source\PSoC4/Comm_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 443:.\Generated_Source\PSoC4/Comm_UART.c **** *
 444:.\Generated_Source\PSoC4/Comm_UART.c **** * Parameters:
 445:.\Generated_Source\PSoC4/Comm_UART.c **** *  addressMask: Address mask.
 446:.\Generated_Source\PSoC4/Comm_UART.c **** *   0 - address bit does not care while comparison.
 447:.\Generated_Source\PSoC4/Comm_UART.c **** *   1 - address bit is significant while comparison.
 448:.\Generated_Source\PSoC4/Comm_UART.c **** *
 449:.\Generated_Source\PSoC4/Comm_UART.c **** * Return:
 450:.\Generated_Source\PSoC4/Comm_UART.c **** *  None
 451:.\Generated_Source\PSoC4/Comm_UART.c **** *
 452:.\Generated_Source\PSoC4/Comm_UART.c **** *******************************************************************************/
 453:.\Generated_Source\PSoC4/Comm_UART.c **** void Comm_UartSetRxAddressMask(uint32 addressMask)
 454:.\Generated_Source\PSoC4/Comm_UART.c **** {
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 23


 772              		.loc 1 454 0
 773              		.cfi_startproc
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 84B0     		sub	sp, sp, #16
 779              		.cfi_def_cfa_offset 24
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 782 0006 7860     		str	r0, [r7, #4]
 455:.\Generated_Source\PSoC4/Comm_UART.c ****     uint32 matchReg;
 456:.\Generated_Source\PSoC4/Comm_UART.c **** 
 457:.\Generated_Source\PSoC4/Comm_UART.c ****     matchReg = Comm_RX_MATCH_REG;
 783              		.loc 1 457 0
 784 0008 084B     		ldr	r3, .L60
 785 000a 1B68     		ldr	r3, [r3]
 786 000c FB60     		str	r3, [r7, #12]
 458:.\Generated_Source\PSoC4/Comm_UART.c **** 
 459:.\Generated_Source\PSoC4/Comm_UART.c ****     matchReg &= ((uint32) ~Comm_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 787              		.loc 1 459 0
 788 000e FB68     		ldr	r3, [r7, #12]
 789 0010 074A     		ldr	r2, .L60+4
 790 0012 1340     		and	r3, r2
 791 0014 FB60     		str	r3, [r7, #12]
 460:.\Generated_Source\PSoC4/Comm_UART.c ****     matchReg |= ((uint32) (addressMask << Comm_RX_MATCH_MASK_POS));
 792              		.loc 1 460 0
 793 0016 7B68     		ldr	r3, [r7, #4]
 794 0018 1B04     		lsl	r3, r3, #16
 795 001a FA68     		ldr	r2, [r7, #12]
 796 001c 1343     		orr	r3, r2
 797 001e FB60     		str	r3, [r7, #12]
 461:.\Generated_Source\PSoC4/Comm_UART.c **** 
 462:.\Generated_Source\PSoC4/Comm_UART.c ****     Comm_RX_MATCH_REG = matchReg;
 798              		.loc 1 462 0
 799 0020 024B     		ldr	r3, .L60
 800 0022 FA68     		ldr	r2, [r7, #12]
 801 0024 1A60     		str	r2, [r3]
 463:.\Generated_Source\PSoC4/Comm_UART.c **** }
 802              		.loc 1 463 0
 803 0026 BD46     		mov	sp, r7
 804 0028 04B0     		add	sp, sp, #16
 805              		@ sp needed
 806 002a 80BD     		pop	{r7, pc}
 807              	.L61:
 808              		.align	2
 809              	.L60:
 810 002c 10030640 		.word	1074135824
 811 0030 FFFF00FF 		.word	-16711681
 812              		.cfi_endproc
 813              	.LFE4:
 814              		.size	Comm_UartSetRxAddressMask, .-Comm_UartSetRxAddressMask
 815              		.section	.text.Comm_UartGetChar,"ax",%progbits
 816              		.align	2
 817              		.global	Comm_UartGetChar
 818              		.code	16
 819              		.thumb_func
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 24


 820              		.type	Comm_UartGetChar, %function
 821              	Comm_UartGetChar:
 822              	.LFB5:
 464:.\Generated_Source\PSoC4/Comm_UART.c **** 
 465:.\Generated_Source\PSoC4/Comm_UART.c **** 
 466:.\Generated_Source\PSoC4/Comm_UART.c **** #if(Comm_UART_RX_DIRECTION)
 467:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 468:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartGetChar
 469:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 470:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 471:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 472:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Retrieves the next data element from the receive buffer.
 473:.\Generated_Source\PSoC4/Comm_UART.c ****     *  This function is designed for ASCII characters and returns a char
 474:.\Generated_Source\PSoC4/Comm_UART.c ****     *  where 1 to 255 are valid characters and 0 indicates an error occurred or
 475:.\Generated_Source\PSoC4/Comm_UART.c ****     *  no data present.
 476:.\Generated_Source\PSoC4/Comm_UART.c ****     *  - The RX software buffer is disabled: returns the data element
 477:.\Generated_Source\PSoC4/Comm_UART.c ****     *    retrieved from the RX FIFO.
 478:.\Generated_Source\PSoC4/Comm_UART.c ****     *    Undefined data will be returned if the RX FIFO is empty.
 479:.\Generated_Source\PSoC4/Comm_UART.c ****     *  - The RX software buffer is enabled: returns the data element from
 480:.\Generated_Source\PSoC4/Comm_UART.c ****     *    the software receive buffer.
 481:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 482:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 483:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 484:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 485:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 486:.\Generated_Source\PSoC4/Comm_UART.c ****     *  The next data element from the receive buffer.
 487:.\Generated_Source\PSoC4/Comm_UART.c ****     *  ASCII character values from 1 to 255 are valid.
 488:.\Generated_Source\PSoC4/Comm_UART.c ****     *  A returned zero signifies an error condition or no data available.
 489:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 490:.\Generated_Source\PSoC4/Comm_UART.c ****     * Side Effects:
 491:.\Generated_Source\PSoC4/Comm_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 492:.\Generated_Source\PSoC4/Comm_UART.c ****     *  and software buffer usage.
 493:.\Generated_Source\PSoC4/Comm_UART.c ****     *  RX software buffer is enabled: The internal software buffer overflow
 494:.\Generated_Source\PSoC4/Comm_UART.c ****     *  does not treat as an error condition.
 495:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 496:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 497:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 498:.\Generated_Source\PSoC4/Comm_UART.c ****     uint32 Comm_UartGetChar(void)
 499:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 823              		.loc 1 499 0
 824              		.cfi_startproc
 825 0000 80B5     		push	{r7, lr}
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 7, -8
 828              		.cfi_offset 14, -4
 829 0002 82B0     		sub	sp, sp, #8
 830              		.cfi_def_cfa_offset 16
 831 0004 00AF     		add	r7, sp, #0
 832              		.cfi_def_cfa_register 7
 500:.\Generated_Source\PSoC4/Comm_UART.c ****         uint32 rxData = 0u;
 833              		.loc 1 500 0
 834 0006 0023     		mov	r3, #0
 835 0008 7B60     		str	r3, [r7, #4]
 501:.\Generated_Source\PSoC4/Comm_UART.c **** 
 502:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Reads data only if there is data to read */
 503:.\Generated_Source\PSoC4/Comm_UART.c ****         if (0u != Comm_SpiUartGetRxBufferSize())
 836              		.loc 1 503 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 25


 837 000a FFF7FEFF 		bl	Comm_SpiUartGetRxBufferSize
 838 000e 031E     		sub	r3, r0, #0
 839 0010 03D0     		beq	.L63
 504:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 505:.\Generated_Source\PSoC4/Comm_UART.c ****             rxData = Comm_SpiUartReadRxData();
 840              		.loc 1 505 0
 841 0012 FFF7FEFF 		bl	Comm_SpiUartReadRxData
 842 0016 031C     		mov	r3, r0
 843 0018 7B60     		str	r3, [r7, #4]
 844              	.L63:
 506:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 507:.\Generated_Source\PSoC4/Comm_UART.c **** 
 508:.\Generated_Source\PSoC4/Comm_UART.c ****         if (Comm_CHECK_INTR_RX(Comm_INTR_RX_ERR))
 845              		.loc 1 508 0
 846 001a 084B     		ldr	r3, .L66
 847 001c 1A68     		ldr	r2, [r3]
 848 001e D823     		mov	r3, #216
 849 0020 9B00     		lsl	r3, r3, #2
 850 0022 1340     		and	r3, r2
 851 0024 05D0     		beq	.L64
 509:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 510:.\Generated_Source\PSoC4/Comm_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 852              		.loc 1 510 0
 853 0026 0023     		mov	r3, #0
 854 0028 7B60     		str	r3, [r7, #4]
 511:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_ClearRxInterruptSource(Comm_INTR_RX_ERR);
 855              		.loc 1 511 0
 856 002a 044B     		ldr	r3, .L66
 857 002c D822     		mov	r2, #216
 858 002e 9200     		lsl	r2, r2, #2
 859 0030 1A60     		str	r2, [r3]
 860              	.L64:
 512:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 513:.\Generated_Source\PSoC4/Comm_UART.c **** 
 514:.\Generated_Source\PSoC4/Comm_UART.c ****         return (rxData);
 861              		.loc 1 514 0
 862 0032 7B68     		ldr	r3, [r7, #4]
 515:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 863              		.loc 1 515 0
 864 0034 181C     		mov	r0, r3
 865 0036 BD46     		mov	sp, r7
 866 0038 02B0     		add	sp, sp, #8
 867              		@ sp needed
 868 003a 80BD     		pop	{r7, pc}
 869              	.L67:
 870              		.align	2
 871              	.L66:
 872 003c C00F0640 		.word	1074139072
 873              		.cfi_endproc
 874              	.LFE5:
 875              		.size	Comm_UartGetChar, .-Comm_UartGetChar
 876              		.section	.text.Comm_UartGetByte,"ax",%progbits
 877              		.align	2
 878              		.global	Comm_UartGetByte
 879              		.code	16
 880              		.thumb_func
 881              		.type	Comm_UartGetByte, %function
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 26


 882              	Comm_UartGetByte:
 883              	.LFB6:
 516:.\Generated_Source\PSoC4/Comm_UART.c **** 
 517:.\Generated_Source\PSoC4/Comm_UART.c **** 
 518:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 519:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartGetByte
 520:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 521:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 522:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 523:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 524:.\Generated_Source\PSoC4/Comm_UART.c ****     *  received byte and error condition.
 525:.\Generated_Source\PSoC4/Comm_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 526:.\Generated_Source\PSoC4/Comm_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 527:.\Generated_Source\PSoC4/Comm_UART.c ****     *     empty.
 528:.\Generated_Source\PSoC4/Comm_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 529:.\Generated_Source\PSoC4/Comm_UART.c ****     *     software receive buffer.
 530:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 531:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 532:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 533:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 534:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 535:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Bits 7-0 contain the next data element from the receive buffer and
 536:.\Generated_Source\PSoC4/Comm_UART.c ****     *  other bits contain the error condition.
 537:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 538:.\Generated_Source\PSoC4/Comm_UART.c ****     * Side Effects:
 539:.\Generated_Source\PSoC4/Comm_UART.c ****     *  The errors bits may not correspond with reading characters due to RX FIFO
 540:.\Generated_Source\PSoC4/Comm_UART.c ****     *  and software buffer usage.
 541:.\Generated_Source\PSoC4/Comm_UART.c ****     *  RX software buffer is disabled: The internal software buffer overflow
 542:.\Generated_Source\PSoC4/Comm_UART.c ****     *  is not returned as status by this function.
 543:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Check SCB_rxBufferOverflow to capture that error condition.
 544:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 545:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 546:.\Generated_Source\PSoC4/Comm_UART.c ****     uint32 Comm_UartGetByte(void)
 547:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 884              		.loc 1 547 0
 885              		.cfi_startproc
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 82B0     		sub	sp, sp, #8
 891              		.cfi_def_cfa_offset 16
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 548:.\Generated_Source\PSoC4/Comm_UART.c ****         uint32 rxData;
 549:.\Generated_Source\PSoC4/Comm_UART.c ****         uint32 tmpStatus;
 550:.\Generated_Source\PSoC4/Comm_UART.c **** 
 551:.\Generated_Source\PSoC4/Comm_UART.c ****         if (Comm_CHECK_RX_SW_BUFFER)
 894              		.loc 1 551 0
 895 0006 1A4B     		ldr	r3, .L74
 896 0008 1B68     		ldr	r3, [r3]
 897 000a 002B     		cmp	r3, #0
 898 000c 02D0     		beq	.L69
 552:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 553:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_DisableInt();
 899              		.loc 1 553 0
 900 000e 0A20     		mov	r0, #10
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 27


 901 0010 FFF7FEFF 		bl	CyIntDisable
 902              	.L69:
 554:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 555:.\Generated_Source\PSoC4/Comm_UART.c ****         
 556:.\Generated_Source\PSoC4/Comm_UART.c **** 
 557:.\Generated_Source\PSoC4/Comm_UART.c ****         if (0u != Comm_SpiUartGetRxBufferSize())
 903              		.loc 1 557 0
 904 0014 FFF7FEFF 		bl	Comm_SpiUartGetRxBufferSize
 905 0018 031E     		sub	r3, r0, #0
 906 001a 0BD0     		beq	.L70
 558:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 559:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 560:.\Generated_Source\PSoC4/Comm_UART.c ****             * buffer.
 561:.\Generated_Source\PSoC4/Comm_UART.c ****             */
 562:.\Generated_Source\PSoC4/Comm_UART.c ****             if (Comm_CHECK_RX_SW_BUFFER)
 907              		.loc 1 562 0
 908 001c 144B     		ldr	r3, .L74
 909 001e 1B68     		ldr	r3, [r3]
 910 0020 002B     		cmp	r3, #0
 911 0022 02D0     		beq	.L71
 563:.\Generated_Source\PSoC4/Comm_UART.c ****             {            
 564:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_EnableInt();
 912              		.loc 1 564 0
 913 0024 0A20     		mov	r0, #10
 914 0026 FFF7FEFF 		bl	CyIntEnable
 915              	.L71:
 565:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 566:.\Generated_Source\PSoC4/Comm_UART.c ****             
 567:.\Generated_Source\PSoC4/Comm_UART.c **** 
 568:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Get received byte */
 569:.\Generated_Source\PSoC4/Comm_UART.c ****             rxData = Comm_SpiUartReadRxData();
 916              		.loc 1 569 0
 917 002a FFF7FEFF 		bl	Comm_SpiUartReadRxData
 918 002e 031C     		mov	r3, r0
 919 0030 7B60     		str	r3, [r7, #4]
 920 0032 09E0     		b	.L72
 921              	.L70:
 570:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 571:.\Generated_Source\PSoC4/Comm_UART.c ****         else
 572:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 573:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the case
 574:.\Generated_Source\PSoC4/Comm_UART.c ****             * of empty. Otherwise the first received byte will be read.
 575:.\Generated_Source\PSoC4/Comm_UART.c ****             */
 576:.\Generated_Source\PSoC4/Comm_UART.c ****             rxData = Comm_RX_FIFO_RD_REG;
 922              		.loc 1 576 0
 923 0034 0F4B     		ldr	r3, .L74+4
 924 0036 1B68     		ldr	r3, [r3]
 925 0038 7B60     		str	r3, [r7, #4]
 577:.\Generated_Source\PSoC4/Comm_UART.c **** 
 578:.\Generated_Source\PSoC4/Comm_UART.c ****             /* Enables interrupt to receive more bytes.
 579:.\Generated_Source\PSoC4/Comm_UART.c ****             * The RX_NOT_EMPTY interrupt is cleared by the interrupt routine
 580:.\Generated_Source\PSoC4/Comm_UART.c ****             * in case the byte was received and read by code above.
 581:.\Generated_Source\PSoC4/Comm_UART.c ****             */
 582:.\Generated_Source\PSoC4/Comm_UART.c ****             if (Comm_CHECK_RX_SW_BUFFER)
 926              		.loc 1 582 0
 927 003a 0D4B     		ldr	r3, .L74
 928 003c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 28


 929 003e 002B     		cmp	r3, #0
 930 0040 02D0     		beq	.L72
 583:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 584:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_EnableInt();
 931              		.loc 1 584 0
 932 0042 0A20     		mov	r0, #10
 933 0044 FFF7FEFF 		bl	CyIntEnable
 934              	.L72:
 585:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 586:.\Generated_Source\PSoC4/Comm_UART.c ****             
 587:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 588:.\Generated_Source\PSoC4/Comm_UART.c **** 
 589:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Get and clear RX error mask */
 590:.\Generated_Source\PSoC4/Comm_UART.c ****         tmpStatus = (Comm_GetRxInterruptSource() & Comm_INTR_RX_ERR);
 935              		.loc 1 590 0
 936 0048 0B4B     		ldr	r3, .L74+8
 937 004a 1A68     		ldr	r2, [r3]
 938 004c D823     		mov	r3, #216
 939 004e 9B00     		lsl	r3, r3, #2
 940 0050 1340     		and	r3, r2
 941 0052 3B60     		str	r3, [r7]
 591:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_ClearRxInterruptSource(Comm_INTR_RX_ERR);
 942              		.loc 1 591 0
 943 0054 084B     		ldr	r3, .L74+8
 944 0056 D822     		mov	r2, #216
 945 0058 9200     		lsl	r2, r2, #2
 946 005a 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/Comm_UART.c **** 
 593:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Puts together data and error status:
 594:.\Generated_Source\PSoC4/Comm_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 595:.\Generated_Source\PSoC4/Comm_UART.c ****         */
 596:.\Generated_Source\PSoC4/Comm_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 947              		.loc 1 596 0
 948 005c 3B68     		ldr	r3, [r7]
 949 005e 1B02     		lsl	r3, r3, #8
 950 0060 7A68     		ldr	r2, [r7, #4]
 951 0062 1343     		orr	r3, r2
 952 0064 7B60     		str	r3, [r7, #4]
 597:.\Generated_Source\PSoC4/Comm_UART.c **** 
 598:.\Generated_Source\PSoC4/Comm_UART.c ****         return (rxData);
 953              		.loc 1 598 0
 954 0066 7B68     		ldr	r3, [r7, #4]
 599:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 955              		.loc 1 599 0
 956 0068 181C     		mov	r0, r3
 957 006a BD46     		mov	sp, r7
 958 006c 02B0     		add	sp, sp, #8
 959              		@ sp needed
 960 006e 80BD     		pop	{r7, pc}
 961              	.L75:
 962              		.align	2
 963              	.L74:
 964 0070 00000000 		.word	Comm_rxBuffer
 965 0074 40030640 		.word	1074135872
 966 0078 C00F0640 		.word	1074139072
 967              		.cfi_endproc
 968              	.LFE6:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 29


 969              		.size	Comm_UartGetByte, .-Comm_UartGetByte
 970              		.section	.text.Comm_UartPutString,"ax",%progbits
 971              		.align	2
 972              		.global	Comm_UartPutString
 973              		.code	16
 974              		.thumb_func
 975              		.type	Comm_UartPutString, %function
 976              	Comm_UartPutString:
 977              	.LFB7:
 600:.\Generated_Source\PSoC4/Comm_UART.c **** 
 601:.\Generated_Source\PSoC4/Comm_UART.c **** 
 602:.\Generated_Source\PSoC4/Comm_UART.c ****     #if !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1)
 603:.\Generated_Source\PSoC4/Comm_UART.c ****         /*******************************************************************************
 604:.\Generated_Source\PSoC4/Comm_UART.c ****         * Function Name: Comm_UartSetRtsPolarity
 605:.\Generated_Source\PSoC4/Comm_UART.c ****         ********************************************************************************
 606:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 607:.\Generated_Source\PSoC4/Comm_UART.c ****         * Summary:
 608:.\Generated_Source\PSoC4/Comm_UART.c ****         *  Sets active polarity of RTS output signal.
 609:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 610:.\Generated_Source\PSoC4/Comm_UART.c ****         * Parameters:
 611:.\Generated_Source\PSoC4/Comm_UART.c ****         *  polarity: Active polarity of RTS output signal.
 612:.\Generated_Source\PSoC4/Comm_UART.c ****         *   Comm_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 613:.\Generated_Source\PSoC4/Comm_UART.c ****         *   Comm_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 614:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 615:.\Generated_Source\PSoC4/Comm_UART.c ****         * Return:
 616:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
 617:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 618:.\Generated_Source\PSoC4/Comm_UART.c ****         *******************************************************************************/
 619:.\Generated_Source\PSoC4/Comm_UART.c ****         void Comm_UartSetRtsPolarity(uint32 polarity)
 620:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 621:.\Generated_Source\PSoC4/Comm_UART.c ****             if(0u != polarity)
 622:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 623:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_UART_FLOW_CTRL_REG |= (uint32)  Comm_UART_FLOW_CTRL_RTS_POLARITY;
 624:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 625:.\Generated_Source\PSoC4/Comm_UART.c ****             else
 626:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 627:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_UART_FLOW_CTRL_REG &= (uint32) ~Comm_UART_FLOW_CTRL_RTS_POLARITY;
 628:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 629:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 630:.\Generated_Source\PSoC4/Comm_UART.c **** 
 631:.\Generated_Source\PSoC4/Comm_UART.c **** 
 632:.\Generated_Source\PSoC4/Comm_UART.c ****         /*******************************************************************************
 633:.\Generated_Source\PSoC4/Comm_UART.c ****         * Function Name: Comm_UartSetRtsFifoLevel
 634:.\Generated_Source\PSoC4/Comm_UART.c ****         ********************************************************************************
 635:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 636:.\Generated_Source\PSoC4/Comm_UART.c ****         * Summary:
 637:.\Generated_Source\PSoC4/Comm_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 638:.\Generated_Source\PSoC4/Comm_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 639:.\Generated_Source\PSoC4/Comm_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 640:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 641:.\Generated_Source\PSoC4/Comm_UART.c ****         * Parameters:
 642:.\Generated_Source\PSoC4/Comm_UART.c ****         *  level: Level in the RX FIFO for RTS signal activation.
 643:.\Generated_Source\PSoC4/Comm_UART.c ****         *         The range of valid level values is between 0 and RX FIFO depth - 1.
 644:.\Generated_Source\PSoC4/Comm_UART.c ****         *         Setting level value to 0 disables RTS signal activation.
 645:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 646:.\Generated_Source\PSoC4/Comm_UART.c ****         * Return:
 647:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 30


 648:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 649:.\Generated_Source\PSoC4/Comm_UART.c ****         *******************************************************************************/
 650:.\Generated_Source\PSoC4/Comm_UART.c ****         void Comm_UartSetRtsFifoLevel(uint32 level)
 651:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 652:.\Generated_Source\PSoC4/Comm_UART.c ****             uint32 uartFlowCtrl;
 653:.\Generated_Source\PSoC4/Comm_UART.c **** 
 654:.\Generated_Source\PSoC4/Comm_UART.c ****             uartFlowCtrl = Comm_UART_FLOW_CTRL_REG;
 655:.\Generated_Source\PSoC4/Comm_UART.c **** 
 656:.\Generated_Source\PSoC4/Comm_UART.c ****             uartFlowCtrl &= ((uint32) ~Comm_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:.\Generated_Source\PSoC4/Comm_UART.c ****             uartFlowCtrl |= ((uint32) (Comm_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:.\Generated_Source\PSoC4/Comm_UART.c **** 
 659:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 661:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1) */
 662:.\Generated_Source\PSoC4/Comm_UART.c **** 
 663:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_UART_RX_DIRECTION) */
 664:.\Generated_Source\PSoC4/Comm_UART.c **** 
 665:.\Generated_Source\PSoC4/Comm_UART.c **** 
 666:.\Generated_Source\PSoC4/Comm_UART.c **** #if(Comm_UART_TX_DIRECTION)
 667:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 668:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartPutString
 669:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 670:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 671:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 672:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 673:.\Generated_Source\PSoC4/Comm_UART.c ****     *  next available bus time.
 674:.\Generated_Source\PSoC4/Comm_UART.c ****     *  This function is blocking and waits until there is space available to put
 675:.\Generated_Source\PSoC4/Comm_UART.c ****     *  all the requested data into the  transmit buffer.
 676:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 677:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/Comm_UART.c ****     *  string: pointer to the null terminated string array to be placed in the
 679:.\Generated_Source\PSoC4/Comm_UART.c ****     *          transmit buffer.
 680:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 681:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 682:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 683:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 684:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 685:.\Generated_Source\PSoC4/Comm_UART.c ****     void Comm_UartPutString(const char8 string[])
 686:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 978              		.loc 1 686 0
 979              		.cfi_startproc
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 84B0     		sub	sp, sp, #16
 985              		.cfi_def_cfa_offset 24
 986 0004 00AF     		add	r7, sp, #0
 987              		.cfi_def_cfa_register 7
 988 0006 7860     		str	r0, [r7, #4]
 687:.\Generated_Source\PSoC4/Comm_UART.c ****         uint32 bufIndex;
 688:.\Generated_Source\PSoC4/Comm_UART.c **** 
 689:.\Generated_Source\PSoC4/Comm_UART.c ****         bufIndex = 0u;
 989              		.loc 1 689 0
 990 0008 0023     		mov	r3, #0
 991 000a FB60     		str	r3, [r7, #12]
 690:.\Generated_Source\PSoC4/Comm_UART.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 31


 691:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Blocks the control flow until all data has been sent */
 692:.\Generated_Source\PSoC4/Comm_UART.c ****         while(string[bufIndex] != ((char8) 0))
 992              		.loc 1 692 0
 993 000c 09E0     		b	.L77
 994              	.L78:
 693:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 694:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UartPutChar((uint32) string[bufIndex]);
 995              		.loc 1 694 0
 996 000e 7A68     		ldr	r2, [r7, #4]
 997 0010 FB68     		ldr	r3, [r7, #12]
 998 0012 D318     		add	r3, r2, r3
 999 0014 1B78     		ldrb	r3, [r3]
 1000 0016 181C     		mov	r0, r3
 1001 0018 FFF7FEFF 		bl	Comm_SpiUartWriteTxData
 695:.\Generated_Source\PSoC4/Comm_UART.c ****             bufIndex++;
 1002              		.loc 1 695 0
 1003 001c FB68     		ldr	r3, [r7, #12]
 1004 001e 0133     		add	r3, r3, #1
 1005 0020 FB60     		str	r3, [r7, #12]
 1006              	.L77:
 692:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 1007              		.loc 1 692 0
 1008 0022 7A68     		ldr	r2, [r7, #4]
 1009 0024 FB68     		ldr	r3, [r7, #12]
 1010 0026 D318     		add	r3, r2, r3
 1011 0028 1B78     		ldrb	r3, [r3]
 1012 002a 002B     		cmp	r3, #0
 1013 002c EFD1     		bne	.L78
 696:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 697:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 1014              		.loc 1 697 0
 1015 002e BD46     		mov	sp, r7
 1016 0030 04B0     		add	sp, sp, #16
 1017              		@ sp needed
 1018 0032 80BD     		pop	{r7, pc}
 1019              		.cfi_endproc
 1020              	.LFE7:
 1021              		.size	Comm_UartPutString, .-Comm_UartPutString
 1022              		.section	.text.Comm_UartPutCRLF,"ax",%progbits
 1023              		.align	2
 1024              		.global	Comm_UartPutCRLF
 1025              		.code	16
 1026              		.thumb_func
 1027              		.type	Comm_UartPutCRLF, %function
 1028              	Comm_UartPutCRLF:
 1029              	.LFB8:
 698:.\Generated_Source\PSoC4/Comm_UART.c **** 
 699:.\Generated_Source\PSoC4/Comm_UART.c **** 
 700:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 701:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartPutCRLF
 702:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 703:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 704:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 705:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Places a byte of data followed by a carriage return (0x0D) and
 706:.\Generated_Source\PSoC4/Comm_UART.c ****     *  line feed (0x0A) into the transmit buffer.
 707:.\Generated_Source\PSoC4/Comm_UART.c ****     *  This function is blocking and waits until there is space available to put
 708:.\Generated_Source\PSoC4/Comm_UART.c ****     *  all the requested data into the  transmit buffer.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 32


 709:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 710:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 711:.\Generated_Source\PSoC4/Comm_UART.c ****     *  txDataByte : the data to be transmitted.
 712:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 713:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 714:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 715:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 716:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 717:.\Generated_Source\PSoC4/Comm_UART.c ****     void Comm_UartPutCRLF(uint32 txDataByte)
 718:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 1030              		.loc 1 718 0
 1031              		.cfi_startproc
 1032 0000 80B5     		push	{r7, lr}
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 82B0     		sub	sp, sp, #8
 1037              		.cfi_def_cfa_offset 16
 1038 0004 00AF     		add	r7, sp, #0
 1039              		.cfi_def_cfa_register 7
 1040 0006 7860     		str	r0, [r7, #4]
 719:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 1041              		.loc 1 719 0
 1042 0008 7B68     		ldr	r3, [r7, #4]
 1043 000a 181C     		mov	r0, r3
 1044 000c FFF7FEFF 		bl	Comm_SpiUartWriteTxData
 720:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 1045              		.loc 1 720 0
 1046 0010 0D20     		mov	r0, #13
 1047 0012 FFF7FEFF 		bl	Comm_SpiUartWriteTxData
 721:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 1048              		.loc 1 721 0
 1049 0016 0A20     		mov	r0, #10
 1050 0018 FFF7FEFF 		bl	Comm_SpiUartWriteTxData
 722:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 1051              		.loc 1 722 0
 1052 001c BD46     		mov	sp, r7
 1053 001e 02B0     		add	sp, sp, #8
 1054              		@ sp needed
 1055 0020 80BD     		pop	{r7, pc}
 1056              		.cfi_endproc
 1057              	.LFE8:
 1058              		.size	Comm_UartPutCRLF, .-Comm_UartPutCRLF
 1059 0022 C046     		.section	.text.Comm_UartSaveConfig,"ax",%progbits
 1060              		.align	2
 1061              		.global	Comm_UartSaveConfig
 1062              		.code	16
 1063              		.thumb_func
 1064              		.type	Comm_UartSaveConfig, %function
 1065              	Comm_UartSaveConfig:
 1066              	.LFB9:
 723:.\Generated_Source\PSoC4/Comm_UART.c **** 
 724:.\Generated_Source\PSoC4/Comm_UART.c **** 
 725:.\Generated_Source\PSoC4/Comm_UART.c ****     #if !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1)
 726:.\Generated_Source\PSoC4/Comm_UART.c ****         /*******************************************************************************
 727:.\Generated_Source\PSoC4/Comm_UART.c ****         * Function Name: CommSCB_UartEnableCts
 728:.\Generated_Source\PSoC4/Comm_UART.c ****         ********************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 33


 729:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 730:.\Generated_Source\PSoC4/Comm_UART.c ****         * Summary:
 731:.\Generated_Source\PSoC4/Comm_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 732:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 733:.\Generated_Source\PSoC4/Comm_UART.c ****         * Parameters:
 734:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
 735:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 736:.\Generated_Source\PSoC4/Comm_UART.c ****         * Return:
 737:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
 738:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 739:.\Generated_Source\PSoC4/Comm_UART.c ****         *******************************************************************************/
 740:.\Generated_Source\PSoC4/Comm_UART.c ****         void Comm_UartEnableCts(void)
 741:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 742:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_FLOW_CTRL_REG |= (uint32)  Comm_UART_FLOW_CTRL_CTS_ENABLE;
 743:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 744:.\Generated_Source\PSoC4/Comm_UART.c **** 
 745:.\Generated_Source\PSoC4/Comm_UART.c **** 
 746:.\Generated_Source\PSoC4/Comm_UART.c ****         /*******************************************************************************
 747:.\Generated_Source\PSoC4/Comm_UART.c ****         * Function Name: Comm_UartDisableCts
 748:.\Generated_Source\PSoC4/Comm_UART.c ****         ********************************************************************************
 749:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 750:.\Generated_Source\PSoC4/Comm_UART.c ****         * Summary:
 751:.\Generated_Source\PSoC4/Comm_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 752:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 753:.\Generated_Source\PSoC4/Comm_UART.c ****         * Parameters:
 754:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
 755:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 756:.\Generated_Source\PSoC4/Comm_UART.c ****         * Return:
 757:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
 758:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 759:.\Generated_Source\PSoC4/Comm_UART.c ****         *******************************************************************************/
 760:.\Generated_Source\PSoC4/Comm_UART.c ****         void Comm_UartDisableCts(void)
 761:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 762:.\Generated_Source\PSoC4/Comm_UART.c ****             Comm_UART_FLOW_CTRL_REG &= (uint32) ~Comm_UART_FLOW_CTRL_CTS_ENABLE;
 763:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 764:.\Generated_Source\PSoC4/Comm_UART.c **** 
 765:.\Generated_Source\PSoC4/Comm_UART.c **** 
 766:.\Generated_Source\PSoC4/Comm_UART.c ****         /*******************************************************************************
 767:.\Generated_Source\PSoC4/Comm_UART.c ****         * Function Name: Comm_UartSetCtsPolarity
 768:.\Generated_Source\PSoC4/Comm_UART.c ****         ********************************************************************************
 769:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 770:.\Generated_Source\PSoC4/Comm_UART.c ****         * Summary:
 771:.\Generated_Source\PSoC4/Comm_UART.c ****         *  Sets active polarity of CTS input signal.
 772:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 773:.\Generated_Source\PSoC4/Comm_UART.c ****         * Parameters:
 774:.\Generated_Source\PSoC4/Comm_UART.c ****         *  polarity: Active polarity of CTS output signal.
 775:.\Generated_Source\PSoC4/Comm_UART.c ****         *   Comm_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 776:.\Generated_Source\PSoC4/Comm_UART.c ****         *   Comm_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 777:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 778:.\Generated_Source\PSoC4/Comm_UART.c ****         * Return:
 779:.\Generated_Source\PSoC4/Comm_UART.c ****         *  None
 780:.\Generated_Source\PSoC4/Comm_UART.c ****         *
 781:.\Generated_Source\PSoC4/Comm_UART.c ****         *******************************************************************************/
 782:.\Generated_Source\PSoC4/Comm_UART.c ****         void Comm_UartSetCtsPolarity(uint32 polarity)
 783:.\Generated_Source\PSoC4/Comm_UART.c ****         {
 784:.\Generated_Source\PSoC4/Comm_UART.c ****             if (0u != polarity)
 785:.\Generated_Source\PSoC4/Comm_UART.c ****             {
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 34


 786:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_UART_FLOW_CTRL_REG |= (uint32)  Comm_UART_FLOW_CTRL_CTS_POLARITY;
 787:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 788:.\Generated_Source\PSoC4/Comm_UART.c ****             else
 789:.\Generated_Source\PSoC4/Comm_UART.c ****             {
 790:.\Generated_Source\PSoC4/Comm_UART.c ****                 Comm_UART_FLOW_CTRL_REG &= (uint32) ~Comm_UART_FLOW_CTRL_CTS_POLARITY;
 791:.\Generated_Source\PSoC4/Comm_UART.c ****             }
 792:.\Generated_Source\PSoC4/Comm_UART.c ****         }
 793:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* !(Comm_CY_SCBIP_V0 || Comm_CY_SCBIP_V1) */
 794:.\Generated_Source\PSoC4/Comm_UART.c **** 
 795:.\Generated_Source\PSoC4/Comm_UART.c **** #endif /* (Comm_UART_TX_DIRECTION) */
 796:.\Generated_Source\PSoC4/Comm_UART.c **** 
 797:.\Generated_Source\PSoC4/Comm_UART.c **** 
 798:.\Generated_Source\PSoC4/Comm_UART.c **** #if(Comm_UART_WAKE_ENABLE_CONST)
 799:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 800:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartSaveConfig
 801:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 802:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 803:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 804:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Clears and enables interrupt on a falling edge of the Rx input. The GPIO
 805:.\Generated_Source\PSoC4/Comm_UART.c ****     *  event wakes up the device and SKIP_START feature allows the UART continue
 806:.\Generated_Source\PSoC4/Comm_UART.c ****     *  receiving data bytes properly. The GPIO interrupt does not track in the
 807:.\Generated_Source\PSoC4/Comm_UART.c ****     *  active mode therefore requires to be cleared by this API.
 808:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 809:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 811:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 812:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 813:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 814:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 815:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/Comm_UART.c ****     void Comm_UartSaveConfig(void)
 817:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 1067              		.loc 1 817 0
 1068              		.cfi_startproc
 1069 0000 80B5     		push	{r7, lr}
 1070              		.cfi_def_cfa_offset 8
 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 00AF     		add	r7, sp, #0
 1074              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/Comm_UART.c ****         /* Clear interrupt activity:
 819:.\Generated_Source\PSoC4/Comm_UART.c ****         *  - set skip start and disable RX. At GPIO wakeup RX will be enabled.
 820:.\Generated_Source\PSoC4/Comm_UART.c ****         *  - clear rx_wake interrupt source as it triggers during normal operation.
 821:.\Generated_Source\PSoC4/Comm_UART.c ****         *  - clear wake interrupt pending state as it becomes pending in active mode.
 822:.\Generated_Source\PSoC4/Comm_UART.c ****         */
 823:.\Generated_Source\PSoC4/Comm_UART.c **** 
 824:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_UART_RX_CTRL_REG |= Comm_UART_RX_CTRL_SKIP_START;
 1075              		.loc 1 824 0
 1076 0004 044B     		ldr	r3, .L81
 1077 0006 044A     		ldr	r2, .L81
 1078 0008 1268     		ldr	r2, [r2]
 1079 000a 8021     		mov	r1, #128
 1080 000c 8901     		lsl	r1, r1, #6
 1081 000e 0A43     		orr	r2, r1
 1082 0010 1A60     		str	r2, [r3]
 825:.\Generated_Source\PSoC4/Comm_UART.c **** 
 826:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_SCB_MODE_UNCONFIG_CONST_CFG)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 35


 827:.\Generated_Source\PSoC4/Comm_UART.c ****         #if(Comm_MOSI_SCL_RX_WAKE_PIN)
 828:.\Generated_Source\PSoC4/Comm_UART.c ****             (void) Comm_uart_rx_wake_i2c_scl_spi_mosi_ClearInterrupt();
 829:.\Generated_Source\PSoC4/Comm_UART.c ****         #endif /* (Comm_MOSI_SCL_RX_WAKE_PIN) */
 830:.\Generated_Source\PSoC4/Comm_UART.c ****     #else
 831:.\Generated_Source\PSoC4/Comm_UART.c ****         #if(Comm_UART_RX_WAKE_PIN)
 832:.\Generated_Source\PSoC4/Comm_UART.c ****             (void) Comm_rx_wake_ClearInterrupt();
 833:.\Generated_Source\PSoC4/Comm_UART.c ****         #endif /* (Comm_UART_RX_WAKE_PIN) */
 834:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_SCB_MODE_UNCONFIG_CONST_CFG) */
 835:.\Generated_Source\PSoC4/Comm_UART.c **** 
 836:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_UART_RX_WAKEUP_IRQ)
 837:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_RxWakeClearPendingInt();
 838:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_RxWakeEnableInt();
 839:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_UART_RX_WAKEUP_IRQ) */
 840:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 1083              		.loc 1 840 0
 1084 0012 BD46     		mov	sp, r7
 1085              		@ sp needed
 1086 0014 80BD     		pop	{r7, pc}
 1087              	.L82:
 1088 0016 C046     		.align	2
 1089              	.L81:
 1090 0018 48000640 		.word	1074135112
 1091              		.cfi_endproc
 1092              	.LFE9:
 1093              		.size	Comm_UartSaveConfig, .-Comm_UartSaveConfig
 1094              		.section	.text.Comm_UartRestoreConfig,"ax",%progbits
 1095              		.align	2
 1096              		.global	Comm_UartRestoreConfig
 1097              		.code	16
 1098              		.thumb_func
 1099              		.type	Comm_UartRestoreConfig, %function
 1100              	Comm_UartRestoreConfig:
 1101              	.LFB10:
 841:.\Generated_Source\PSoC4/Comm_UART.c **** 
 842:.\Generated_Source\PSoC4/Comm_UART.c **** 
 843:.\Generated_Source\PSoC4/Comm_UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC4/Comm_UART.c ****     * Function Name: Comm_UartRestoreConfig
 845:.\Generated_Source\PSoC4/Comm_UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 847:.\Generated_Source\PSoC4/Comm_UART.c ****     * Summary:
 848:.\Generated_Source\PSoC4/Comm_UART.c ****     *  Disables the RX GPIO interrupt. Until this function is called the interrupt
 849:.\Generated_Source\PSoC4/Comm_UART.c ****     *  remains active and triggers on every falling edge of the UART RX line.
 850:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 851:.\Generated_Source\PSoC4/Comm_UART.c ****     * Parameters:
 852:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 853:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 854:.\Generated_Source\PSoC4/Comm_UART.c ****     * Return:
 855:.\Generated_Source\PSoC4/Comm_UART.c ****     *  None
 856:.\Generated_Source\PSoC4/Comm_UART.c ****     *
 857:.\Generated_Source\PSoC4/Comm_UART.c ****     *******************************************************************************/
 858:.\Generated_Source\PSoC4/Comm_UART.c ****     void Comm_UartRestoreConfig(void)
 859:.\Generated_Source\PSoC4/Comm_UART.c ****     {
 1102              		.loc 1 859 0
 1103              		.cfi_startproc
 1104 0000 80B5     		push	{r7, lr}
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 36


 1107              		.cfi_offset 14, -4
 1108 0002 00AF     		add	r7, sp, #0
 1109              		.cfi_def_cfa_register 7
 860:.\Generated_Source\PSoC4/Comm_UART.c ****     /* Disable RX GPIO interrupt: no more triggers in active mode */
 861:.\Generated_Source\PSoC4/Comm_UART.c ****     #if(Comm_UART_RX_WAKEUP_IRQ)
 862:.\Generated_Source\PSoC4/Comm_UART.c ****         Comm_RxWakeDisableInt();
 863:.\Generated_Source\PSoC4/Comm_UART.c ****     #endif /* (Comm_UART_RX_WAKEUP_IRQ) */
 864:.\Generated_Source\PSoC4/Comm_UART.c ****     }
 1110              		.loc 1 864 0
 1111 0004 BD46     		mov	sp, r7
 1112              		@ sp needed
 1113 0006 80BD     		pop	{r7, pc}
 1114              		.cfi_endproc
 1115              	.LFE10:
 1116              		.size	Comm_UartRestoreConfig, .-Comm_UartRestoreConfig
 1117              		.text
 1118              	.Letext0:
 1119              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1120              		.file 3 ".\\Generated_Source\\PSoC4\\Comm_SPI_UART.h"
 1121              		.file 4 ".\\Generated_Source\\PSoC4\\Comm_PVT.h"
 1122              		.file 5 ".\\Generated_Source\\PSoC4\\Comm_SPI_UART_PVT.h"
 1123              		.section	.debug_info,"",%progbits
 1124              	.Ldebug_info0:
 1125 0000 D6040000 		.4byte	0x4d6
 1126 0004 0400     		.2byte	0x4
 1127 0006 00000000 		.4byte	.Ldebug_abbrev0
 1128 000a 04       		.byte	0x4
 1129 000b 01       		.uleb128 0x1
 1130 000c F6040000 		.4byte	.LASF85
 1131 0010 01       		.byte	0x1
 1132 0011 75020000 		.4byte	.LASF86
 1133 0015 C4030000 		.4byte	.LASF87
 1134 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1135 001d 00000000 		.4byte	0
 1136 0021 00000000 		.4byte	.Ldebug_line0
 1137 0025 02       		.uleb128 0x2
 1138 0026 01       		.byte	0x1
 1139 0027 06       		.byte	0x6
 1140 0028 FD000000 		.4byte	.LASF0
 1141 002c 02       		.uleb128 0x2
 1142 002d 01       		.byte	0x1
 1143 002e 08       		.byte	0x8
 1144 002f 4C030000 		.4byte	.LASF1
 1145 0033 02       		.uleb128 0x2
 1146 0034 02       		.byte	0x2
 1147 0035 05       		.byte	0x5
 1148 0036 A7030000 		.4byte	.LASF2
 1149 003a 02       		.uleb128 0x2
 1150 003b 02       		.byte	0x2
 1151 003c 07       		.byte	0x7
 1152 003d 0F020000 		.4byte	.LASF3
 1153 0041 02       		.uleb128 0x2
 1154 0042 04       		.byte	0x4
 1155 0043 05       		.byte	0x5
 1156 0044 21010000 		.4byte	.LASF4
 1157 0048 02       		.uleb128 0x2
 1158 0049 04       		.byte	0x4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 37


 1159 004a 07       		.byte	0x7
 1160 004b E6010000 		.4byte	.LASF5
 1161 004f 02       		.uleb128 0x2
 1162 0050 08       		.byte	0x8
 1163 0051 05       		.byte	0x5
 1164 0052 EF000000 		.4byte	.LASF6
 1165 0056 02       		.uleb128 0x2
 1166 0057 08       		.byte	0x8
 1167 0058 07       		.byte	0x7
 1168 0059 A5000000 		.4byte	.LASF7
 1169 005d 03       		.uleb128 0x3
 1170 005e 04       		.byte	0x4
 1171 005f 05       		.byte	0x5
 1172 0060 696E7400 		.ascii	"int\000"
 1173 0064 02       		.uleb128 0x2
 1174 0065 04       		.byte	0x4
 1175 0066 07       		.byte	0x7
 1176 0067 C7010000 		.4byte	.LASF8
 1177 006b 04       		.uleb128 0x4
 1178 006c 52010000 		.4byte	.LASF9
 1179 0070 02       		.byte	0x2
 1180 0071 3801     		.2byte	0x138
 1181 0073 2C000000 		.4byte	0x2c
 1182 0077 04       		.uleb128 0x4
 1183 0078 8F010000 		.4byte	.LASF10
 1184 007c 02       		.byte	0x2
 1185 007d 3A01     		.2byte	0x13a
 1186 007f 48000000 		.4byte	0x48
 1187 0083 02       		.uleb128 0x2
 1188 0084 04       		.byte	0x4
 1189 0085 04       		.byte	0x4
 1190 0086 24030000 		.4byte	.LASF11
 1191 008a 02       		.uleb128 0x2
 1192 008b 08       		.byte	0x8
 1193 008c 04       		.byte	0x4
 1194 008d 79010000 		.4byte	.LASF12
 1195 0091 04       		.uleb128 0x4
 1196 0092 7B040000 		.4byte	.LASF13
 1197 0096 02       		.byte	0x2
 1198 0097 4901     		.2byte	0x149
 1199 0099 9D000000 		.4byte	0x9d
 1200 009d 02       		.uleb128 0x2
 1201 009e 01       		.byte	0x1
 1202 009f 08       		.byte	0x8
 1203 00a0 61040000 		.4byte	.LASF14
 1204 00a4 05       		.uleb128 0x5
 1205 00a5 6B000000 		.4byte	0x6b
 1206 00a9 04       		.uleb128 0x4
 1207 00aa AA020000 		.4byte	.LASF15
 1208 00ae 02       		.byte	0x2
 1209 00af E401     		.2byte	0x1e4
 1210 00b1 B5000000 		.4byte	0xb5
 1211 00b5 05       		.uleb128 0x5
 1212 00b6 77000000 		.4byte	0x77
 1213 00ba 02       		.uleb128 0x2
 1214 00bb 04       		.byte	0x4
 1215 00bc 07       		.byte	0x7
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 38


 1216 00bd DB020000 		.4byte	.LASF16
 1217 00c1 06       		.uleb128 0x6
 1218 00c2 04       		.byte	0x4
 1219 00c3 6B000000 		.4byte	0x6b
 1220 00c7 07       		.uleb128 0x7
 1221 00c8 70       		.byte	0x70
 1222 00c9 03       		.byte	0x3
 1223 00ca 2501     		.2byte	0x125
 1224 00cc 64020000 		.4byte	0x264
 1225 00d0 08       		.uleb128 0x8
 1226 00d1 66040000 		.4byte	.LASF17
 1227 00d5 03       		.byte	0x3
 1228 00d6 2701     		.2byte	0x127
 1229 00d8 77000000 		.4byte	0x77
 1230 00dc 00       		.byte	0
 1231 00dd 08       		.uleb128 0x8
 1232 00de 68000000 		.4byte	.LASF18
 1233 00e2 03       		.byte	0x3
 1234 00e3 2801     		.2byte	0x128
 1235 00e5 77000000 		.4byte	0x77
 1236 00e9 04       		.byte	0x4
 1237 00ea 08       		.uleb128 0x8
 1238 00eb 4F020000 		.4byte	.LASF19
 1239 00ef 03       		.byte	0x3
 1240 00f0 2901     		.2byte	0x129
 1241 00f2 77000000 		.4byte	0x77
 1242 00f6 08       		.byte	0x8
 1243 00f7 08       		.uleb128 0x8
 1244 00f8 D4020000 		.4byte	.LASF20
 1245 00fc 03       		.byte	0x3
 1246 00fd 2A01     		.2byte	0x12a
 1247 00ff 77000000 		.4byte	0x77
 1248 0103 0C       		.byte	0xc
 1249 0104 08       		.uleb128 0x8
 1250 0105 72040000 		.4byte	.LASF21
 1251 0109 03       		.byte	0x3
 1252 010a 2B01     		.2byte	0x12b
 1253 010c 77000000 		.4byte	0x77
 1254 0110 10       		.byte	0x10
 1255 0111 08       		.uleb128 0x8
 1256 0112 37040000 		.4byte	.LASF22
 1257 0116 03       		.byte	0x3
 1258 0117 2C01     		.2byte	0x12c
 1259 0119 77000000 		.4byte	0x77
 1260 011d 14       		.byte	0x14
 1261 011e 08       		.uleb128 0x8
 1262 011f 66010000 		.4byte	.LASF23
 1263 0123 03       		.byte	0x3
 1264 0124 2D01     		.2byte	0x12d
 1265 0126 77000000 		.4byte	0x77
 1266 012a 18       		.byte	0x18
 1267 012b 08       		.uleb128 0x8
 1268 012c B1030000 		.4byte	.LASF24
 1269 0130 03       		.byte	0x3
 1270 0131 2E01     		.2byte	0x12e
 1271 0133 77000000 		.4byte	0x77
 1272 0137 1C       		.byte	0x1c
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 39


 1273 0138 08       		.uleb128 0x8
 1274 0139 3C030000 		.4byte	.LASF25
 1275 013d 03       		.byte	0x3
 1276 013e 2F01     		.2byte	0x12f
 1277 0140 77000000 		.4byte	0x77
 1278 0144 20       		.byte	0x20
 1279 0145 08       		.uleb128 0x8
 1280 0146 96010000 		.4byte	.LASF26
 1281 014a 03       		.byte	0x3
 1282 014b 3001     		.2byte	0x130
 1283 014d 77000000 		.4byte	0x77
 1284 0151 24       		.byte	0x24
 1285 0152 08       		.uleb128 0x8
 1286 0153 B0020000 		.4byte	.LASF27
 1287 0157 03       		.byte	0x3
 1288 0158 3101     		.2byte	0x131
 1289 015a 77000000 		.4byte	0x77
 1290 015e 28       		.byte	0x28
 1291 015f 08       		.uleb128 0x8
 1292 0160 66020000 		.4byte	.LASF28
 1293 0164 03       		.byte	0x3
 1294 0165 3201     		.2byte	0x132
 1295 0167 77000000 		.4byte	0x77
 1296 016b 2C       		.byte	0x2c
 1297 016c 08       		.uleb128 0x8
 1298 016d 3A010000 		.4byte	.LASF29
 1299 0171 03       		.byte	0x3
 1300 0172 3301     		.2byte	0x133
 1301 0174 77000000 		.4byte	0x77
 1302 0178 30       		.byte	0x30
 1303 0179 08       		.uleb128 0x8
 1304 017a 84030000 		.4byte	.LASF30
 1305 017e 03       		.byte	0x3
 1306 017f 3401     		.2byte	0x134
 1307 0181 77000000 		.4byte	0x77
 1308 0185 34       		.byte	0x34
 1309 0186 08       		.uleb128 0x8
 1310 0187 09010000 		.4byte	.LASF31
 1311 018b 03       		.byte	0x3
 1312 018c 3501     		.2byte	0x135
 1313 018e C1000000 		.4byte	0xc1
 1314 0192 38       		.byte	0x38
 1315 0193 08       		.uleb128 0x8
 1316 0194 98000000 		.4byte	.LASF32
 1317 0198 03       		.byte	0x3
 1318 0199 3601     		.2byte	0x136
 1319 019b 77000000 		.4byte	0x77
 1320 019f 3C       		.byte	0x3c
 1321 01a0 08       		.uleb128 0x8
 1322 01a1 CB040000 		.4byte	.LASF33
 1323 01a5 03       		.byte	0x3
 1324 01a6 3701     		.2byte	0x137
 1325 01a8 C1000000 		.4byte	0xc1
 1326 01ac 40       		.byte	0x40
 1327 01ad 08       		.uleb128 0x8
 1328 01ae 9A020000 		.4byte	.LASF34
 1329 01b2 03       		.byte	0x3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 40


 1330 01b3 3801     		.2byte	0x138
 1331 01b5 77000000 		.4byte	0x77
 1332 01b9 44       		.byte	0x44
 1333 01ba 08       		.uleb128 0x8
 1334 01bb 84000000 		.4byte	.LASF35
 1335 01bf 03       		.byte	0x3
 1336 01c0 3901     		.2byte	0x139
 1337 01c2 77000000 		.4byte	0x77
 1338 01c6 48       		.byte	0x48
 1339 01c7 08       		.uleb128 0x8
 1340 01c8 58010000 		.4byte	.LASF36
 1341 01cc 03       		.byte	0x3
 1342 01cd 3A01     		.2byte	0x13a
 1343 01cf 77000000 		.4byte	0x77
 1344 01d3 4C       		.byte	0x4c
 1345 01d4 08       		.uleb128 0x8
 1346 01d5 CF000000 		.4byte	.LASF37
 1347 01d9 03       		.byte	0x3
 1348 01da 3B01     		.2byte	0x13b
 1349 01dc 77000000 		.4byte	0x77
 1350 01e0 50       		.byte	0x50
 1351 01e1 08       		.uleb128 0x8
 1352 01e2 93040000 		.4byte	.LASF38
 1353 01e6 03       		.byte	0x3
 1354 01e7 3C01     		.2byte	0x13c
 1355 01e9 77000000 		.4byte	0x77
 1356 01ed 54       		.byte	0x54
 1357 01ee 08       		.uleb128 0x8
 1358 01ef 09030000 		.4byte	.LASF39
 1359 01f3 03       		.byte	0x3
 1360 01f4 3D01     		.2byte	0x13d
 1361 01f6 77000000 		.4byte	0x77
 1362 01fa 58       		.byte	0x58
 1363 01fb 08       		.uleb128 0x8
 1364 01fc FA020000 		.4byte	.LASF40
 1365 0200 03       		.byte	0x3
 1366 0201 3E01     		.2byte	0x13e
 1367 0203 77000000 		.4byte	0x77
 1368 0207 5C       		.byte	0x5c
 1369 0208 08       		.uleb128 0x8
 1370 0209 BB040000 		.4byte	.LASF41
 1371 020d 03       		.byte	0x3
 1372 020e 3F01     		.2byte	0x13f
 1373 0210 77000000 		.4byte	0x77
 1374 0214 60       		.byte	0x60
 1375 0215 08       		.uleb128 0x8
 1376 0216 84050000 		.4byte	.LASF42
 1377 021a 03       		.byte	0x3
 1378 021b 4001     		.2byte	0x140
 1379 021d 77000000 		.4byte	0x77
 1380 0221 64       		.byte	0x64
 1381 0222 08       		.uleb128 0x8
 1382 0223 80010000 		.4byte	.LASF43
 1383 0227 03       		.byte	0x3
 1384 0228 4101     		.2byte	0x141
 1385 022a 6B000000 		.4byte	0x6b
 1386 022e 68       		.byte	0x68
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 41


 1387 022f 08       		.uleb128 0x8
 1388 0230 A3040000 		.4byte	.LASF44
 1389 0234 03       		.byte	0x3
 1390 0235 4201     		.2byte	0x142
 1391 0237 6B000000 		.4byte	0x6b
 1392 023b 69       		.byte	0x69
 1393 023c 08       		.uleb128 0x8
 1394 023d 49040000 		.4byte	.LASF45
 1395 0241 03       		.byte	0x3
 1396 0242 4301     		.2byte	0x143
 1397 0244 6B000000 		.4byte	0x6b
 1398 0248 6A       		.byte	0x6a
 1399 0249 08       		.uleb128 0x8
 1400 024a 12010000 		.4byte	.LASF46
 1401 024e 03       		.byte	0x3
 1402 024f 4401     		.2byte	0x144
 1403 0251 6B000000 		.4byte	0x6b
 1404 0255 6B       		.byte	0x6b
 1405 0256 08       		.uleb128 0x8
 1406 0257 A5050000 		.4byte	.LASF47
 1407 025b 03       		.byte	0x3
 1408 025c 4501     		.2byte	0x145
 1409 025e 6B000000 		.4byte	0x6b
 1410 0262 6C       		.byte	0x6c
 1411 0263 00       		.byte	0
 1412 0264 04       		.uleb128 0x4
 1413 0265 38000000 		.4byte	.LASF48
 1414 0269 03       		.byte	0x3
 1415 026a 4601     		.2byte	0x146
 1416 026c C7000000 		.4byte	0xc7
 1417 0270 09       		.uleb128 0x9
 1418 0271 AD040000 		.4byte	.LASF51
 1419 0275 01       		.byte	0x1
 1420 0276 50       		.byte	0x50
 1421 0277 00000000 		.4byte	.LFB0
 1422 027b 50030000 		.4byte	.LFE0-.LFB0
 1423 027f 01       		.uleb128 0x1
 1424 0280 9C       		.byte	0x9c
 1425 0281 A2020000 		.4byte	0x2a2
 1426 0285 0A       		.uleb128 0xa
 1427 0286 6B040000 		.4byte	.LASF53
 1428 028a 01       		.byte	0x1
 1429 028b 50       		.byte	0x50
 1430 028c A2020000 		.4byte	0x2a2
 1431 0290 02       		.uleb128 0x2
 1432 0291 91       		.byte	0x91
 1433 0292 6C       		.sleb128 -20
 1434 0293 0B       		.uleb128 0xb
 1435 0294 19030000 		.4byte	.LASF55
 1436 0298 01       		.byte	0x1
 1437 0299 52       		.byte	0x52
 1438 029a 77000000 		.4byte	0x77
 1439 029e 02       		.uleb128 0x2
 1440 029f 91       		.byte	0x91
 1441 02a0 74       		.sleb128 -12
 1442 02a1 00       		.byte	0
 1443 02a2 06       		.uleb128 0x6
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 42


 1444 02a3 04       		.byte	0x4
 1445 02a4 A8020000 		.4byte	0x2a8
 1446 02a8 0C       		.uleb128 0xc
 1447 02a9 64020000 		.4byte	0x264
 1448 02ad 0D       		.uleb128 0xd
 1449 02ae 70030000 		.4byte	.LASF49
 1450 02b2 01       		.byte	0x1
 1451 02b3 3001     		.2byte	0x130
 1452 02b5 00000000 		.4byte	.LFB1
 1453 02b9 2C000000 		.4byte	.LFE1-.LFB1
 1454 02bd 01       		.uleb128 0x1
 1455 02be 9C       		.byte	0x9c
 1456 02bf 0D       		.uleb128 0xd
 1457 02c0 EC020000 		.4byte	.LASF50
 1458 02c4 01       		.byte	0x1
 1459 02c5 6801     		.2byte	0x168
 1460 02c7 00000000 		.4byte	.LFB2
 1461 02cb 3C000000 		.4byte	.LFE2-.LFB2
 1462 02cf 01       		.uleb128 0x1
 1463 02d0 9C       		.byte	0x9c
 1464 02d1 0E       		.uleb128 0xe
 1465 02d2 5A030000 		.4byte	.LASF52
 1466 02d6 01       		.byte	0x1
 1467 02d7 A801     		.2byte	0x1a8
 1468 02d9 00000000 		.4byte	.LFB3
 1469 02dd 34000000 		.4byte	.LFE3-.LFB3
 1470 02e1 01       		.uleb128 0x1
 1471 02e2 9C       		.byte	0x9c
 1472 02e3 06030000 		.4byte	0x306
 1473 02e7 0F       		.uleb128 0xf
 1474 02e8 E4020000 		.4byte	.LASF54
 1475 02ec 01       		.byte	0x1
 1476 02ed A801     		.2byte	0x1a8
 1477 02ef 77000000 		.4byte	0x77
 1478 02f3 02       		.uleb128 0x2
 1479 02f4 91       		.byte	0x91
 1480 02f5 6C       		.sleb128 -20
 1481 02f6 10       		.uleb128 0x10
 1482 02f7 C6000000 		.4byte	.LASF56
 1483 02fb 01       		.byte	0x1
 1484 02fc AA01     		.2byte	0x1aa
 1485 02fe 77000000 		.4byte	0x77
 1486 0302 02       		.uleb128 0x2
 1487 0303 91       		.byte	0x91
 1488 0304 74       		.sleb128 -12
 1489 0305 00       		.byte	0
 1490 0306 0E       		.uleb128 0xe
 1491 0307 13000000 		.4byte	.LASF57
 1492 030b 01       		.byte	0x1
 1493 030c C501     		.2byte	0x1c5
 1494 030e 00000000 		.4byte	.LFB4
 1495 0312 34000000 		.4byte	.LFE4-.LFB4
 1496 0316 01       		.uleb128 0x1
 1497 0317 9C       		.byte	0x9c
 1498 0318 3B030000 		.4byte	0x33b
 1499 031c 0F       		.uleb128 0xf
 1500 031d 55040000 		.4byte	.LASF58
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 43


 1501 0321 01       		.byte	0x1
 1502 0322 C501     		.2byte	0x1c5
 1503 0324 77000000 		.4byte	0x77
 1504 0328 02       		.uleb128 0x2
 1505 0329 91       		.byte	0x91
 1506 032a 6C       		.sleb128 -20
 1507 032b 10       		.uleb128 0x10
 1508 032c C6000000 		.4byte	.LASF56
 1509 0330 01       		.byte	0x1
 1510 0331 C701     		.2byte	0x1c7
 1511 0333 77000000 		.4byte	0x77
 1512 0337 02       		.uleb128 0x2
 1513 0338 91       		.byte	0x91
 1514 0339 74       		.sleb128 -12
 1515 033a 00       		.byte	0
 1516 033b 11       		.uleb128 0x11
 1517 033c 22020000 		.4byte	.LASF60
 1518 0340 01       		.byte	0x1
 1519 0341 F201     		.2byte	0x1f2
 1520 0343 77000000 		.4byte	0x77
 1521 0347 00000000 		.4byte	.LFB5
 1522 034b 40000000 		.4byte	.LFE5-.LFB5
 1523 034f 01       		.uleb128 0x1
 1524 0350 9C       		.byte	0x9c
 1525 0351 65030000 		.4byte	0x365
 1526 0355 10       		.uleb128 0x10
 1527 0356 42040000 		.4byte	.LASF59
 1528 035a 01       		.byte	0x1
 1529 035b F401     		.2byte	0x1f4
 1530 035d 77000000 		.4byte	0x77
 1531 0361 02       		.uleb128 0x2
 1532 0362 91       		.byte	0x91
 1533 0363 74       		.sleb128 -12
 1534 0364 00       		.byte	0
 1535 0365 11       		.uleb128 0x11
 1536 0366 D4040000 		.4byte	.LASF61
 1537 036a 01       		.byte	0x1
 1538 036b 2202     		.2byte	0x222
 1539 036d 77000000 		.4byte	0x77
 1540 0371 00000000 		.4byte	.LFB6
 1541 0375 7C000000 		.4byte	.LFE6-.LFB6
 1542 0379 01       		.uleb128 0x1
 1543 037a 9C       		.byte	0x9c
 1544 037b 9E030000 		.4byte	0x39e
 1545 037f 10       		.uleb128 0x10
 1546 0380 42040000 		.4byte	.LASF59
 1547 0384 01       		.byte	0x1
 1548 0385 2402     		.2byte	0x224
 1549 0387 77000000 		.4byte	0x77
 1550 038b 02       		.uleb128 0x2
 1551 038c 91       		.byte	0x91
 1552 038d 74       		.sleb128 -12
 1553 038e 10       		.uleb128 0x10
 1554 038f BC000000 		.4byte	.LASF62
 1555 0393 01       		.byte	0x1
 1556 0394 2502     		.2byte	0x225
 1557 0396 77000000 		.4byte	0x77
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 44


 1558 039a 02       		.uleb128 0x2
 1559 039b 91       		.byte	0x91
 1560 039c 70       		.sleb128 -16
 1561 039d 00       		.byte	0
 1562 039e 12       		.uleb128 0x12
 1563 039f 4E000000 		.4byte	.LASF63
 1564 03a3 01       		.byte	0x1
 1565 03a4 AD02     		.2byte	0x2ad
 1566 03a6 00000000 		.4byte	.LFB7
 1567 03aa 34000000 		.4byte	.LFE7-.LFB7
 1568 03ae 01       		.uleb128 0x1
 1569 03af 9C       		.byte	0x9c
 1570 03b0 D3030000 		.4byte	0x3d3
 1571 03b4 0F       		.uleb128 0xf
 1572 03b5 61000000 		.4byte	.LASF64
 1573 03b9 01       		.byte	0x1
 1574 03ba AD02     		.2byte	0x2ad
 1575 03bc D3030000 		.4byte	0x3d3
 1576 03c0 02       		.uleb128 0x2
 1577 03c1 91       		.byte	0x91
 1578 03c2 6C       		.sleb128 -20
 1579 03c3 10       		.uleb128 0x10
 1580 03c4 46020000 		.4byte	.LASF65
 1581 03c8 01       		.byte	0x1
 1582 03c9 AF02     		.2byte	0x2af
 1583 03cb 77000000 		.4byte	0x77
 1584 03cf 02       		.uleb128 0x2
 1585 03d0 91       		.byte	0x91
 1586 03d1 74       		.sleb128 -12
 1587 03d2 00       		.byte	0
 1588 03d3 06       		.uleb128 0x6
 1589 03d4 04       		.byte	0x4
 1590 03d5 D9030000 		.4byte	0x3d9
 1591 03d9 0C       		.uleb128 0xc
 1592 03da 91000000 		.4byte	0x91
 1593 03de 12       		.uleb128 0x12
 1594 03df E5040000 		.4byte	.LASF66
 1595 03e3 01       		.byte	0x1
 1596 03e4 CD02     		.2byte	0x2cd
 1597 03e6 00000000 		.4byte	.LFB8
 1598 03ea 22000000 		.4byte	.LFE8-.LFB8
 1599 03ee 01       		.uleb128 0x1
 1600 03ef 9C       		.byte	0x9c
 1601 03f0 04040000 		.4byte	0x404
 1602 03f4 0F       		.uleb128 0xf
 1603 03f5 2D000000 		.4byte	.LASF67
 1604 03f9 01       		.byte	0x1
 1605 03fa CD02     		.2byte	0x2cd
 1606 03fc 77000000 		.4byte	0x77
 1607 0400 02       		.uleb128 0x2
 1608 0401 91       		.byte	0x91
 1609 0402 74       		.sleb128 -12
 1610 0403 00       		.byte	0
 1611 0404 0D       		.uleb128 0xd
 1612 0405 C0020000 		.4byte	.LASF68
 1613 0409 01       		.byte	0x1
 1614 040a 3003     		.2byte	0x330
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 45


 1615 040c 00000000 		.4byte	.LFB9
 1616 0410 1C000000 		.4byte	.LFE9-.LFB9
 1617 0414 01       		.uleb128 0x1
 1618 0415 9C       		.byte	0x9c
 1619 0416 0D       		.uleb128 0xd
 1620 0417 F8010000 		.4byte	.LASF69
 1621 041b 01       		.byte	0x1
 1622 041c 5A03     		.2byte	0x35a
 1623 041e 00000000 		.4byte	.LFB10
 1624 0422 08000000 		.4byte	.LFE10-.LFB10
 1625 0426 01       		.uleb128 0x1
 1626 0427 9C       		.byte	0x9c
 1627 0428 13       		.uleb128 0x13
 1628 0429 45010000 		.4byte	.LASF70
 1629 042d 04       		.byte	0x4
 1630 042e 42       		.byte	0x42
 1631 042f 6B000000 		.4byte	0x6b
 1632 0433 13       		.uleb128 0x13
 1633 0434 00000000 		.4byte	.LASF71
 1634 0438 04       		.byte	0x4
 1635 0439 43       		.byte	0x43
 1636 043a 6B000000 		.4byte	0x6b
 1637 043e 13       		.uleb128 0x13
 1638 043f 33020000 		.4byte	.LASF72
 1639 0443 04       		.byte	0x4
 1640 0444 44       		.byte	0x44
 1641 0445 6B000000 		.4byte	0x6b
 1642 0449 13       		.uleb128 0x13
 1643 044a 58020000 		.4byte	.LASF73
 1644 044e 04       		.byte	0x4
 1645 044f 4B       		.byte	0x4b
 1646 0450 54040000 		.4byte	0x454
 1647 0454 06       		.uleb128 0x6
 1648 0455 04       		.byte	0x4
 1649 0456 A4000000 		.4byte	0xa4
 1650 045a 13       		.uleb128 0x13
 1651 045b A7010000 		.4byte	.LASF74
 1652 045f 04       		.byte	0x4
 1653 0460 4C       		.byte	0x4c
 1654 0461 6B000000 		.4byte	0x6b
 1655 0465 13       		.uleb128 0x13
 1656 0466 93050000 		.4byte	.LASF75
 1657 046a 04       		.byte	0x4
 1658 046b 4D       		.byte	0x4d
 1659 046c 77000000 		.4byte	0x77
 1660 0470 13       		.uleb128 0x13
 1661 0471 E1000000 		.4byte	.LASF76
 1662 0475 04       		.byte	0x4
 1663 0476 4F       		.byte	0x4f
 1664 0477 54040000 		.4byte	0x454
 1665 047b 13       		.uleb128 0x13
 1666 047c B7010000 		.4byte	.LASF77
 1667 0480 04       		.byte	0x4
 1668 0481 50       		.byte	0x50
 1669 0482 6B000000 		.4byte	0x6b
 1670 0486 13       		.uleb128 0x13
 1671 0487 25040000 		.4byte	.LASF78
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 46


 1672 048b 04       		.byte	0x4
 1673 048c 51       		.byte	0x51
 1674 048d 77000000 		.4byte	0x77
 1675 0491 14       		.uleb128 0x14
 1676 0492 2A010000 		.4byte	.LASF79
 1677 0496 01       		.byte	0x1
 1678 0497 1C       		.byte	0x1c
 1679 0498 A8020000 		.4byte	0x2a8
 1680 049c 05       		.uleb128 0x5
 1681 049d 03       		.byte	0x3
 1682 049e 00000000 		.4byte	Comm_configUart
 1683 04a2 13       		.uleb128 0x13
 1684 04a3 2A030000 		.4byte	.LASF80
 1685 04a7 05       		.byte	0x5
 1686 04a8 1E       		.byte	0x1e
 1687 04a9 B5000000 		.4byte	0xb5
 1688 04ad 13       		.uleb128 0x13
 1689 04ae 72000000 		.4byte	.LASF81
 1690 04b2 05       		.byte	0x5
 1691 04b3 1F       		.byte	0x1f
 1692 04b4 B5000000 		.4byte	0xb5
 1693 04b8 13       		.uleb128 0x13
 1694 04b9 91030000 		.4byte	.LASF82
 1695 04bd 05       		.byte	0x5
 1696 04be 20       		.byte	0x20
 1697 04bf A4000000 		.4byte	0xa4
 1698 04c3 13       		.uleb128 0x13
 1699 04c4 D4010000 		.4byte	.LASF83
 1700 04c8 05       		.byte	0x5
 1701 04c9 24       		.byte	0x24
 1702 04ca B5000000 		.4byte	0xb5
 1703 04ce 13       		.uleb128 0x13
 1704 04cf 81040000 		.4byte	.LASF84
 1705 04d3 05       		.byte	0x5
 1706 04d4 25       		.byte	0x25
 1707 04d5 B5000000 		.4byte	0xb5
 1708 04d9 00       		.byte	0
 1709              		.section	.debug_abbrev,"",%progbits
 1710              	.Ldebug_abbrev0:
 1711 0000 01       		.uleb128 0x1
 1712 0001 11       		.uleb128 0x11
 1713 0002 01       		.byte	0x1
 1714 0003 25       		.uleb128 0x25
 1715 0004 0E       		.uleb128 0xe
 1716 0005 13       		.uleb128 0x13
 1717 0006 0B       		.uleb128 0xb
 1718 0007 03       		.uleb128 0x3
 1719 0008 0E       		.uleb128 0xe
 1720 0009 1B       		.uleb128 0x1b
 1721 000a 0E       		.uleb128 0xe
 1722 000b 55       		.uleb128 0x55
 1723 000c 17       		.uleb128 0x17
 1724 000d 11       		.uleb128 0x11
 1725 000e 01       		.uleb128 0x1
 1726 000f 10       		.uleb128 0x10
 1727 0010 17       		.uleb128 0x17
 1728 0011 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 47


 1729 0012 00       		.byte	0
 1730 0013 02       		.uleb128 0x2
 1731 0014 24       		.uleb128 0x24
 1732 0015 00       		.byte	0
 1733 0016 0B       		.uleb128 0xb
 1734 0017 0B       		.uleb128 0xb
 1735 0018 3E       		.uleb128 0x3e
 1736 0019 0B       		.uleb128 0xb
 1737 001a 03       		.uleb128 0x3
 1738 001b 0E       		.uleb128 0xe
 1739 001c 00       		.byte	0
 1740 001d 00       		.byte	0
 1741 001e 03       		.uleb128 0x3
 1742 001f 24       		.uleb128 0x24
 1743 0020 00       		.byte	0
 1744 0021 0B       		.uleb128 0xb
 1745 0022 0B       		.uleb128 0xb
 1746 0023 3E       		.uleb128 0x3e
 1747 0024 0B       		.uleb128 0xb
 1748 0025 03       		.uleb128 0x3
 1749 0026 08       		.uleb128 0x8
 1750 0027 00       		.byte	0
 1751 0028 00       		.byte	0
 1752 0029 04       		.uleb128 0x4
 1753 002a 16       		.uleb128 0x16
 1754 002b 00       		.byte	0
 1755 002c 03       		.uleb128 0x3
 1756 002d 0E       		.uleb128 0xe
 1757 002e 3A       		.uleb128 0x3a
 1758 002f 0B       		.uleb128 0xb
 1759 0030 3B       		.uleb128 0x3b
 1760 0031 05       		.uleb128 0x5
 1761 0032 49       		.uleb128 0x49
 1762 0033 13       		.uleb128 0x13
 1763 0034 00       		.byte	0
 1764 0035 00       		.byte	0
 1765 0036 05       		.uleb128 0x5
 1766 0037 35       		.uleb128 0x35
 1767 0038 00       		.byte	0
 1768 0039 49       		.uleb128 0x49
 1769 003a 13       		.uleb128 0x13
 1770 003b 00       		.byte	0
 1771 003c 00       		.byte	0
 1772 003d 06       		.uleb128 0x6
 1773 003e 0F       		.uleb128 0xf
 1774 003f 00       		.byte	0
 1775 0040 0B       		.uleb128 0xb
 1776 0041 0B       		.uleb128 0xb
 1777 0042 49       		.uleb128 0x49
 1778 0043 13       		.uleb128 0x13
 1779 0044 00       		.byte	0
 1780 0045 00       		.byte	0
 1781 0046 07       		.uleb128 0x7
 1782 0047 13       		.uleb128 0x13
 1783 0048 01       		.byte	0x1
 1784 0049 0B       		.uleb128 0xb
 1785 004a 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 48


 1786 004b 3A       		.uleb128 0x3a
 1787 004c 0B       		.uleb128 0xb
 1788 004d 3B       		.uleb128 0x3b
 1789 004e 05       		.uleb128 0x5
 1790 004f 01       		.uleb128 0x1
 1791 0050 13       		.uleb128 0x13
 1792 0051 00       		.byte	0
 1793 0052 00       		.byte	0
 1794 0053 08       		.uleb128 0x8
 1795 0054 0D       		.uleb128 0xd
 1796 0055 00       		.byte	0
 1797 0056 03       		.uleb128 0x3
 1798 0057 0E       		.uleb128 0xe
 1799 0058 3A       		.uleb128 0x3a
 1800 0059 0B       		.uleb128 0xb
 1801 005a 3B       		.uleb128 0x3b
 1802 005b 05       		.uleb128 0x5
 1803 005c 49       		.uleb128 0x49
 1804 005d 13       		.uleb128 0x13
 1805 005e 38       		.uleb128 0x38
 1806 005f 0B       		.uleb128 0xb
 1807 0060 00       		.byte	0
 1808 0061 00       		.byte	0
 1809 0062 09       		.uleb128 0x9
 1810 0063 2E       		.uleb128 0x2e
 1811 0064 01       		.byte	0x1
 1812 0065 3F       		.uleb128 0x3f
 1813 0066 19       		.uleb128 0x19
 1814 0067 03       		.uleb128 0x3
 1815 0068 0E       		.uleb128 0xe
 1816 0069 3A       		.uleb128 0x3a
 1817 006a 0B       		.uleb128 0xb
 1818 006b 3B       		.uleb128 0x3b
 1819 006c 0B       		.uleb128 0xb
 1820 006d 27       		.uleb128 0x27
 1821 006e 19       		.uleb128 0x19
 1822 006f 11       		.uleb128 0x11
 1823 0070 01       		.uleb128 0x1
 1824 0071 12       		.uleb128 0x12
 1825 0072 06       		.uleb128 0x6
 1826 0073 40       		.uleb128 0x40
 1827 0074 18       		.uleb128 0x18
 1828 0075 9642     		.uleb128 0x2116
 1829 0077 19       		.uleb128 0x19
 1830 0078 01       		.uleb128 0x1
 1831 0079 13       		.uleb128 0x13
 1832 007a 00       		.byte	0
 1833 007b 00       		.byte	0
 1834 007c 0A       		.uleb128 0xa
 1835 007d 05       		.uleb128 0x5
 1836 007e 00       		.byte	0
 1837 007f 03       		.uleb128 0x3
 1838 0080 0E       		.uleb128 0xe
 1839 0081 3A       		.uleb128 0x3a
 1840 0082 0B       		.uleb128 0xb
 1841 0083 3B       		.uleb128 0x3b
 1842 0084 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 49


 1843 0085 49       		.uleb128 0x49
 1844 0086 13       		.uleb128 0x13
 1845 0087 02       		.uleb128 0x2
 1846 0088 18       		.uleb128 0x18
 1847 0089 00       		.byte	0
 1848 008a 00       		.byte	0
 1849 008b 0B       		.uleb128 0xb
 1850 008c 34       		.uleb128 0x34
 1851 008d 00       		.byte	0
 1852 008e 03       		.uleb128 0x3
 1853 008f 0E       		.uleb128 0xe
 1854 0090 3A       		.uleb128 0x3a
 1855 0091 0B       		.uleb128 0xb
 1856 0092 3B       		.uleb128 0x3b
 1857 0093 0B       		.uleb128 0xb
 1858 0094 49       		.uleb128 0x49
 1859 0095 13       		.uleb128 0x13
 1860 0096 02       		.uleb128 0x2
 1861 0097 18       		.uleb128 0x18
 1862 0098 00       		.byte	0
 1863 0099 00       		.byte	0
 1864 009a 0C       		.uleb128 0xc
 1865 009b 26       		.uleb128 0x26
 1866 009c 00       		.byte	0
 1867 009d 49       		.uleb128 0x49
 1868 009e 13       		.uleb128 0x13
 1869 009f 00       		.byte	0
 1870 00a0 00       		.byte	0
 1871 00a1 0D       		.uleb128 0xd
 1872 00a2 2E       		.uleb128 0x2e
 1873 00a3 00       		.byte	0
 1874 00a4 3F       		.uleb128 0x3f
 1875 00a5 19       		.uleb128 0x19
 1876 00a6 03       		.uleb128 0x3
 1877 00a7 0E       		.uleb128 0xe
 1878 00a8 3A       		.uleb128 0x3a
 1879 00a9 0B       		.uleb128 0xb
 1880 00aa 3B       		.uleb128 0x3b
 1881 00ab 05       		.uleb128 0x5
 1882 00ac 27       		.uleb128 0x27
 1883 00ad 19       		.uleb128 0x19
 1884 00ae 11       		.uleb128 0x11
 1885 00af 01       		.uleb128 0x1
 1886 00b0 12       		.uleb128 0x12
 1887 00b1 06       		.uleb128 0x6
 1888 00b2 40       		.uleb128 0x40
 1889 00b3 18       		.uleb128 0x18
 1890 00b4 9742     		.uleb128 0x2117
 1891 00b6 19       		.uleb128 0x19
 1892 00b7 00       		.byte	0
 1893 00b8 00       		.byte	0
 1894 00b9 0E       		.uleb128 0xe
 1895 00ba 2E       		.uleb128 0x2e
 1896 00bb 01       		.byte	0x1
 1897 00bc 3F       		.uleb128 0x3f
 1898 00bd 19       		.uleb128 0x19
 1899 00be 03       		.uleb128 0x3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 50


 1900 00bf 0E       		.uleb128 0xe
 1901 00c0 3A       		.uleb128 0x3a
 1902 00c1 0B       		.uleb128 0xb
 1903 00c2 3B       		.uleb128 0x3b
 1904 00c3 05       		.uleb128 0x5
 1905 00c4 27       		.uleb128 0x27
 1906 00c5 19       		.uleb128 0x19
 1907 00c6 11       		.uleb128 0x11
 1908 00c7 01       		.uleb128 0x1
 1909 00c8 12       		.uleb128 0x12
 1910 00c9 06       		.uleb128 0x6
 1911 00ca 40       		.uleb128 0x40
 1912 00cb 18       		.uleb128 0x18
 1913 00cc 9742     		.uleb128 0x2117
 1914 00ce 19       		.uleb128 0x19
 1915 00cf 01       		.uleb128 0x1
 1916 00d0 13       		.uleb128 0x13
 1917 00d1 00       		.byte	0
 1918 00d2 00       		.byte	0
 1919 00d3 0F       		.uleb128 0xf
 1920 00d4 05       		.uleb128 0x5
 1921 00d5 00       		.byte	0
 1922 00d6 03       		.uleb128 0x3
 1923 00d7 0E       		.uleb128 0xe
 1924 00d8 3A       		.uleb128 0x3a
 1925 00d9 0B       		.uleb128 0xb
 1926 00da 3B       		.uleb128 0x3b
 1927 00db 05       		.uleb128 0x5
 1928 00dc 49       		.uleb128 0x49
 1929 00dd 13       		.uleb128 0x13
 1930 00de 02       		.uleb128 0x2
 1931 00df 18       		.uleb128 0x18
 1932 00e0 00       		.byte	0
 1933 00e1 00       		.byte	0
 1934 00e2 10       		.uleb128 0x10
 1935 00e3 34       		.uleb128 0x34
 1936 00e4 00       		.byte	0
 1937 00e5 03       		.uleb128 0x3
 1938 00e6 0E       		.uleb128 0xe
 1939 00e7 3A       		.uleb128 0x3a
 1940 00e8 0B       		.uleb128 0xb
 1941 00e9 3B       		.uleb128 0x3b
 1942 00ea 05       		.uleb128 0x5
 1943 00eb 49       		.uleb128 0x49
 1944 00ec 13       		.uleb128 0x13
 1945 00ed 02       		.uleb128 0x2
 1946 00ee 18       		.uleb128 0x18
 1947 00ef 00       		.byte	0
 1948 00f0 00       		.byte	0
 1949 00f1 11       		.uleb128 0x11
 1950 00f2 2E       		.uleb128 0x2e
 1951 00f3 01       		.byte	0x1
 1952 00f4 3F       		.uleb128 0x3f
 1953 00f5 19       		.uleb128 0x19
 1954 00f6 03       		.uleb128 0x3
 1955 00f7 0E       		.uleb128 0xe
 1956 00f8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 51


 1957 00f9 0B       		.uleb128 0xb
 1958 00fa 3B       		.uleb128 0x3b
 1959 00fb 05       		.uleb128 0x5
 1960 00fc 27       		.uleb128 0x27
 1961 00fd 19       		.uleb128 0x19
 1962 00fe 49       		.uleb128 0x49
 1963 00ff 13       		.uleb128 0x13
 1964 0100 11       		.uleb128 0x11
 1965 0101 01       		.uleb128 0x1
 1966 0102 12       		.uleb128 0x12
 1967 0103 06       		.uleb128 0x6
 1968 0104 40       		.uleb128 0x40
 1969 0105 18       		.uleb128 0x18
 1970 0106 9642     		.uleb128 0x2116
 1971 0108 19       		.uleb128 0x19
 1972 0109 01       		.uleb128 0x1
 1973 010a 13       		.uleb128 0x13
 1974 010b 00       		.byte	0
 1975 010c 00       		.byte	0
 1976 010d 12       		.uleb128 0x12
 1977 010e 2E       		.uleb128 0x2e
 1978 010f 01       		.byte	0x1
 1979 0110 3F       		.uleb128 0x3f
 1980 0111 19       		.uleb128 0x19
 1981 0112 03       		.uleb128 0x3
 1982 0113 0E       		.uleb128 0xe
 1983 0114 3A       		.uleb128 0x3a
 1984 0115 0B       		.uleb128 0xb
 1985 0116 3B       		.uleb128 0x3b
 1986 0117 05       		.uleb128 0x5
 1987 0118 27       		.uleb128 0x27
 1988 0119 19       		.uleb128 0x19
 1989 011a 11       		.uleb128 0x11
 1990 011b 01       		.uleb128 0x1
 1991 011c 12       		.uleb128 0x12
 1992 011d 06       		.uleb128 0x6
 1993 011e 40       		.uleb128 0x40
 1994 011f 18       		.uleb128 0x18
 1995 0120 9642     		.uleb128 0x2116
 1996 0122 19       		.uleb128 0x19
 1997 0123 01       		.uleb128 0x1
 1998 0124 13       		.uleb128 0x13
 1999 0125 00       		.byte	0
 2000 0126 00       		.byte	0
 2001 0127 13       		.uleb128 0x13
 2002 0128 34       		.uleb128 0x34
 2003 0129 00       		.byte	0
 2004 012a 03       		.uleb128 0x3
 2005 012b 0E       		.uleb128 0xe
 2006 012c 3A       		.uleb128 0x3a
 2007 012d 0B       		.uleb128 0xb
 2008 012e 3B       		.uleb128 0x3b
 2009 012f 0B       		.uleb128 0xb
 2010 0130 49       		.uleb128 0x49
 2011 0131 13       		.uleb128 0x13
 2012 0132 3F       		.uleb128 0x3f
 2013 0133 19       		.uleb128 0x19
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 52


 2014 0134 3C       		.uleb128 0x3c
 2015 0135 19       		.uleb128 0x19
 2016 0136 00       		.byte	0
 2017 0137 00       		.byte	0
 2018 0138 14       		.uleb128 0x14
 2019 0139 34       		.uleb128 0x34
 2020 013a 00       		.byte	0
 2021 013b 03       		.uleb128 0x3
 2022 013c 0E       		.uleb128 0xe
 2023 013d 3A       		.uleb128 0x3a
 2024 013e 0B       		.uleb128 0xb
 2025 013f 3B       		.uleb128 0x3b
 2026 0140 0B       		.uleb128 0xb
 2027 0141 49       		.uleb128 0x49
 2028 0142 13       		.uleb128 0x13
 2029 0143 3F       		.uleb128 0x3f
 2030 0144 19       		.uleb128 0x19
 2031 0145 02       		.uleb128 0x2
 2032 0146 18       		.uleb128 0x18
 2033 0147 00       		.byte	0
 2034 0148 00       		.byte	0
 2035 0149 00       		.byte	0
 2036              		.section	.debug_aranges,"",%progbits
 2037 0000 6C000000 		.4byte	0x6c
 2038 0004 0200     		.2byte	0x2
 2039 0006 00000000 		.4byte	.Ldebug_info0
 2040 000a 04       		.byte	0x4
 2041 000b 00       		.byte	0
 2042 000c 0000     		.2byte	0
 2043 000e 0000     		.2byte	0
 2044 0010 00000000 		.4byte	.LFB0
 2045 0014 50030000 		.4byte	.LFE0-.LFB0
 2046 0018 00000000 		.4byte	.LFB1
 2047 001c 2C000000 		.4byte	.LFE1-.LFB1
 2048 0020 00000000 		.4byte	.LFB2
 2049 0024 3C000000 		.4byte	.LFE2-.LFB2
 2050 0028 00000000 		.4byte	.LFB3
 2051 002c 34000000 		.4byte	.LFE3-.LFB3
 2052 0030 00000000 		.4byte	.LFB4
 2053 0034 34000000 		.4byte	.LFE4-.LFB4
 2054 0038 00000000 		.4byte	.LFB5
 2055 003c 40000000 		.4byte	.LFE5-.LFB5
 2056 0040 00000000 		.4byte	.LFB6
 2057 0044 7C000000 		.4byte	.LFE6-.LFB6
 2058 0048 00000000 		.4byte	.LFB7
 2059 004c 34000000 		.4byte	.LFE7-.LFB7
 2060 0050 00000000 		.4byte	.LFB8
 2061 0054 22000000 		.4byte	.LFE8-.LFB8
 2062 0058 00000000 		.4byte	.LFB9
 2063 005c 1C000000 		.4byte	.LFE9-.LFB9
 2064 0060 00000000 		.4byte	.LFB10
 2065 0064 08000000 		.4byte	.LFE10-.LFB10
 2066 0068 00000000 		.4byte	0
 2067 006c 00000000 		.4byte	0
 2068              		.section	.debug_ranges,"",%progbits
 2069              	.Ldebug_ranges0:
 2070 0000 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 53


 2071 0004 50030000 		.4byte	.LFE0
 2072 0008 00000000 		.4byte	.LFB1
 2073 000c 2C000000 		.4byte	.LFE1
 2074 0010 00000000 		.4byte	.LFB2
 2075 0014 3C000000 		.4byte	.LFE2
 2076 0018 00000000 		.4byte	.LFB3
 2077 001c 34000000 		.4byte	.LFE3
 2078 0020 00000000 		.4byte	.LFB4
 2079 0024 34000000 		.4byte	.LFE4
 2080 0028 00000000 		.4byte	.LFB5
 2081 002c 40000000 		.4byte	.LFE5
 2082 0030 00000000 		.4byte	.LFB6
 2083 0034 7C000000 		.4byte	.LFE6
 2084 0038 00000000 		.4byte	.LFB7
 2085 003c 34000000 		.4byte	.LFE7
 2086 0040 00000000 		.4byte	.LFB8
 2087 0044 22000000 		.4byte	.LFE8
 2088 0048 00000000 		.4byte	.LFB9
 2089 004c 1C000000 		.4byte	.LFE9
 2090 0050 00000000 		.4byte	.LFB10
 2091 0054 08000000 		.4byte	.LFE10
 2092 0058 00000000 		.4byte	0
 2093 005c 00000000 		.4byte	0
 2094              		.section	.debug_line,"",%progbits
 2095              	.Ldebug_line0:
 2096 0000 DB020000 		.section	.debug_str,"MS",%progbits,1
 2096      02009700 
 2096      00000201 
 2096      FB0E0D00 
 2096      01010101 
 2097              	.LASF71:
 2098 0000 436F6D6D 		.ascii	"Comm_scbEnableWake\000"
 2098      5F736362 
 2098      456E6162 
 2098      6C655761 
 2098      6B6500
 2099              	.LASF57:
 2100 0013 436F6D6D 		.ascii	"Comm_UartSetRxAddressMask\000"
 2100      5F556172 
 2100      74536574 
 2100      52784164 
 2100      64726573 
 2101              	.LASF67:
 2102 002d 74784461 		.ascii	"txDataByte\000"
 2102      74614279 
 2102      746500
 2103              	.LASF48:
 2104 0038 436F6D6D 		.ascii	"Comm_UART_INIT_STRUCT\000"
 2104      5F554152 
 2104      545F494E 
 2104      49545F53 
 2104      54525543 
 2105              	.LASF63:
 2106 004e 436F6D6D 		.ascii	"Comm_UartPutString\000"
 2106      5F556172 
 2106      74507574 
 2106      53747269 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 54


 2106      6E6700
 2107              	.LASF64:
 2108 0061 73747269 		.ascii	"string\000"
 2108      6E6700
 2109              	.LASF18:
 2110 0068 64697265 		.ascii	"direction\000"
 2110      6374696F 
 2110      6E00
 2111              	.LASF81:
 2112 0072 436F6D6D 		.ascii	"Comm_rxBufferTail\000"
 2112      5F727842 
 2112      75666665 
 2112      72546169 
 2112      6C00
 2113              	.LASF35:
 2114 0084 6D756C74 		.ascii	"multiprocAcceptAddr\000"
 2114      6970726F 
 2114      63416363 
 2114      65707441 
 2114      64647200 
 2115              	.LASF32:
 2116 0098 74784275 		.ascii	"txBufferSize\000"
 2116      66666572 
 2116      53697A65 
 2116      00
 2117              	.LASF7:
 2118 00a5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2118      206C6F6E 
 2118      6720756E 
 2118      7369676E 
 2118      65642069 
 2119              	.LASF62:
 2120 00bc 746D7053 		.ascii	"tmpStatus\000"
 2120      74617475 
 2120      7300
 2121              	.LASF56:
 2122 00c6 6D617463 		.ascii	"matchReg\000"
 2122      68526567 
 2122      00
 2123              	.LASF37:
 2124 00cf 6D756C74 		.ascii	"multiprocAddrMask\000"
 2124      6970726F 
 2124      63416464 
 2124      724D6173 
 2124      6B00
 2125              	.LASF76:
 2126 00e1 436F6D6D 		.ascii	"Comm_txBuffer\000"
 2126      5F747842 
 2126      75666665 
 2126      7200
 2127              	.LASF6:
 2128 00ef 6C6F6E67 		.ascii	"long long int\000"
 2128      206C6F6E 
 2128      6720696E 
 2128      7400
 2129              	.LASF0:
 2130 00fd 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 55


 2130      65642063 
 2130      68617200 
 2131              	.LASF31:
 2132 0109 72784275 		.ascii	"rxBuffer\000"
 2132      66666572 
 2132      00
 2133              	.LASF46:
 2134 0112 72747352 		.ascii	"rtsRxFifoLevel\000"
 2134      78466966 
 2134      6F4C6576 
 2134      656C00
 2135              	.LASF4:
 2136 0121 6C6F6E67 		.ascii	"long int\000"
 2136      20696E74 
 2136      00
 2137              	.LASF79:
 2138 012a 436F6D6D 		.ascii	"Comm_configUart\000"
 2138      5F636F6E 
 2138      66696755 
 2138      61727400 
 2139              	.LASF29:
 2140 013a 656E6162 		.ascii	"enableWake\000"
 2140      6C655761 
 2140      6B6500
 2141              	.LASF70:
 2142 0145 436F6D6D 		.ascii	"Comm_scbMode\000"
 2142      5F736362 
 2142      4D6F6465 
 2142      00
 2143              	.LASF9:
 2144 0152 75696E74 		.ascii	"uint8\000"
 2144      3800
 2145              	.LASF36:
 2146 0158 6D756C74 		.ascii	"multiprocAddr\000"
 2146      6970726F 
 2146      63416464 
 2146      7200
 2147              	.LASF23:
 2148 0166 656E6162 		.ascii	"enableIrdaLowPower\000"
 2148      6C654972 
 2148      64614C6F 
 2148      77506F77 
 2148      657200
 2149              	.LASF12:
 2150 0179 646F7562 		.ascii	"double\000"
 2150      6C6500
 2151              	.LASF43:
 2152 0180 656E6162 		.ascii	"enableByteMode\000"
 2152      6C654279 
 2152      74654D6F 
 2152      646500
 2153              	.LASF10:
 2154 018f 75696E74 		.ascii	"uint32\000"
 2154      333200
 2155              	.LASF26:
 2156 0196 656E6162 		.ascii	"enableInvertedRx\000"
 2156      6C65496E 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 56


 2156      76657274 
 2156      65645278 
 2156      00
 2157              	.LASF74:
 2158 01a7 436F6D6D 		.ascii	"Comm_rxDataBits\000"
 2158      5F727844 
 2158      61746142 
 2158      69747300 
 2159              	.LASF77:
 2160 01b7 436F6D6D 		.ascii	"Comm_txDataBits\000"
 2160      5F747844 
 2160      61746142 
 2160      69747300 
 2161              	.LASF8:
 2162 01c7 756E7369 		.ascii	"unsigned int\000"
 2162      676E6564 
 2162      20696E74 
 2162      00
 2163              	.LASF83:
 2164 01d4 436F6D6D 		.ascii	"Comm_txBufferHead\000"
 2164      5F747842 
 2164      75666665 
 2164      72486561 
 2164      6400
 2165              	.LASF5:
 2166 01e6 6C6F6E67 		.ascii	"long unsigned int\000"
 2166      20756E73 
 2166      69676E65 
 2166      6420696E 
 2166      7400
 2167              	.LASF69:
 2168 01f8 436F6D6D 		.ascii	"Comm_UartRestoreConfig\000"
 2168      5F556172 
 2168      74526573 
 2168      746F7265 
 2168      436F6E66 
 2169              	.LASF3:
 2170 020f 73686F72 		.ascii	"short unsigned int\000"
 2170      7420756E 
 2170      7369676E 
 2170      65642069 
 2170      6E7400
 2171              	.LASF60:
 2172 0222 436F6D6D 		.ascii	"Comm_UartGetChar\000"
 2172      5F556172 
 2172      74476574 
 2172      43686172 
 2172      00
 2173              	.LASF72:
 2174 0233 436F6D6D 		.ascii	"Comm_scbEnableIntr\000"
 2174      5F736362 
 2174      456E6162 
 2174      6C65496E 
 2174      747200
 2175              	.LASF65:
 2176 0246 62756649 		.ascii	"bufIndex\000"
 2176      6E646578 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 57


 2176      00
 2177              	.LASF19:
 2178 024f 64617461 		.ascii	"dataBits\000"
 2178      42697473 
 2178      00
 2179              	.LASF73:
 2180 0258 436F6D6D 		.ascii	"Comm_rxBuffer\000"
 2180      5F727842 
 2180      75666665 
 2180      7200
 2181              	.LASF28:
 2182 0266 64726F70 		.ascii	"dropOnFrameErr\000"
 2182      4F6E4672 
 2182      616D6545 
 2182      727200
 2183              	.LASF86:
 2184 0275 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Comm_UART.c\000"
 2184      6E657261 
 2184      7465645F 
 2184      536F7572 
 2184      63655C50 
 2185              	.LASF34:
 2186 029a 656E6162 		.ascii	"enableMultiproc\000"
 2186      6C654D75 
 2186      6C746970 
 2186      726F6300 
 2187              	.LASF15:
 2188 02aa 72656733 		.ascii	"reg32\000"
 2188      3200
 2189              	.LASF27:
 2190 02b0 64726F70 		.ascii	"dropOnParityErr\000"
 2190      4F6E5061 
 2190      72697479 
 2190      45727200 
 2191              	.LASF68:
 2192 02c0 436F6D6D 		.ascii	"Comm_UartSaveConfig\000"
 2192      5F556172 
 2192      74536176 
 2192      65436F6E 
 2192      66696700 
 2193              	.LASF20:
 2194 02d4 70617269 		.ascii	"parity\000"
 2194      747900
 2195              	.LASF16:
 2196 02db 73697A65 		.ascii	"sizetype\000"
 2196      74797065 
 2196      00
 2197              	.LASF54:
 2198 02e4 61646472 		.ascii	"address\000"
 2198      65737300 
 2199              	.LASF50:
 2200 02ec 436F6D6D 		.ascii	"Comm_UartStop\000"
 2200      5F556172 
 2200      7453746F 
 2200      7000
 2201              	.LASF40:
 2202 02fa 72785472 		.ascii	"rxTriggerLevel\000"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 58


 2202      69676765 
 2202      724C6576 
 2202      656C00
 2203              	.LASF39:
 2204 0309 7278496E 		.ascii	"rxInterruptMask\000"
 2204      74657272 
 2204      7570744D 
 2204      61736B00 
 2205              	.LASF55:
 2206 0319 70696E73 		.ascii	"pinsConfig\000"
 2206      436F6E66 
 2206      696700
 2207              	.LASF11:
 2208 0324 666C6F61 		.ascii	"float\000"
 2208      7400
 2209              	.LASF80:
 2210 032a 436F6D6D 		.ascii	"Comm_rxBufferHead\000"
 2210      5F727842 
 2210      75666665 
 2210      72486561 
 2210      6400
 2211              	.LASF25:
 2212 033c 656E6162 		.ascii	"enableRetryNack\000"
 2212      6C655265 
 2212      7472794E 
 2212      61636B00 
 2213              	.LASF1:
 2214 034c 756E7369 		.ascii	"unsigned char\000"
 2214      676E6564 
 2214      20636861 
 2214      7200
 2215              	.LASF52:
 2216 035a 436F6D6D 		.ascii	"Comm_UartSetRxAddress\000"
 2216      5F556172 
 2216      74536574 
 2216      52784164 
 2216      64726573 
 2217              	.LASF49:
 2218 0370 436F6D6D 		.ascii	"Comm_UartPostEnable\000"
 2218      5F556172 
 2218      74506F73 
 2218      74456E61 
 2218      626C6500 
 2219              	.LASF30:
 2220 0384 72784275 		.ascii	"rxBufferSize\000"
 2220      66666572 
 2220      53697A65 
 2220      00
 2221              	.LASF82:
 2222 0391 436F6D6D 		.ascii	"Comm_rxBufferOverflow\000"
 2222      5F727842 
 2222      75666665 
 2222      724F7665 
 2222      72666C6F 
 2223              	.LASF2:
 2224 03a7 73686F72 		.ascii	"short int\000"
 2224      7420696E 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 59


 2224      7400
 2225              	.LASF24:
 2226 03b1 656E6162 		.ascii	"enableMedianFilter\000"
 2226      6C654D65 
 2226      6469616E 
 2226      46696C74 
 2226      657200
 2227              	.LASF87:
 2228 03c4 433A5C55 		.ascii	"C:\\Users\\Tech Consulting\\Desktop\\PSOC4 projects"
 2228      73657273 
 2228      5C546563 
 2228      6820436F 
 2228      6E73756C 
 2229 03f3 5C537465 		.ascii	"\\StepMotor_PSoC4200\\StepMotor_PSoC4200_Dual.cydsn"
 2229      704D6F74 
 2229      6F725F50 
 2229      536F4334 
 2229      3230305C 
 2230 0424 00       		.ascii	"\000"
 2231              	.LASF78:
 2232 0425 436F6D6D 		.ascii	"Comm_txBufferSize\000"
 2232      5F747842 
 2232      75666665 
 2232      7253697A 
 2232      6500
 2233              	.LASF22:
 2234 0437 6F766572 		.ascii	"oversample\000"
 2234      73616D70 
 2234      6C6500
 2235              	.LASF59:
 2236 0442 72784461 		.ascii	"rxData\000"
 2236      746100
 2237              	.LASF45:
 2238 0449 63747350 		.ascii	"ctsPolarity\000"
 2238      6F6C6172 
 2238      69747900 
 2239              	.LASF58:
 2240 0455 61646472 		.ascii	"addressMask\000"
 2240      6573734D 
 2240      61736B00 
 2241              	.LASF14:
 2242 0461 63686172 		.ascii	"char\000"
 2242      00
 2243              	.LASF17:
 2244 0466 6D6F6465 		.ascii	"mode\000"
 2244      00
 2245              	.LASF53:
 2246 046b 636F6E66 		.ascii	"config\000"
 2246      696700
 2247              	.LASF21:
 2248 0472 73746F70 		.ascii	"stopBits\000"
 2248      42697473 
 2248      00
 2249              	.LASF13:
 2250 047b 63686172 		.ascii	"char8\000"
 2250      3800
 2251              	.LASF84:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 60


 2252 0481 436F6D6D 		.ascii	"Comm_txBufferTail\000"
 2252      5F747842 
 2252      75666665 
 2252      72546169 
 2252      6C00
 2253              	.LASF38:
 2254 0493 656E6162 		.ascii	"enableInterrupt\000"
 2254      6C65496E 
 2254      74657272 
 2254      75707400 
 2255              	.LASF44:
 2256 04a3 656E6162 		.ascii	"enableCts\000"
 2256      6C654374 
 2256      7300
 2257              	.LASF51:
 2258 04ad 436F6D6D 		.ascii	"Comm_UartInit\000"
 2258      5F556172 
 2258      74496E69 
 2258      7400
 2259              	.LASF41:
 2260 04bb 7478496E 		.ascii	"txInterruptMask\000"
 2260      74657272 
 2260      7570744D 
 2260      61736B00 
 2261              	.LASF33:
 2262 04cb 74784275 		.ascii	"txBuffer\000"
 2262      66666572 
 2262      00
 2263              	.LASF61:
 2264 04d4 436F6D6D 		.ascii	"Comm_UartGetByte\000"
 2264      5F556172 
 2264      74476574 
 2264      42797465 
 2264      00
 2265              	.LASF66:
 2266 04e5 436F6D6D 		.ascii	"Comm_UartPutCRLF\000"
 2266      5F556172 
 2266      74507574 
 2266      43524C46 
 2266      00
 2267              	.LASF85:
 2268 04f6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2268      4320342E 
 2268      392E3320 
 2268      32303135 
 2268      30333033 
 2269 0529 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2269      20726576 
 2269      6973696F 
 2269      6E203232 
 2269      31323230 
 2270 055c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2270      66756E63 
 2270      74696F6E 
 2270      2D736563 
 2270      74696F6E 
 2271              	.LASF42:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccwCbP0i.s 			page 61


 2272 0584 74785472 		.ascii	"txTriggerLevel\000"
 2272      69676765 
 2272      724C6576 
 2272      656C00
 2273              	.LASF75:
 2274 0593 436F6D6D 		.ascii	"Comm_rxBufferSize\000"
 2274      5F727842 
 2274      75666665 
 2274      7253697A 
 2274      6500
 2275              	.LASF47:
 2276 05a5 72747350 		.ascii	"rtsPolarity\000"
 2276      6F6C6172 
 2276      69747900 
 2277              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
