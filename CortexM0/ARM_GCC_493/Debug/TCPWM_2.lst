ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	TCPWM_2_initVar
  18              		.bss
  19              		.type	TCPWM_2_initVar, %object
  20              		.size	TCPWM_2_initVar, 1
  21              	TCPWM_2_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.TCPWM_2_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TCPWM_2_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	TCPWM_2_Init, %function
  29              	TCPWM_2_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\TCPWM_2.c"
   1:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/TCPWM_2.c **** * File Name: TCPWM_2.c
   3:.\Generated_Source\PSoC4/TCPWM_2.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/TCPWM_2.c **** *
   5:.\Generated_Source\PSoC4/TCPWM_2.c **** * Description:
   6:.\Generated_Source\PSoC4/TCPWM_2.c **** *  This file provides the source code to the API for the TCPWM_2
   7:.\Generated_Source\PSoC4/TCPWM_2.c **** *  component
   8:.\Generated_Source\PSoC4/TCPWM_2.c **** *
   9:.\Generated_Source\PSoC4/TCPWM_2.c **** * Note:
  10:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
  11:.\Generated_Source\PSoC4/TCPWM_2.c **** *
  12:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/TCPWM_2.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/TCPWM_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/TCPWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/TCPWM_2.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  19:.\Generated_Source\PSoC4/TCPWM_2.c **** #include "TCPWM_2.h"
  20:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  21:.\Generated_Source\PSoC4/TCPWM_2.c **** uint8 TCPWM_2_initVar = 0u;
  22:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  23:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  24:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_Init
  26:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 2


  27:.\Generated_Source\PSoC4/TCPWM_2.c **** *
  28:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
  29:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Initialize/Restore default TCPWM_2 configuration.
  30:.\Generated_Source\PSoC4/TCPWM_2.c **** *
  31:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
  32:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
  33:.\Generated_Source\PSoC4/TCPWM_2.c **** *
  34:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
  35:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
  36:.\Generated_Source\PSoC4/TCPWM_2.c **** *
  37:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_Init(void)
  39:.\Generated_Source\PSoC4/TCPWM_2.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  41:.\Generated_Source\PSoC4/TCPWM_2.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2__QUAD == TCPWM_2_CONFIG)
  43:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_CONTROL_REG = TCPWM_2_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/TCPWM_2.c ****         
  45:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_TRIG_CONTROL1_REG  = TCPWM_2_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  48:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_SetInterruptMode(TCPWM_2_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/TCPWM_2.c ****         
  51:.\Generated_Source\PSoC4/TCPWM_2.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_SetCounterMode(TCPWM_2_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_WritePeriod(TCPWM_2_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_WriteCounter(TCPWM_2_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif  /* (TCPWM_2__QUAD == TCPWM_2_CONFIG) */
  56:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  57:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2__TIMER == TCPWM_2_CONFIG)
  58:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_CONTROL_REG = TCPWM_2_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/TCPWM_2.c ****         
  60:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_TRIG_CONTROL1_REG  = TCPWM_2_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/TCPWM_2.c ****     
  63:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_SetInterruptMode(TCPWM_2_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/TCPWM_2.c ****         
  66:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_WritePeriod(TCPWM_2_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  69:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (TCPWM_2__COMPARE == TCPWM_2_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WriteCompare(TCPWM_2_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  72:.\Generated_Source\PSoC4/TCPWM_2.c ****             #if (1u == TCPWM_2_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_WriteCompareBuf(TCPWM_2_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/TCPWM_2.c ****             #endif  /* (1u == TCPWM_2_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 3


  76:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (TCPWM_2__COMPARE == TCPWM_2_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  78:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (TCPWM_2_CY_TCPWM_V2 && TCPWM_2_TIMER_UPDOWN_CNT_USED && !TCPWM_2_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/TCPWM_2.c ****         #elif(TCPWM_2__COUNT_DOWN == TCPWM_2_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WriteCounter(TCPWM_2_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/TCPWM_2.c ****         #else
  84:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif /* (TCPWM_2_CY_TCPWM_V2 && TCPWM_2_TIMER_UPDOWN_CNT_USED && !TCPWM_2_CY_TCPWM_4000) 
  86:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif  /* (TCPWM_2__TIMER == TCPWM_2_CONFIG) */
  87:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  88:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2__PWM_SEL == TCPWM_2_CONFIG)
  89:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_CONTROL_REG = TCPWM_2_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 104B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:.\Generated_Source\PSoC4/TCPWM_2.c **** 
  91:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (TCPWM_2__PWM_PR == TCPWM_2_PWM_MODE)
  92:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_CONTROL_REG |= TCPWM_2_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WriteCounter(TCPWM_2_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/TCPWM_2.c ****         #else
  95:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_CONTROL_REG |= TCPWM_2_CTRL_PWM_ALIGN | TCPWM_2_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0E4B     		ldr	r3, .L2
  47 000e 0E4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:.\Generated_Source\PSoC4/TCPWM_2.c ****             
  97:.\Generated_Source\PSoC4/TCPWM_2.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/TCPWM_2.c ****             #if (TCPWM_2_CY_TCPWM_V2 && TCPWM_2_PWM_UPDOWN_CNT_USED && !TCPWM_2_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/TCPWM_2.c ****             #elif (TCPWM_2__RIGHT == TCPWM_2_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_WriteCounter(TCPWM_2_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/TCPWM_2.c ****             #else 
 103:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	TCPWM_2_WriteCounter
 104:.\Generated_Source\PSoC4/TCPWM_2.c ****             #endif  /* (TCPWM_2_CY_TCPWM_V2 && TCPWM_2_PWM_UPDOWN_CNT_USED && !TCPWM_2_CY_TCPWM_400
 105:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (TCPWM_2__PWM_PR == TCPWM_2_PWM_MODE) */
 106:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 107:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (TCPWM_2__PWM_DT == TCPWM_2_PWM_MODE)
 108:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_CONTROL_REG |= TCPWM_2_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (TCPWM_2__PWM_DT == TCPWM_2_PWM_MODE) */
 110:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 111:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (TCPWM_2__PWM == TCPWM_2_PWM_MODE)
 112:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_CONTROL_REG |= TCPWM_2_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0B4B     		ldr	r3, .L2
  55 001c 0A4A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (TCPWM_2__PWM == TCPWM_2_PWM_MODE) */
 114:.\Generated_Source\PSoC4/TCPWM_2.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 4


 115:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_TRIG_CONTROL1_REG  = TCPWM_2_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 0A4B     		ldr	r3, .L2+4
  60 0024 FF22     		mov	r2, #255
  61 0026 9200     		lsl	r2, r2, #2
  62 0028 1A60     		str	r2, [r3]
 117:.\Generated_Source\PSoC4/TCPWM_2.c ****     
 118:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_SetInterruptMode(TCPWM_2_PWM_INTERRUPT_MASK);
  63              		.loc 1 119 0
  64 002a 0120     		mov	r0, #1
  65 002c FFF7FEFF 		bl	TCPWM_2_SetInterruptMode
 120:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 121:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (TCPWM_2__PWM_PR == TCPWM_2_PWM_MODE)
 123:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/TCPWM_2.c ****                     (TCPWM_2_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/TCPWM_2.c ****                     TCPWM_2_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/TCPWM_2.c ****                     TCPWM_2_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/TCPWM_2.c ****         #else
 128:.\Generated_Source\PSoC4/TCPWM_2.c ****             #if (TCPWM_2__LEFT == TCPWM_2_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_TRIG_CONTROL2_REG = TCPWM_2_PWM_MODE_LEFT;
  66              		.loc 1 129 0
  67 0030 074B     		ldr	r3, .L2+8
  68 0032 3122     		mov	r2, #49
  69 0034 1A60     		str	r2, [r3]
 130:.\Generated_Source\PSoC4/TCPWM_2.c ****             #endif  /* ( TCPWM_2_PWM_LEFT == TCPWM_2_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 132:.\Generated_Source\PSoC4/TCPWM_2.c ****             #if (TCPWM_2__RIGHT == TCPWM_2_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_TRIG_CONTROL2_REG = TCPWM_2_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/TCPWM_2.c ****             #endif  /* ( TCPWM_2_PWM_RIGHT == TCPWM_2_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 136:.\Generated_Source\PSoC4/TCPWM_2.c ****             #if (TCPWM_2__CENTER == TCPWM_2_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_TRIG_CONTROL2_REG = TCPWM_2_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/TCPWM_2.c ****             #endif  /* ( TCPWM_2_PWM_CENTER == TCPWM_2_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 140:.\Generated_Source\PSoC4/TCPWM_2.c ****             #if (TCPWM_2__ASYMMETRIC == TCPWM_2_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/TCPWM_2.c ****                 TCPWM_2_TRIG_CONTROL2_REG = TCPWM_2_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/TCPWM_2.c ****             #endif  /* (TCPWM_2__ASYMMETRIC == TCPWM_2_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (TCPWM_2__PWM_PR == TCPWM_2_PWM_MODE) */
 144:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 145:.\Generated_Source\PSoC4/TCPWM_2.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_WritePeriod(TCPWM_2_PWM_PERIOD_VALUE );
  70              		.loc 1 146 0
  71 0036 FF20     		mov	r0, #255
  72 0038 FFF7FEFF 		bl	TCPWM_2_WritePeriod
 147:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_WriteCompare(TCPWM_2_PWM_COMPARE_VALUE);
  73              		.loc 1 147 0
  74 003c FE20     		mov	r0, #254
  75 003e FFF7FEFF 		bl	TCPWM_2_WriteCompare
 148:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 149:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (1u == TCPWM_2_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WriteCompareBuf(TCPWM_2_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (1u == TCPWM_2_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/TCPWM_2.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 5


 154:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (1u == TCPWM_2_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_WritePeriodBuf(TCPWM_2_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif  /* (1u == TCPWM_2_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif  /* (TCPWM_2__PWM_SEL == TCPWM_2_CONFIG) */
 159:.\Generated_Source\PSoC4/TCPWM_2.c ****     
 160:.\Generated_Source\PSoC4/TCPWM_2.c **** }
  76              		.loc 1 160 0
  77 0042 BD46     		mov	sp, r7
  78              		@ sp needed
  79 0044 80BD     		pop	{r7, pc}
  80              	.L3:
  81 0046 C046     		.align	2
  82              	.L2:
  83 0048 80010540 		.word	1074069888
  84 004c A4010540 		.word	1074069924
  85 0050 A8010540 		.word	1074069928
  86              		.cfi_endproc
  87              	.LFE0:
  88              		.size	TCPWM_2_Init, .-TCPWM_2_Init
  89              		.section	.text.TCPWM_2_Enable,"ax",%progbits
  90              		.align	2
  91              		.global	TCPWM_2_Enable
  92              		.code	16
  93              		.thumb_func
  94              		.type	TCPWM_2_Enable, %function
  95              	TCPWM_2_Enable:
  96              	.LFB1:
 161:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 162:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 163:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_Enable
 165:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 167:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 168:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Enables the TCPWM_2.
 169:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 170:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 171:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 172:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 173:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 174:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 175:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 176:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_Enable(void)
 178:.\Generated_Source\PSoC4/TCPWM_2.c **** {
  97              		.loc 1 178 0
  98              		.cfi_startproc
  99 0000 90B5     		push	{r4, r7, lr}
 100              		.cfi_def_cfa_offset 12
 101              		.cfi_offset 4, -12
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 83B0     		sub	sp, sp, #12
 105              		.cfi_def_cfa_offset 24
 106 0004 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 6


 179:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 181:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 108              		.loc 1 181 0
 109 0006 FC1D     		add	r4, r7, #7
 110 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 111 000c 031C     		mov	r3, r0
 112 000e 2370     		strb	r3, [r4]
 182:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_BLOCK_CONTROL_REG |= TCPWM_2_MASK;
 113              		.loc 1 182 0
 114 0010 084B     		ldr	r3, .L5
 115 0012 084A     		ldr	r2, .L5
 116 0014 1268     		ldr	r2, [r2]
 117 0016 0421     		mov	r1, #4
 118 0018 0A43     		orr	r2, r1
 119 001a 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 120              		.loc 1 183 0
 121 001c FB1D     		add	r3, r7, #7
 122 001e 1B78     		ldrb	r3, [r3]
 123 0020 181C     		mov	r0, r3
 124 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 185:.\Generated_Source\PSoC4/TCPWM_2.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2__PWM_SEL == TCPWM_2_CONFIG)
 187:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (0u == TCPWM_2_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_TriggerCommand(TCPWM_2_MASK, TCPWM_2_CMD_START);
 125              		.loc 1 188 0
 126 0026 0420     		mov	r0, #4
 127 0028 1821     		mov	r1, #24
 128 002a FFF7FEFF 		bl	TCPWM_2_TriggerCommand
 189:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif /* (0u == TCPWM_2_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2__PWM_SEL == TCPWM_2_CONFIG) */
 191:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 192:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2__TIMER == TCPWM_2_CONFIG)
 193:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (0u == TCPWM_2_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_TriggerCommand(TCPWM_2_MASK, TCPWM_2_CMD_START);
 195:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif /* (0u == TCPWM_2_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2__TIMER == TCPWM_2_CONFIG) */
 197:.\Generated_Source\PSoC4/TCPWM_2.c ****     
 198:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2__QUAD == TCPWM_2_CONFIG)
 199:.\Generated_Source\PSoC4/TCPWM_2.c ****         #if (0u != TCPWM_2_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/TCPWM_2.c ****             TCPWM_2_TriggerCommand(TCPWM_2_MASK, TCPWM_2_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/TCPWM_2.c ****         #endif /* (0u != TCPWM_2_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif  /* (TCPWM_2__QUAD == TCPWM_2_CONFIG) */
 203:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 129              		.loc 1 203 0
 130 002e BD46     		mov	sp, r7
 131 0030 03B0     		add	sp, sp, #12
 132              		@ sp needed
 133 0032 90BD     		pop	{r4, r7, pc}
 134              	.L6:
 135              		.align	2
 136              	.L5:
 137 0034 00000540 		.word	1074069504
 138              		.cfi_endproc
 139              	.LFE1:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 7


 140              		.size	TCPWM_2_Enable, .-TCPWM_2_Enable
 141              		.section	.text.TCPWM_2_Start,"ax",%progbits
 142              		.align	2
 143              		.global	TCPWM_2_Start
 144              		.code	16
 145              		.thumb_func
 146              		.type	TCPWM_2_Start, %function
 147              	TCPWM_2_Start:
 148              	.LFB2:
 204:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 205:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 206:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_Start
 208:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 210:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 211:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Initializes the TCPWM_2 with default customizer
 212:.\Generated_Source\PSoC4/TCPWM_2.c **** *  values when called the first time and enables the TCPWM_2.
 213:.\Generated_Source\PSoC4/TCPWM_2.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/TCPWM_2.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 216:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 217:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 218:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 219:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 220:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 221:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 222:.\Generated_Source\PSoC4/TCPWM_2.c **** * Global variables:
 223:.\Generated_Source\PSoC4/TCPWM_2.c **** *  TCPWM_2_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/TCPWM_2.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/TCPWM_2.c **** *  to 1 the first time TCPWM_2_Start() is called. This allows
 226:.\Generated_Source\PSoC4/TCPWM_2.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/TCPWM_2.c **** *  calls to the TCPWM_2_Start() routine.
 228:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 229:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_Start(void)
 231:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 149              		.loc 1 231 0
 150              		.cfi_startproc
 151 0000 80B5     		push	{r7, lr}
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 00AF     		add	r7, sp, #0
 156              		.cfi_def_cfa_register 7
 232:.\Generated_Source\PSoC4/TCPWM_2.c ****     if (0u == TCPWM_2_initVar)
 157              		.loc 1 232 0
 158 0004 064B     		ldr	r3, .L9
 159 0006 1B78     		ldrb	r3, [r3]
 160 0008 002B     		cmp	r3, #0
 161 000a 04D1     		bne	.L8
 233:.\Generated_Source\PSoC4/TCPWM_2.c ****     {
 234:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_Init();
 162              		.loc 1 234 0
 163 000c FFF7FEFF 		bl	TCPWM_2_Init
 235:.\Generated_Source\PSoC4/TCPWM_2.c ****         TCPWM_2_initVar = 1u;
 164              		.loc 1 235 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 8


 165 0010 034B     		ldr	r3, .L9
 166 0012 0122     		mov	r2, #1
 167 0014 1A70     		strb	r2, [r3]
 168              	.L8:
 236:.\Generated_Source\PSoC4/TCPWM_2.c ****     }
 237:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 238:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_Enable();
 169              		.loc 1 238 0
 170 0016 FFF7FEFF 		bl	TCPWM_2_Enable
 239:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 171              		.loc 1 239 0
 172 001a BD46     		mov	sp, r7
 173              		@ sp needed
 174 001c 80BD     		pop	{r7, pc}
 175              	.L10:
 176 001e C046     		.align	2
 177              	.L9:
 178 0020 00000000 		.word	TCPWM_2_initVar
 179              		.cfi_endproc
 180              	.LFE2:
 181              		.size	TCPWM_2_Start, .-TCPWM_2_Start
 182              		.section	.text.TCPWM_2_Stop,"ax",%progbits
 183              		.align	2
 184              		.global	TCPWM_2_Stop
 185              		.code	16
 186              		.thumb_func
 187              		.type	TCPWM_2_Stop, %function
 188              	TCPWM_2_Stop:
 189              	.LFB3:
 240:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 241:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 242:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_Stop
 244:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 246:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 247:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Disables the TCPWM_2.
 248:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 249:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 250:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 251:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 252:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 253:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 254:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 255:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_Stop(void)
 257:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 190              		.loc 1 257 0
 191              		.cfi_startproc
 192 0000 90B5     		push	{r4, r7, lr}
 193              		.cfi_def_cfa_offset 12
 194              		.cfi_offset 4, -12
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 83B0     		sub	sp, sp, #12
 198              		.cfi_def_cfa_offset 24
 199 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 9


 200              		.cfi_def_cfa_register 7
 258:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 260:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 201              		.loc 1 260 0
 202 0006 FC1D     		add	r4, r7, #7
 203 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 204 000c 031C     		mov	r3, r0
 205 000e 2370     		strb	r3, [r4]
 261:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 262:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_BLOCK_CONTROL_REG &= (uint32)~TCPWM_2_MASK;
 206              		.loc 1 262 0
 207 0010 064B     		ldr	r3, .L12
 208 0012 064A     		ldr	r2, .L12
 209 0014 1268     		ldr	r2, [r2]
 210 0016 0421     		mov	r1, #4
 211 0018 8A43     		bic	r2, r1
 212 001a 1A60     		str	r2, [r3]
 263:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 264:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 213              		.loc 1 264 0
 214 001c FB1D     		add	r3, r7, #7
 215 001e 1B78     		ldrb	r3, [r3]
 216 0020 181C     		mov	r0, r3
 217 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 218              		.loc 1 265 0
 219 0026 BD46     		mov	sp, r7
 220 0028 03B0     		add	sp, sp, #12
 221              		@ sp needed
 222 002a 90BD     		pop	{r4, r7, pc}
 223              	.L13:
 224              		.align	2
 225              	.L12:
 226 002c 00000540 		.word	1074069504
 227              		.cfi_endproc
 228              	.LFE3:
 229              		.size	TCPWM_2_Stop, .-TCPWM_2_Stop
 230              		.section	.text.TCPWM_2_SetMode,"ax",%progbits
 231              		.align	2
 232              		.global	TCPWM_2_SetMode
 233              		.code	16
 234              		.thumb_func
 235              		.type	TCPWM_2_SetMode, %function
 236              	TCPWM_2_SetMode:
 237              	.LFB4:
 266:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 267:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 268:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetMode
 270:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 272:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 273:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the operation mode of the TCPWM_2. This function is used when
 274:.\Generated_Source\PSoC4/TCPWM_2.c **** *  configured as a generic TCPWM_2 and the actual mode of operation is
 275:.\Generated_Source\PSoC4/TCPWM_2.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/TCPWM_2.c **** *
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 10


 277:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 278:.\Generated_Source\PSoC4/TCPWM_2.c **** *  mode: Mode for the TCPWM_2 to operate in
 279:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 280:.\Generated_Source\PSoC4/TCPWM_2.c **** *   - TCPWM_2_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/TCPWM_2.c **** *                                                 compare capability
 282:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/TCPWM_2.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 289:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 290:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 291:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 292:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 238              		.loc 1 294 0
 239              		.cfi_startproc
 240 0000 90B5     		push	{r4, r7, lr}
 241              		.cfi_def_cfa_offset 12
 242              		.cfi_offset 4, -12
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 85B0     		sub	sp, sp, #20
 246              		.cfi_def_cfa_offset 32
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
 295:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 297:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 250              		.loc 1 297 0
 251 0008 0F23     		mov	r3, #15
 252 000a FC18     		add	r4, r7, r3
 253 000c FFF7FEFF 		bl	CyEnterCriticalSection
 254 0010 031C     		mov	r3, r0
 255 0012 2370     		strb	r3, [r4]
 298:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 299:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_MODE_MASK;
 256              		.loc 1 299 0
 257 0014 0A4B     		ldr	r3, .L15
 258 0016 0A4A     		ldr	r2, .L15
 259 0018 1268     		ldr	r2, [r2]
 260 001a 0A49     		ldr	r1, .L15+4
 261 001c 0A40     		and	r2, r1
 262 001e 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= mode;
 263              		.loc 1 300 0
 264 0020 074B     		ldr	r3, .L15
 265 0022 074A     		ldr	r2, .L15
 266 0024 1168     		ldr	r1, [r2]
 267 0026 7A68     		ldr	r2, [r7, #4]
 268 0028 0A43     		orr	r2, r1
 269 002a 1A60     		str	r2, [r3]
 301:.\Generated_Source\PSoC4/TCPWM_2.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 11


 302:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 270              		.loc 1 302 0
 271 002c 0F23     		mov	r3, #15
 272 002e FB18     		add	r3, r7, r3
 273 0030 1B78     		ldrb	r3, [r3]
 274 0032 181C     		mov	r0, r3
 275 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 276              		.loc 1 303 0
 277 0038 BD46     		mov	sp, r7
 278 003a 05B0     		add	sp, sp, #20
 279              		@ sp needed
 280 003c 90BD     		pop	{r4, r7, pc}
 281              	.L16:
 282 003e C046     		.align	2
 283              	.L15:
 284 0040 80010540 		.word	1074069888
 285 0044 FFFFFFF8 		.word	-117440513
 286              		.cfi_endproc
 287              	.LFE4:
 288              		.size	TCPWM_2_SetMode, .-TCPWM_2_SetMode
 289              		.section	.text.TCPWM_2_SetQDMode,"ax",%progbits
 290              		.align	2
 291              		.global	TCPWM_2_SetQDMode
 292              		.code	16
 293              		.thumb_func
 294              		.type	TCPWM_2_SetQDMode, %function
 295              	TCPWM_2_SetQDMode:
 296              	.LFB5:
 304:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 305:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 306:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetQDMode
 308:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 310:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 311:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 314:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 315:.\Generated_Source\PSoC4/TCPWM_2.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 317:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/TCPWM_2.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 322:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 323:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 324:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 325:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 297              		.loc 1 327 0
 298              		.cfi_startproc
 299 0000 90B5     		push	{r4, r7, lr}
 300              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 12


 301              		.cfi_offset 4, -12
 302              		.cfi_offset 7, -8
 303              		.cfi_offset 14, -4
 304 0002 85B0     		sub	sp, sp, #20
 305              		.cfi_def_cfa_offset 32
 306 0004 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 308 0006 7860     		str	r0, [r7, #4]
 328:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 330:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 309              		.loc 1 330 0
 310 0008 0F23     		mov	r3, #15
 311 000a FC18     		add	r4, r7, r3
 312 000c FFF7FEFF 		bl	CyEnterCriticalSection
 313 0010 031C     		mov	r3, r0
 314 0012 2370     		strb	r3, [r4]
 331:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 332:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_QUAD_MODE_MASK;
 315              		.loc 1 332 0
 316 0014 0A4B     		ldr	r3, .L18
 317 0016 0A4A     		ldr	r2, .L18
 318 0018 1268     		ldr	r2, [r2]
 319 001a 0A49     		ldr	r1, .L18+4
 320 001c 0A40     		and	r2, r1
 321 001e 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= qdMode;
 322              		.loc 1 333 0
 323 0020 074B     		ldr	r3, .L18
 324 0022 074A     		ldr	r2, .L18
 325 0024 1168     		ldr	r1, [r2]
 326 0026 7A68     		ldr	r2, [r7, #4]
 327 0028 0A43     		orr	r2, r1
 328 002a 1A60     		str	r2, [r3]
 334:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 335:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 329              		.loc 1 335 0
 330 002c 0F23     		mov	r3, #15
 331 002e FB18     		add	r3, r7, r3
 332 0030 1B78     		ldrb	r3, [r3]
 333 0032 181C     		mov	r0, r3
 334 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 335              		.loc 1 336 0
 336 0038 BD46     		mov	sp, r7
 337 003a 05B0     		add	sp, sp, #20
 338              		@ sp needed
 339 003c 90BD     		pop	{r4, r7, pc}
 340              	.L19:
 341 003e C046     		.align	2
 342              	.L18:
 343 0040 80010540 		.word	1074069888
 344 0044 FFFF8FFF 		.word	-7340033
 345              		.cfi_endproc
 346              	.LFE5:
 347              		.size	TCPWM_2_SetQDMode, .-TCPWM_2_SetQDMode
 348              		.section	.text.TCPWM_2_SetPrescaler,"ax",%progbits
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 13


 349              		.align	2
 350              		.global	TCPWM_2_SetPrescaler
 351              		.code	16
 352              		.thumb_func
 353              		.type	TCPWM_2_SetPrescaler, %function
 354              	TCPWM_2_SetPrescaler:
 355              	.LFB6:
 337:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 338:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 339:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPrescaler
 341:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 343:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 344:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/TCPWM_2.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 347:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 348:.\Generated_Source\PSoC4/TCPWM_2.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 350:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 359:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 360:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 361:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 362:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 356              		.loc 1 364 0
 357              		.cfi_startproc
 358 0000 90B5     		push	{r4, r7, lr}
 359              		.cfi_def_cfa_offset 12
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 85B0     		sub	sp, sp, #20
 364              		.cfi_def_cfa_offset 32
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 367 0006 7860     		str	r0, [r7, #4]
 365:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 367:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 367 0
 369 0008 0F23     		mov	r3, #15
 370 000a FC18     		add	r4, r7, r3
 371 000c FFF7FEFF 		bl	CyEnterCriticalSection
 372 0010 031C     		mov	r3, r0
 373 0012 2370     		strb	r3, [r4]
 368:.\Generated_Source\PSoC4/TCPWM_2.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 14


 369:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_PRESCALER_MASK;
 374              		.loc 1 369 0
 375 0014 0A4B     		ldr	r3, .L21
 376 0016 0A4A     		ldr	r2, .L21
 377 0018 1268     		ldr	r2, [r2]
 378 001a 0A49     		ldr	r1, .L21+4
 379 001c 0A40     		and	r2, r1
 380 001e 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= prescaler;
 381              		.loc 1 370 0
 382 0020 074B     		ldr	r3, .L21
 383 0022 074A     		ldr	r2, .L21
 384 0024 1168     		ldr	r1, [r2]
 385 0026 7A68     		ldr	r2, [r7, #4]
 386 0028 0A43     		orr	r2, r1
 387 002a 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 372:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 388              		.loc 1 372 0
 389 002c 0F23     		mov	r3, #15
 390 002e FB18     		add	r3, r7, r3
 391 0030 1B78     		ldrb	r3, [r3]
 392 0032 181C     		mov	r0, r3
 393 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 394              		.loc 1 373 0
 395 0038 BD46     		mov	sp, r7
 396 003a 05B0     		add	sp, sp, #20
 397              		@ sp needed
 398 003c 90BD     		pop	{r4, r7, pc}
 399              	.L22:
 400 003e C046     		.align	2
 401              	.L21:
 402 0040 80010540 		.word	1074069888
 403 0044 FF00FFFF 		.word	-65281
 404              		.cfi_endproc
 405              	.LFE6:
 406              		.size	TCPWM_2_SetPrescaler, .-TCPWM_2_SetPrescaler
 407              		.section	.text.TCPWM_2_SetOneShot,"ax",%progbits
 408              		.align	2
 409              		.global	TCPWM_2_SetOneShot
 410              		.code	16
 411              		.thumb_func
 412              		.type	TCPWM_2_SetOneShot, %function
 413              	TCPWM_2_SetOneShot:
 414              	.LFB7:
 374:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 375:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 376:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetOneShot
 378:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 380:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 381:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the register that controls whether the TCPWM_2 runs
 382:.\Generated_Source\PSoC4/TCPWM_2.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/TCPWM_2.c **** *  TCPWM_2 operates in the continuous mode.
 384:.\Generated_Source\PSoC4/TCPWM_2.c **** *
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 15


 385:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 386:.\Generated_Source\PSoC4/TCPWM_2.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 388:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 391:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 392:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 393:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 394:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 415              		.loc 1 396 0
 416              		.cfi_startproc
 417 0000 90B5     		push	{r4, r7, lr}
 418              		.cfi_def_cfa_offset 12
 419              		.cfi_offset 4, -12
 420              		.cfi_offset 7, -8
 421              		.cfi_offset 14, -4
 422 0002 85B0     		sub	sp, sp, #20
 423              		.cfi_def_cfa_offset 32
 424 0004 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 426 0006 7860     		str	r0, [r7, #4]
 397:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 399:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 427              		.loc 1 399 0
 428 0008 0F23     		mov	r3, #15
 429 000a FC18     		add	r4, r7, r3
 430 000c FFF7FEFF 		bl	CyEnterCriticalSection
 431 0010 031C     		mov	r3, r0
 432 0012 2370     		strb	r3, [r4]
 400:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 401:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_ONESHOT_MASK;
 433              		.loc 1 401 0
 434 0014 0B4B     		ldr	r3, .L24
 435 0016 0B4A     		ldr	r2, .L24
 436 0018 1268     		ldr	r2, [r2]
 437 001a 0B49     		ldr	r1, .L24+4
 438 001c 0A40     		and	r2, r1
 439 001e 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_2_1BIT_MASK) <<
 440              		.loc 1 402 0
 441 0020 084B     		ldr	r3, .L24
 442 0022 084A     		ldr	r2, .L24
 443 0024 1168     		ldr	r1, [r2]
 444 0026 7A68     		ldr	r2, [r7, #4]
 445 0028 0120     		mov	r0, #1
 446 002a 0240     		and	r2, r0
 447 002c 9204     		lsl	r2, r2, #18
 448 002e 0A43     		orr	r2, r1
 449 0030 1A60     		str	r2, [r3]
 403:.\Generated_Source\PSoC4/TCPWM_2.c ****                                                                TCPWM_2_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 405:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 450              		.loc 1 405 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 16


 451 0032 0F23     		mov	r3, #15
 452 0034 FB18     		add	r3, r7, r3
 453 0036 1B78     		ldrb	r3, [r3]
 454 0038 181C     		mov	r0, r3
 455 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 456              		.loc 1 406 0
 457 003e BD46     		mov	sp, r7
 458 0040 05B0     		add	sp, sp, #20
 459              		@ sp needed
 460 0042 90BD     		pop	{r4, r7, pc}
 461              	.L25:
 462              		.align	2
 463              	.L24:
 464 0044 80010540 		.word	1074069888
 465 0048 FFFFFBFF 		.word	-262145
 466              		.cfi_endproc
 467              	.LFE7:
 468              		.size	TCPWM_2_SetOneShot, .-TCPWM_2_SetOneShot
 469              		.section	.text.TCPWM_2_SetPWMMode,"ax",%progbits
 470              		.align	2
 471              		.global	TCPWM_2_SetPWMMode
 472              		.code	16
 473              		.thumb_func
 474              		.type	TCPWM_2_SetPWMMode, %function
 475              	TCPWM_2_SetPWMMode:
 476              	.LFB8:
 407:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 408:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 409:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPWMMode
 411:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 413:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 414:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/TCPWM_2.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/TCPWM_2.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/TCPWM_2.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/TCPWM_2.c **** *  the mode.
 419:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 420:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 421:.\Generated_Source\PSoC4/TCPWM_2.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/TCPWM_2.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 424:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 17


 437:.\Generated_Source\PSoC4/TCPWM_2.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/TCPWM_2.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/TCPWM_2.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/TCPWM_2.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 445:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 446:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 447:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 448:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 477              		.loc 1 450 0
 478              		.cfi_startproc
 479 0000 80B5     		push	{r7, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 82B0     		sub	sp, sp, #8
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              		.cfi_def_cfa_register 7
 487 0006 7860     		str	r0, [r7, #4]
 451:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL2_REG = (modeMask & TCPWM_2_6BIT_MASK);
 488              		.loc 1 451 0
 489 0008 034B     		ldr	r3, .L27
 490 000a 7A68     		ldr	r2, [r7, #4]
 491 000c 3F21     		mov	r1, #63
 492 000e 0A40     		and	r2, r1
 493 0010 1A60     		str	r2, [r3]
 452:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 494              		.loc 1 452 0
 495 0012 BD46     		mov	sp, r7
 496 0014 02B0     		add	sp, sp, #8
 497              		@ sp needed
 498 0016 80BD     		pop	{r7, pc}
 499              	.L28:
 500              		.align	2
 501              	.L27:
 502 0018 A8010540 		.word	1074069928
 503              		.cfi_endproc
 504              	.LFE8:
 505              		.size	TCPWM_2_SetPWMMode, .-TCPWM_2_SetPWMMode
 506              		.section	.text.TCPWM_2_SetPWMSyncKill,"ax",%progbits
 507              		.align	2
 508              		.global	TCPWM_2_SetPWMSyncKill
 509              		.code	16
 510              		.thumb_func
 511              		.type	TCPWM_2_SetPWMSyncKill, %function
 512              	TCPWM_2_SetPWMSyncKill:
 513              	.LFB9:
 453:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 454:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 455:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 456:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 18


 457:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 460:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 461:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/TCPWM_2.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/TCPWM_2.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/TCPWM_2.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 466:.\Generated_Source\PSoC4/TCPWM_2.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/TCPWM_2.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 469:.\Generated_Source\PSoC4/TCPWM_2.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/TCPWM_2.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/TCPWM_2.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/TCPWM_2.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 474:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 475:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 476:.\Generated_Source\PSoC4/TCPWM_2.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 478:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 481:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 482:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 483:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 484:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 514              		.loc 1 486 0
 515              		.cfi_startproc
 516 0000 90B5     		push	{r4, r7, lr}
 517              		.cfi_def_cfa_offset 12
 518              		.cfi_offset 4, -12
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 85B0     		sub	sp, sp, #20
 522              		.cfi_def_cfa_offset 32
 523 0004 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 525 0006 7860     		str	r0, [r7, #4]
 487:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 489:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 526              		.loc 1 489 0
 527 0008 0F23     		mov	r3, #15
 528 000a FC18     		add	r4, r7, r3
 529 000c FFF7FEFF 		bl	CyEnterCriticalSection
 530 0010 031C     		mov	r3, r0
 531 0012 2370     		strb	r3, [r4]
 490:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 491:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_PWM_SYNC_KILL_MASK;
 532              		.loc 1 491 0
 533 0014 0B4B     		ldr	r3, .L30
 534 0016 0B4A     		ldr	r2, .L30
 535 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 19


 536 001a 0421     		mov	r1, #4
 537 001c 8A43     		bic	r2, r1
 538 001e 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_2_1BIT_MASK)  <<
 539              		.loc 1 492 0
 540 0020 084B     		ldr	r3, .L30
 541 0022 084A     		ldr	r2, .L30
 542 0024 1168     		ldr	r1, [r2]
 543 0026 7A68     		ldr	r2, [r7, #4]
 544 0028 0120     		mov	r0, #1
 545 002a 0240     		and	r2, r0
 546 002c 9200     		lsl	r2, r2, #2
 547 002e 0A43     		orr	r2, r1
 548 0030 1A60     		str	r2, [r3]
 493:.\Generated_Source\PSoC4/TCPWM_2.c ****                                                TCPWM_2_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 495:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 549              		.loc 1 495 0
 550 0032 0F23     		mov	r3, #15
 551 0034 FB18     		add	r3, r7, r3
 552 0036 1B78     		ldrb	r3, [r3]
 553 0038 181C     		mov	r0, r3
 554 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 555              		.loc 1 496 0
 556 003e BD46     		mov	sp, r7
 557 0040 05B0     		add	sp, sp, #20
 558              		@ sp needed
 559 0042 90BD     		pop	{r4, r7, pc}
 560              	.L31:
 561              		.align	2
 562              	.L30:
 563 0044 80010540 		.word	1074069888
 564              		.cfi_endproc
 565              	.LFE9:
 566              		.size	TCPWM_2_SetPWMSyncKill, .-TCPWM_2_SetPWMSyncKill
 567              		.section	.text.TCPWM_2_SetPWMStopOnKill,"ax",%progbits
 568              		.align	2
 569              		.global	TCPWM_2_SetPWMStopOnKill
 570              		.code	16
 571              		.thumb_func
 572              		.type	TCPWM_2_SetPWMStopOnKill, %function
 573              	TCPWM_2_SetPWMStopOnKill:
 574              	.LFB10:
 497:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 498:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 499:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 503:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 504:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/TCPWM_2.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/TCPWM_2.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 508:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 509:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 20


 510:.\Generated_Source\PSoC4/TCPWM_2.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 512:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 515:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 516:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 517:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 518:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 575              		.loc 1 520 0
 576              		.cfi_startproc
 577 0000 90B5     		push	{r4, r7, lr}
 578              		.cfi_def_cfa_offset 12
 579              		.cfi_offset 4, -12
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 85B0     		sub	sp, sp, #20
 583              		.cfi_def_cfa_offset 32
 584 0004 00AF     		add	r7, sp, #0
 585              		.cfi_def_cfa_register 7
 586 0006 7860     		str	r0, [r7, #4]
 521:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 523:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 587              		.loc 1 523 0
 588 0008 0F23     		mov	r3, #15
 589 000a FC18     		add	r4, r7, r3
 590 000c FFF7FEFF 		bl	CyEnterCriticalSection
 591 0010 031C     		mov	r3, r0
 592 0012 2370     		strb	r3, [r4]
 524:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 525:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_PWM_STOP_KILL_MASK;
 593              		.loc 1 525 0
 594 0014 0B4B     		ldr	r3, .L33
 595 0016 0B4A     		ldr	r2, .L33
 596 0018 1268     		ldr	r2, [r2]
 597 001a 0821     		mov	r1, #8
 598 001c 8A43     		bic	r2, r1
 599 001e 1A60     		str	r2, [r3]
 526:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_2_1BIT_MASK)  <<
 600              		.loc 1 526 0
 601 0020 084B     		ldr	r3, .L33
 602 0022 084A     		ldr	r2, .L33
 603 0024 1168     		ldr	r1, [r2]
 604 0026 7A68     		ldr	r2, [r7, #4]
 605 0028 0120     		mov	r0, #1
 606 002a 0240     		and	r2, r0
 607 002c D200     		lsl	r2, r2, #3
 608 002e 0A43     		orr	r2, r1
 609 0030 1A60     		str	r2, [r3]
 527:.\Generated_Source\PSoC4/TCPWM_2.c ****                                                          TCPWM_2_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 529:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 610              		.loc 1 529 0
 611 0032 0F23     		mov	r3, #15
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 21


 612 0034 FB18     		add	r3, r7, r3
 613 0036 1B78     		ldrb	r3, [r3]
 614 0038 181C     		mov	r0, r3
 615 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 616              		.loc 1 530 0
 617 003e BD46     		mov	sp, r7
 618 0040 05B0     		add	sp, sp, #20
 619              		@ sp needed
 620 0042 90BD     		pop	{r4, r7, pc}
 621              	.L34:
 622              		.align	2
 623              	.L33:
 624 0044 80010540 		.word	1074069888
 625              		.cfi_endproc
 626              	.LFE10:
 627              		.size	TCPWM_2_SetPWMStopOnKill, .-TCPWM_2_SetPWMStopOnKill
 628              		.section	.text.TCPWM_2_SetPWMDeadTime,"ax",%progbits
 629              		.align	2
 630              		.global	TCPWM_2_SetPWMDeadTime
 631              		.code	16
 632              		.thumb_func
 633              		.type	TCPWM_2_SetPWMDeadTime, %function
 634              	TCPWM_2_SetPWMDeadTime:
 635              	.LFB11:
 531:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 532:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 533:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 537:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 538:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/TCPWM_2.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/TCPWM_2.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/TCPWM_2.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 543:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 544:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 545:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 548:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 549:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 550:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 551:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 636              		.loc 1 553 0
 637              		.cfi_startproc
 638 0000 90B5     		push	{r4, r7, lr}
 639              		.cfi_def_cfa_offset 12
 640              		.cfi_offset 4, -12
 641              		.cfi_offset 7, -8
 642              		.cfi_offset 14, -4
 643 0002 85B0     		sub	sp, sp, #20
 644              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 22


 645 0004 00AF     		add	r7, sp, #0
 646              		.cfi_def_cfa_register 7
 647 0006 7860     		str	r0, [r7, #4]
 554:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 556:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 648              		.loc 1 556 0
 649 0008 0F23     		mov	r3, #15
 650 000a FC18     		add	r4, r7, r3
 651 000c FFF7FEFF 		bl	CyEnterCriticalSection
 652 0010 031C     		mov	r3, r0
 653 0012 2370     		strb	r3, [r4]
 557:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 558:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_PRESCALER_MASK;
 654              		.loc 1 558 0
 655 0014 0B4B     		ldr	r3, .L36
 656 0016 0B4A     		ldr	r2, .L36
 657 0018 1268     		ldr	r2, [r2]
 658 001a 0B49     		ldr	r1, .L36+4
 659 001c 0A40     		and	r2, r1
 660 001e 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= ((uint32)((deadTime & TCPWM_2_8BIT_MASK) <<
 661              		.loc 1 559 0
 662 0020 084B     		ldr	r3, .L36
 663 0022 084A     		ldr	r2, .L36
 664 0024 1168     		ldr	r1, [r2]
 665 0026 7A68     		ldr	r2, [r7, #4]
 666 0028 1202     		lsl	r2, r2, #8
 667 002a 1204     		lsl	r2, r2, #16
 668 002c 120C     		lsr	r2, r2, #16
 669 002e 0A43     		orr	r2, r1
 670 0030 1A60     		str	r2, [r3]
 560:.\Generated_Source\PSoC4/TCPWM_2.c ****                                                           TCPWM_2_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 562:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 671              		.loc 1 562 0
 672 0032 0F23     		mov	r3, #15
 673 0034 FB18     		add	r3, r7, r3
 674 0036 1B78     		ldrb	r3, [r3]
 675 0038 181C     		mov	r0, r3
 676 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 677              		.loc 1 563 0
 678 003e BD46     		mov	sp, r7
 679 0040 05B0     		add	sp, sp, #20
 680              		@ sp needed
 681 0042 90BD     		pop	{r4, r7, pc}
 682              	.L37:
 683              		.align	2
 684              	.L36:
 685 0044 80010540 		.word	1074069888
 686 0048 FF00FFFF 		.word	-65281
 687              		.cfi_endproc
 688              	.LFE11:
 689              		.size	TCPWM_2_SetPWMDeadTime, .-TCPWM_2_SetPWMDeadTime
 690              		.section	.text.TCPWM_2_SetPWMInvert,"ax",%progbits
 691              		.align	2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 23


 692              		.global	TCPWM_2_SetPWMInvert
 693              		.code	16
 694              		.thumb_func
 695              		.type	TCPWM_2_SetPWMInvert, %function
 696              	TCPWM_2_SetPWMInvert:
 697              	.LFB12:
 564:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 565:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 566:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPWMInvert
 568:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 570:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 571:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/TCPWM_2.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/TCPWM_2.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 575:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 576:.\Generated_Source\PSoC4/TCPWM_2.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 578:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/TCPWM_2.c **** *         - TCPWM_2_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 581:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 582:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 583:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 584:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 698              		.loc 1 586 0
 699              		.cfi_startproc
 700 0000 90B5     		push	{r4, r7, lr}
 701              		.cfi_def_cfa_offset 12
 702              		.cfi_offset 4, -12
 703              		.cfi_offset 7, -8
 704              		.cfi_offset 14, -4
 705 0002 85B0     		sub	sp, sp, #20
 706              		.cfi_def_cfa_offset 32
 707 0004 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
 587:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 589:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 710              		.loc 1 589 0
 711 0008 0F23     		mov	r3, #15
 712 000a FC18     		add	r4, r7, r3
 713 000c FFF7FEFF 		bl	CyEnterCriticalSection
 714 0010 031C     		mov	r3, r0
 715 0012 2370     		strb	r3, [r4]
 590:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 591:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_INV_OUT_MASK;
 716              		.loc 1 591 0
 717 0014 0A4B     		ldr	r3, .L39
 718 0016 0A4A     		ldr	r2, .L39
 719 0018 1268     		ldr	r2, [r2]
 720 001a 0A49     		ldr	r1, .L39+4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 24


 721 001c 0A40     		and	r2, r1
 722 001e 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= mask;
 723              		.loc 1 592 0
 724 0020 074B     		ldr	r3, .L39
 725 0022 074A     		ldr	r2, .L39
 726 0024 1168     		ldr	r1, [r2]
 727 0026 7A68     		ldr	r2, [r7, #4]
 728 0028 0A43     		orr	r2, r1
 729 002a 1A60     		str	r2, [r3]
 593:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 594:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 730              		.loc 1 594 0
 731 002c 0F23     		mov	r3, #15
 732 002e FB18     		add	r3, r7, r3
 733 0030 1B78     		ldrb	r3, [r3]
 734 0032 181C     		mov	r0, r3
 735 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 736              		.loc 1 595 0
 737 0038 BD46     		mov	sp, r7
 738 003a 05B0     		add	sp, sp, #20
 739              		@ sp needed
 740 003c 90BD     		pop	{r4, r7, pc}
 741              	.L40:
 742 003e C046     		.align	2
 743              	.L39:
 744 0040 80010540 		.word	1074069888
 745 0044 FFFFCFFF 		.word	-3145729
 746              		.cfi_endproc
 747              	.LFE12:
 748              		.size	TCPWM_2_SetPWMInvert, .-TCPWM_2_SetPWMInvert
 749              		.section	.text.TCPWM_2_WriteCounter,"ax",%progbits
 750              		.align	2
 751              		.global	TCPWM_2_WriteCounter
 752              		.code	16
 753              		.thumb_func
 754              		.type	TCPWM_2_WriteCounter, %function
 755              	TCPWM_2_WriteCounter:
 756              	.LFB13:
 596:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 597:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 598:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 599:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_WriteCounter
 601:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 603:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 604:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/TCPWM_2.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/TCPWM_2.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 608:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 609:.\Generated_Source\PSoC4/TCPWM_2.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 611:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 612:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 25


 613:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 614:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 757              		.loc 1 616 0
 758              		.cfi_startproc
 759 0000 80B5     		push	{r7, lr}
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 82B0     		sub	sp, sp, #8
 764              		.cfi_def_cfa_offset 16
 765 0004 00AF     		add	r7, sp, #0
 766              		.cfi_def_cfa_register 7
 767 0006 7860     		str	r0, [r7, #4]
 617:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_COUNTER_REG = (count & TCPWM_2_16BIT_MASK);
 768              		.loc 1 617 0
 769 0008 034B     		ldr	r3, .L42
 770 000a 7A68     		ldr	r2, [r7, #4]
 771 000c 1204     		lsl	r2, r2, #16
 772 000e 120C     		lsr	r2, r2, #16
 773 0010 1A60     		str	r2, [r3]
 618:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 774              		.loc 1 618 0
 775 0012 BD46     		mov	sp, r7
 776 0014 02B0     		add	sp, sp, #8
 777              		@ sp needed
 778 0016 80BD     		pop	{r7, pc}
 779              	.L43:
 780              		.align	2
 781              	.L42:
 782 0018 88010540 		.word	1074069896
 783              		.cfi_endproc
 784              	.LFE13:
 785              		.size	TCPWM_2_WriteCounter, .-TCPWM_2_WriteCounter
 786              		.section	.text.TCPWM_2_ReadCounter,"ax",%progbits
 787              		.align	2
 788              		.global	TCPWM_2_ReadCounter
 789              		.code	16
 790              		.thumb_func
 791              		.type	TCPWM_2_ReadCounter, %function
 792              	TCPWM_2_ReadCounter:
 793              	.LFB14:
 619:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 620:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 621:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadCounter
 623:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 625:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 626:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 628:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 629:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 630:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 631:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 632:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Current counter value
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 26


 633:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 634:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadCounter(void)
 636:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 794              		.loc 1 636 0
 795              		.cfi_startproc
 796 0000 80B5     		push	{r7, lr}
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 7, -8
 799              		.cfi_offset 14, -4
 800 0002 00AF     		add	r7, sp, #0
 801              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_COUNTER_REG & TCPWM_2_16BIT_MASK);
 802              		.loc 1 637 0
 803 0004 034B     		ldr	r3, .L46
 804 0006 1B68     		ldr	r3, [r3]
 805 0008 1B04     		lsl	r3, r3, #16
 806 000a 1B0C     		lsr	r3, r3, #16
 638:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 807              		.loc 1 638 0
 808 000c 181C     		mov	r0, r3
 809 000e BD46     		mov	sp, r7
 810              		@ sp needed
 811 0010 80BD     		pop	{r7, pc}
 812              	.L47:
 813 0012 C046     		.align	2
 814              	.L46:
 815 0014 88010540 		.word	1074069896
 816              		.cfi_endproc
 817              	.LFE14:
 818              		.size	TCPWM_2_ReadCounter, .-TCPWM_2_ReadCounter
 819              		.section	.text.TCPWM_2_SetCounterMode,"ax",%progbits
 820              		.align	2
 821              		.global	TCPWM_2_SetCounterMode
 822              		.code	16
 823              		.thumb_func
 824              		.type	TCPWM_2_SetCounterMode, %function
 825              	TCPWM_2_SetCounterMode:
 826              	.LFB15:
 639:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 640:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 641:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetCounterMode
 643:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 645:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 646:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/TCPWM_2.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 649:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 650:.\Generated_Source\PSoC4/TCPWM_2.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 652:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/TCPWM_2.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_COUNT_UPDOWN1  - Counts up and down. Terminal count
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 27


 657:.\Generated_Source\PSoC4/TCPWM_2.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/TCPWM_2.c **** *                                         and period
 659:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 660:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 661:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 662:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 663:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 827              		.loc 1 665 0
 828              		.cfi_startproc
 829 0000 90B5     		push	{r4, r7, lr}
 830              		.cfi_def_cfa_offset 12
 831              		.cfi_offset 4, -12
 832              		.cfi_offset 7, -8
 833              		.cfi_offset 14, -4
 834 0002 85B0     		sub	sp, sp, #20
 835              		.cfi_def_cfa_offset 32
 836 0004 00AF     		add	r7, sp, #0
 837              		.cfi_def_cfa_register 7
 838 0006 7860     		str	r0, [r7, #4]
 666:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 668:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 839              		.loc 1 668 0
 840 0008 0F23     		mov	r3, #15
 841 000a FC18     		add	r4, r7, r3
 842 000c FFF7FEFF 		bl	CyEnterCriticalSection
 843 0010 031C     		mov	r3, r0
 844 0012 2370     		strb	r3, [r4]
 669:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 670:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_UPDOWN_MASK;
 845              		.loc 1 670 0
 846 0014 0A4B     		ldr	r3, .L49
 847 0016 0A4A     		ldr	r2, .L49
 848 0018 1268     		ldr	r2, [r2]
 849 001a 0A49     		ldr	r1, .L49+4
 850 001c 0A40     		and	r2, r1
 851 001e 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= counterMode;
 852              		.loc 1 671 0
 853 0020 074B     		ldr	r3, .L49
 854 0022 074A     		ldr	r2, .L49
 855 0024 1168     		ldr	r1, [r2]
 856 0026 7A68     		ldr	r2, [r7, #4]
 857 0028 0A43     		orr	r2, r1
 858 002a 1A60     		str	r2, [r3]
 672:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 673:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 859              		.loc 1 673 0
 860 002c 0F23     		mov	r3, #15
 861 002e FB18     		add	r3, r7, r3
 862 0030 1B78     		ldrb	r3, [r3]
 863 0032 181C     		mov	r0, r3
 864 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 865              		.loc 1 674 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 28


 866 0038 BD46     		mov	sp, r7
 867 003a 05B0     		add	sp, sp, #20
 868              		@ sp needed
 869 003c 90BD     		pop	{r4, r7, pc}
 870              	.L50:
 871 003e C046     		.align	2
 872              	.L49:
 873 0040 80010540 		.word	1074069888
 874 0044 FFFFFCFF 		.word	-196609
 875              		.cfi_endproc
 876              	.LFE15:
 877              		.size	TCPWM_2_SetCounterMode, .-TCPWM_2_SetCounterMode
 878              		.section	.text.TCPWM_2_WritePeriod,"ax",%progbits
 879              		.align	2
 880              		.global	TCPWM_2_WritePeriod
 881              		.code	16
 882              		.thumb_func
 883              		.type	TCPWM_2_WritePeriod, %function
 884              	TCPWM_2_WritePeriod:
 885              	.LFB16:
 675:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 676:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 677:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_WritePeriod
 679:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 681:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 682:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/TCPWM_2.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/TCPWM_2.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 686:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 687:.\Generated_Source\PSoC4/TCPWM_2.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 689:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 690:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 691:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 692:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 886              		.loc 1 694 0
 887              		.cfi_startproc
 888 0000 80B5     		push	{r7, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 7, -8
 891              		.cfi_offset 14, -4
 892 0002 82B0     		sub	sp, sp, #8
 893              		.cfi_def_cfa_offset 16
 894 0004 00AF     		add	r7, sp, #0
 895              		.cfi_def_cfa_register 7
 896 0006 7860     		str	r0, [r7, #4]
 695:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_PERIOD_REG = (period & TCPWM_2_16BIT_MASK);
 897              		.loc 1 695 0
 898 0008 034B     		ldr	r3, .L52
 899 000a 7A68     		ldr	r2, [r7, #4]
 900 000c 1204     		lsl	r2, r2, #16
 901 000e 120C     		lsr	r2, r2, #16
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 29


 902 0010 1A60     		str	r2, [r3]
 696:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 903              		.loc 1 696 0
 904 0012 BD46     		mov	sp, r7
 905 0014 02B0     		add	sp, sp, #8
 906              		@ sp needed
 907 0016 80BD     		pop	{r7, pc}
 908              	.L53:
 909              		.align	2
 910              	.L52:
 911 0018 94010540 		.word	1074069908
 912              		.cfi_endproc
 913              	.LFE16:
 914              		.size	TCPWM_2_WritePeriod, .-TCPWM_2_WritePeriod
 915              		.section	.text.TCPWM_2_ReadPeriod,"ax",%progbits
 916              		.align	2
 917              		.global	TCPWM_2_ReadPeriod
 918              		.code	16
 919              		.thumb_func
 920              		.type	TCPWM_2_ReadPeriod, %function
 921              	TCPWM_2_ReadPeriod:
 922              	.LFB17:
 697:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 698:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 699:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadPeriod
 701:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 703:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 704:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 706:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 707:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 708:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 709:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 710:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Period value
 711:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 712:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 923              		.loc 1 714 0
 924              		.cfi_startproc
 925 0000 80B5     		push	{r7, lr}
 926              		.cfi_def_cfa_offset 8
 927              		.cfi_offset 7, -8
 928              		.cfi_offset 14, -4
 929 0002 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_PERIOD_REG & TCPWM_2_16BIT_MASK);
 931              		.loc 1 715 0
 932 0004 034B     		ldr	r3, .L56
 933 0006 1B68     		ldr	r3, [r3]
 934 0008 1B04     		lsl	r3, r3, #16
 935 000a 1B0C     		lsr	r3, r3, #16
 716:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 936              		.loc 1 716 0
 937 000c 181C     		mov	r0, r3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 30


 938 000e BD46     		mov	sp, r7
 939              		@ sp needed
 940 0010 80BD     		pop	{r7, pc}
 941              	.L57:
 942 0012 C046     		.align	2
 943              	.L56:
 944 0014 94010540 		.word	1074069908
 945              		.cfi_endproc
 946              	.LFE17:
 947              		.size	TCPWM_2_ReadPeriod, .-TCPWM_2_ReadPeriod
 948              		.section	.text.TCPWM_2_SetCompareSwap,"ax",%progbits
 949              		.align	2
 950              		.global	TCPWM_2_SetCompareSwap
 951              		.code	16
 952              		.thumb_func
 953              		.type	TCPWM_2_SetCompareSwap, %function
 954              	TCPWM_2_SetCompareSwap:
 955              	.LFB18:
 717:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 718:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 719:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetCompareSwap
 721:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 723:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 724:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/TCPWM_2.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/TCPWM_2.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/TCPWM_2.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 729:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 730:.\Generated_Source\PSoC4/TCPWM_2.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 732:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 735:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 736:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 737:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 738:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 956              		.loc 1 740 0
 957              		.cfi_startproc
 958 0000 90B5     		push	{r4, r7, lr}
 959              		.cfi_def_cfa_offset 12
 960              		.cfi_offset 4, -12
 961              		.cfi_offset 7, -8
 962              		.cfi_offset 14, -4
 963 0002 85B0     		sub	sp, sp, #20
 964              		.cfi_def_cfa_offset 32
 965 0004 00AF     		add	r7, sp, #0
 966              		.cfi_def_cfa_register 7
 967 0006 7860     		str	r0, [r7, #4]
 741:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 743:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 31


 968              		.loc 1 743 0
 969 0008 0F23     		mov	r3, #15
 970 000a FC18     		add	r4, r7, r3
 971 000c FFF7FEFF 		bl	CyEnterCriticalSection
 972 0010 031C     		mov	r3, r0
 973 0012 2370     		strb	r3, [r4]
 744:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 745:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_RELOAD_CC_MASK;
 974              		.loc 1 745 0
 975 0014 0B4B     		ldr	r3, .L59
 976 0016 0B4A     		ldr	r2, .L59
 977 0018 1268     		ldr	r2, [r2]
 978 001a 0121     		mov	r1, #1
 979 001c 8A43     		bic	r2, r1
 980 001e 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= (swapEnable & TCPWM_2_1BIT_MASK);
 981              		.loc 1 746 0
 982 0020 084B     		ldr	r3, .L59
 983 0022 084A     		ldr	r2, .L59
 984 0024 1168     		ldr	r1, [r2]
 985 0026 7A68     		ldr	r2, [r7, #4]
 986 0028 0120     		mov	r0, #1
 987 002a 0240     		and	r2, r0
 988 002c 0A43     		orr	r2, r1
 989 002e 1A60     		str	r2, [r3]
 747:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 748:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 990              		.loc 1 748 0
 991 0030 0F23     		mov	r3, #15
 992 0032 FB18     		add	r3, r7, r3
 993 0034 1B78     		ldrb	r3, [r3]
 994 0036 181C     		mov	r0, r3
 995 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 996              		.loc 1 749 0
 997 003c BD46     		mov	sp, r7
 998 003e 05B0     		add	sp, sp, #20
 999              		@ sp needed
 1000 0040 90BD     		pop	{r4, r7, pc}
 1001              	.L60:
 1002 0042 C046     		.align	2
 1003              	.L59:
 1004 0044 80010540 		.word	1074069888
 1005              		.cfi_endproc
 1006              	.LFE18:
 1007              		.size	TCPWM_2_SetCompareSwap, .-TCPWM_2_SetCompareSwap
 1008              		.section	.text.TCPWM_2_WritePeriodBuf,"ax",%progbits
 1009              		.align	2
 1010              		.global	TCPWM_2_WritePeriodBuf
 1011              		.code	16
 1012              		.thumb_func
 1013              		.type	TCPWM_2_WritePeriodBuf, %function
 1014              	TCPWM_2_WritePeriodBuf:
 1015              	.LFB19:
 750:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 751:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 752:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 32


 753:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_WritePeriodBuf
 754:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 756:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 757:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 759:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 760:.\Generated_Source\PSoC4/TCPWM_2.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 762:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 763:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 764:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 765:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1016              		.loc 1 767 0
 1017              		.cfi_startproc
 1018 0000 80B5     		push	{r7, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 82B0     		sub	sp, sp, #8
 1023              		.cfi_def_cfa_offset 16
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 7860     		str	r0, [r7, #4]
 768:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_PERIOD_BUF_REG = (periodBuf & TCPWM_2_16BIT_MASK);
 1027              		.loc 1 768 0
 1028 0008 034B     		ldr	r3, .L62
 1029 000a 7A68     		ldr	r2, [r7, #4]
 1030 000c 1204     		lsl	r2, r2, #16
 1031 000e 120C     		lsr	r2, r2, #16
 1032 0010 1A60     		str	r2, [r3]
 769:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1033              		.loc 1 769 0
 1034 0012 BD46     		mov	sp, r7
 1035 0014 02B0     		add	sp, sp, #8
 1036              		@ sp needed
 1037 0016 80BD     		pop	{r7, pc}
 1038              	.L63:
 1039              		.align	2
 1040              	.L62:
 1041 0018 98010540 		.word	1074069912
 1042              		.cfi_endproc
 1043              	.LFE19:
 1044              		.size	TCPWM_2_WritePeriodBuf, .-TCPWM_2_WritePeriodBuf
 1045              		.section	.text.TCPWM_2_ReadPeriodBuf,"ax",%progbits
 1046              		.align	2
 1047              		.global	TCPWM_2_ReadPeriodBuf
 1048              		.code	16
 1049              		.thumb_func
 1050              		.type	TCPWM_2_ReadPeriodBuf, %function
 1051              	TCPWM_2_ReadPeriodBuf:
 1052              	.LFB20:
 770:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 771:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 772:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 33


 773:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 776:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 777:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 779:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 780:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 781:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 782:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 783:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Period value
 784:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 785:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1053              		.loc 1 787 0
 1054              		.cfi_startproc
 1055 0000 80B5     		push	{r7, lr}
 1056              		.cfi_def_cfa_offset 8
 1057              		.cfi_offset 7, -8
 1058              		.cfi_offset 14, -4
 1059 0002 00AF     		add	r7, sp, #0
 1060              		.cfi_def_cfa_register 7
 788:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_PERIOD_BUF_REG & TCPWM_2_16BIT_MASK);
 1061              		.loc 1 788 0
 1062 0004 034B     		ldr	r3, .L66
 1063 0006 1B68     		ldr	r3, [r3]
 1064 0008 1B04     		lsl	r3, r3, #16
 1065 000a 1B0C     		lsr	r3, r3, #16
 789:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1066              		.loc 1 789 0
 1067 000c 181C     		mov	r0, r3
 1068 000e BD46     		mov	sp, r7
 1069              		@ sp needed
 1070 0010 80BD     		pop	{r7, pc}
 1071              	.L67:
 1072 0012 C046     		.align	2
 1073              	.L66:
 1074 0014 98010540 		.word	1074069912
 1075              		.cfi_endproc
 1076              	.LFE20:
 1077              		.size	TCPWM_2_ReadPeriodBuf, .-TCPWM_2_ReadPeriodBuf
 1078              		.section	.text.TCPWM_2_SetPeriodSwap,"ax",%progbits
 1079              		.align	2
 1080              		.global	TCPWM_2_SetPeriodSwap
 1081              		.code	16
 1082              		.thumb_func
 1083              		.type	TCPWM_2_SetPeriodSwap, %function
 1084              	TCPWM_2_SetPeriodSwap:
 1085              	.LFB21:
 790:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 791:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 792:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetPeriodSwap
 794:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 796:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 34


 797:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/TCPWM_2.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/TCPWM_2.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/TCPWM_2.c **** *  switch event.
 801:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 802:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 803:.\Generated_Source\PSoC4/TCPWM_2.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
 805:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 808:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 809:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 810:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 811:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1086              		.loc 1 813 0
 1087              		.cfi_startproc
 1088 0000 90B5     		push	{r4, r7, lr}
 1089              		.cfi_def_cfa_offset 12
 1090              		.cfi_offset 4, -12
 1091              		.cfi_offset 7, -8
 1092              		.cfi_offset 14, -4
 1093 0002 85B0     		sub	sp, sp, #20
 1094              		.cfi_def_cfa_offset 32
 1095 0004 00AF     		add	r7, sp, #0
 1096              		.cfi_def_cfa_register 7
 1097 0006 7860     		str	r0, [r7, #4]
 814:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 816:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1098              		.loc 1 816 0
 1099 0008 0F23     		mov	r3, #15
 1100 000a FC18     		add	r4, r7, r3
 1101 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1102 0010 031C     		mov	r3, r0
 1103 0012 2370     		strb	r3, [r4]
 817:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 818:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG &= (uint32)~TCPWM_2_RELOAD_PERIOD_MASK;
 1104              		.loc 1 818 0
 1105 0014 0B4B     		ldr	r3, .L69
 1106 0016 0B4A     		ldr	r2, .L69
 1107 0018 1268     		ldr	r2, [r2]
 1108 001a 0221     		mov	r1, #2
 1109 001c 8A43     		bic	r2, r1
 1110 001e 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_2_1BIT_MASK) <<
 1111              		.loc 1 819 0
 1112 0020 084B     		ldr	r3, .L69
 1113 0022 084A     		ldr	r2, .L69
 1114 0024 1168     		ldr	r1, [r2]
 1115 0026 7A68     		ldr	r2, [r7, #4]
 1116 0028 0120     		mov	r0, #1
 1117 002a 0240     		and	r2, r0
 1118 002c 5200     		lsl	r2, r2, #1
 1119 002e 0A43     		orr	r2, r1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 35


 1120 0030 1A60     		str	r2, [r3]
 820:.\Generated_Source\PSoC4/TCPWM_2.c ****                                                             TCPWM_2_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 822:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1121              		.loc 1 822 0
 1122 0032 0F23     		mov	r3, #15
 1123 0034 FB18     		add	r3, r7, r3
 1124 0036 1B78     		ldrb	r3, [r3]
 1125 0038 181C     		mov	r0, r3
 1126 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1127              		.loc 1 823 0
 1128 003e BD46     		mov	sp, r7
 1129 0040 05B0     		add	sp, sp, #20
 1130              		@ sp needed
 1131 0042 90BD     		pop	{r4, r7, pc}
 1132              	.L70:
 1133              		.align	2
 1134              	.L69:
 1135 0044 80010540 		.word	1074069888
 1136              		.cfi_endproc
 1137              	.LFE21:
 1138              		.size	TCPWM_2_SetPeriodSwap, .-TCPWM_2_SetPeriodSwap
 1139              		.section	.text.TCPWM_2_WriteCompare,"ax",%progbits
 1140              		.align	2
 1141              		.global	TCPWM_2_WriteCompare
 1142              		.code	16
 1143              		.thumb_func
 1144              		.type	TCPWM_2_WriteCompare, %function
 1145              	TCPWM_2_WriteCompare:
 1146              	.LFB22:
 824:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 825:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 826:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_WriteCompare
 828:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 830:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 831:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/TCPWM_2.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 834:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 835:.\Generated_Source\PSoC4/TCPWM_2.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 837:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 838:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 839:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 840:.\Generated_Source\PSoC4/TCPWM_2.c **** * Note:
 841:.\Generated_Source\PSoC4/TCPWM_2.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/TCPWM_2.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/TCPWM_2.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/TCPWM_2.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 848:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_WriteCompare(uint32 compare)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 36


 850:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1147              		.loc 1 850 0
 1148              		.cfi_startproc
 1149 0000 80B5     		push	{r7, lr}
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 0002 82B0     		sub	sp, sp, #8
 1154              		.cfi_def_cfa_offset 16
 1155 0004 00AF     		add	r7, sp, #0
 1156              		.cfi_def_cfa_register 7
 1157 0006 7860     		str	r0, [r7, #4]
 851:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/TCPWM_2.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 855:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/TCPWM_2.c ****         currentMode = ((TCPWM_2_CONTROL_REG & TCPWM_2_UPDOWN_MASK) >> TCPWM_2_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 858:.\Generated_Source\PSoC4/TCPWM_2.c ****         if (((uint32)TCPWM_2__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 860:.\Generated_Source\PSoC4/TCPWM_2.c ****             compare++;
 861:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 862:.\Generated_Source\PSoC4/TCPWM_2.c ****         else if (((uint32)TCPWM_2__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 864:.\Generated_Source\PSoC4/TCPWM_2.c ****             compare--;
 865:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 866:.\Generated_Source\PSoC4/TCPWM_2.c ****         else
 867:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 868:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 869:.\Generated_Source\PSoC4/TCPWM_2.c ****         
 870:.\Generated_Source\PSoC4/TCPWM_2.c ****     
 871:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/TCPWM_2.c ****     
 873:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_COMP_CAP_REG = (compare & TCPWM_2_16BIT_MASK);
 1158              		.loc 1 873 0
 1159 0008 034B     		ldr	r3, .L72
 1160 000a 7A68     		ldr	r2, [r7, #4]
 1161 000c 1204     		lsl	r2, r2, #16
 1162 000e 120C     		lsr	r2, r2, #16
 1163 0010 1A60     		str	r2, [r3]
 874:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1164              		.loc 1 874 0
 1165 0012 BD46     		mov	sp, r7
 1166 0014 02B0     		add	sp, sp, #8
 1167              		@ sp needed
 1168 0016 80BD     		pop	{r7, pc}
 1169              	.L73:
 1170              		.align	2
 1171              	.L72:
 1172 0018 8C010540 		.word	1074069900
 1173              		.cfi_endproc
 1174              	.LFE22:
 1175              		.size	TCPWM_2_WriteCompare, .-TCPWM_2_WriteCompare
 1176              		.section	.text.TCPWM_2_ReadCompare,"ax",%progbits
 1177              		.align	2
 1178              		.global	TCPWM_2_ReadCompare
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 37


 1179              		.code	16
 1180              		.thumb_func
 1181              		.type	TCPWM_2_ReadCompare, %function
 1182              	TCPWM_2_ReadCompare:
 1183              	.LFB23:
 875:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 876:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 877:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadCompare
 879:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 881:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 882:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/TCPWM_2.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 888:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 889:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 890:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 891:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 892:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Compare value
 893:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 894:.\Generated_Source\PSoC4/TCPWM_2.c **** * Note:
 895:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 899:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadCompare(void)
 901:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1184              		.loc 1 901 0
 1185              		.cfi_startproc
 1186 0000 80B5     		push	{r7, lr}
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/TCPWM_2.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/TCPWM_2.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 907:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/TCPWM_2.c ****         currentMode = ((TCPWM_2_CONTROL_REG & TCPWM_2_UPDOWN_MASK) >> TCPWM_2_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/TCPWM_2.c ****         
 910:.\Generated_Source\PSoC4/TCPWM_2.c ****         regVal = TCPWM_2_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/TCPWM_2.c ****         
 912:.\Generated_Source\PSoC4/TCPWM_2.c ****         if (((uint32)TCPWM_2__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 914:.\Generated_Source\PSoC4/TCPWM_2.c ****             regVal--;
 915:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 916:.\Generated_Source\PSoC4/TCPWM_2.c ****         else if (((uint32)TCPWM_2__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 918:.\Generated_Source\PSoC4/TCPWM_2.c ****             regVal++;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 38


 919:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 920:.\Generated_Source\PSoC4/TCPWM_2.c ****         else
 921:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 922:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 923:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 924:.\Generated_Source\PSoC4/TCPWM_2.c ****         return (regVal & TCPWM_2_16BIT_MASK);
 925:.\Generated_Source\PSoC4/TCPWM_2.c ****     #else
 926:.\Generated_Source\PSoC4/TCPWM_2.c ****         return (TCPWM_2_COMP_CAP_REG & TCPWM_2_16BIT_MASK);
 1192              		.loc 1 926 0
 1193 0004 034B     		ldr	r3, .L76
 1194 0006 1B68     		ldr	r3, [r3]
 1195 0008 1B04     		lsl	r3, r3, #16
 1196 000a 1B0C     		lsr	r3, r3, #16
 927:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1197              		.loc 1 928 0
 1198 000c 181C     		mov	r0, r3
 1199 000e BD46     		mov	sp, r7
 1200              		@ sp needed
 1201 0010 80BD     		pop	{r7, pc}
 1202              	.L77:
 1203 0012 C046     		.align	2
 1204              	.L76:
 1205 0014 8C010540 		.word	1074069900
 1206              		.cfi_endproc
 1207              	.LFE23:
 1208              		.size	TCPWM_2_ReadCompare, .-TCPWM_2_ReadCompare
 1209              		.section	.text.TCPWM_2_WriteCompareBuf,"ax",%progbits
 1210              		.align	2
 1211              		.global	TCPWM_2_WriteCompareBuf
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	TCPWM_2_WriteCompareBuf, %function
 1215              	TCPWM_2_WriteCompareBuf:
 1216              	.LFB24:
 929:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 930:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 931:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_WriteCompareBuf
 933:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 935:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 936:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/TCPWM_2.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 939:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 940:.\Generated_Source\PSoC4/TCPWM_2.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 942:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 943:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 944:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 945:.\Generated_Source\PSoC4/TCPWM_2.c **** * Note:
 946:.\Generated_Source\PSoC4/TCPWM_2.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/TCPWM_2.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/TCPWM_2.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 39


 951:.\Generated_Source\PSoC4/TCPWM_2.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 953:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1217              		.loc 1 955 0
 1218              		.cfi_startproc
 1219 0000 80B5     		push	{r7, lr}
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 82B0     		sub	sp, sp, #8
 1224              		.cfi_def_cfa_offset 16
 1225 0004 00AF     		add	r7, sp, #0
 1226              		.cfi_def_cfa_register 7
 1227 0006 7860     		str	r0, [r7, #4]
 956:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/TCPWM_2.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 960:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/TCPWM_2.c ****         currentMode = ((TCPWM_2_CONTROL_REG & TCPWM_2_UPDOWN_MASK) >> TCPWM_2_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 963:.\Generated_Source\PSoC4/TCPWM_2.c ****         if (((uint32)TCPWM_2__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 965:.\Generated_Source\PSoC4/TCPWM_2.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 967:.\Generated_Source\PSoC4/TCPWM_2.c ****         else if (((uint32)TCPWM_2__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 969:.\Generated_Source\PSoC4/TCPWM_2.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 971:.\Generated_Source\PSoC4/TCPWM_2.c ****         else
 972:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
 973:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
 974:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/TCPWM_2.c ****     
 976:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_COMP_CAP_BUF_REG = (compareBuf & TCPWM_2_16BIT_MASK);
 1228              		.loc 1 976 0
 1229 0008 034B     		ldr	r3, .L79
 1230 000a 7A68     		ldr	r2, [r7, #4]
 1231 000c 1204     		lsl	r2, r2, #16
 1232 000e 120C     		lsr	r2, r2, #16
 1233 0010 1A60     		str	r2, [r3]
 977:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1234              		.loc 1 977 0
 1235 0012 BD46     		mov	sp, r7
 1236 0014 02B0     		add	sp, sp, #8
 1237              		@ sp needed
 1238 0016 80BD     		pop	{r7, pc}
 1239              	.L80:
 1240              		.align	2
 1241              	.L79:
 1242 0018 90010540 		.word	1074069904
 1243              		.cfi_endproc
 1244              	.LFE24:
 1245              		.size	TCPWM_2_WriteCompareBuf, .-TCPWM_2_WriteCompareBuf
 1246              		.section	.text.TCPWM_2_ReadCompareBuf,"ax",%progbits
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 40


 1247              		.align	2
 1248              		.global	TCPWM_2_ReadCompareBuf
 1249              		.code	16
 1250              		.thumb_func
 1251              		.type	TCPWM_2_ReadCompareBuf, %function
 1252              	TCPWM_2_ReadCompareBuf:
 1253              	.LFB25:
 978:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 979:.\Generated_Source\PSoC4/TCPWM_2.c **** 
 980:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadCompareBuf
 982:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 984:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
 985:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 988:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
 989:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
 990:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 991:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
 992:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 994:.\Generated_Source\PSoC4/TCPWM_2.c **** * Note:
 995:.\Generated_Source\PSoC4/TCPWM_2.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/TCPWM_2.c **** *
 999:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1254              		.loc 1 1001 0
 1255              		.cfi_startproc
 1256 0000 80B5     		push	{r7, lr}
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 00AF     		add	r7, sp, #0
 1261              		.cfi_def_cfa_register 7
1002:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/TCPWM_2.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/TCPWM_2.c ****         uint32 regVal;
1005:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1007:.\Generated_Source\PSoC4/TCPWM_2.c ****     #if (TCPWM_2_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/TCPWM_2.c ****         currentMode = ((TCPWM_2_CONTROL_REG & TCPWM_2_UPDOWN_MASK) >> TCPWM_2_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1010:.\Generated_Source\PSoC4/TCPWM_2.c ****         regVal = TCPWM_2_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/TCPWM_2.c ****         
1012:.\Generated_Source\PSoC4/TCPWM_2.c ****         if (((uint32)TCPWM_2__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
1014:.\Generated_Source\PSoC4/TCPWM_2.c ****             regVal--;
1015:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
1016:.\Generated_Source\PSoC4/TCPWM_2.c ****         else if (((uint32)TCPWM_2__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
1018:.\Generated_Source\PSoC4/TCPWM_2.c ****             regVal++;
1019:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 41


1020:.\Generated_Source\PSoC4/TCPWM_2.c ****         else
1021:.\Generated_Source\PSoC4/TCPWM_2.c ****         {
1022:.\Generated_Source\PSoC4/TCPWM_2.c ****         }
1023:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1024:.\Generated_Source\PSoC4/TCPWM_2.c ****         return (regVal & TCPWM_2_16BIT_MASK);
1025:.\Generated_Source\PSoC4/TCPWM_2.c ****     #else
1026:.\Generated_Source\PSoC4/TCPWM_2.c ****         return (TCPWM_2_COMP_CAP_BUF_REG & TCPWM_2_16BIT_MASK);
 1262              		.loc 1 1026 0
 1263 0004 034B     		ldr	r3, .L83
 1264 0006 1B68     		ldr	r3, [r3]
 1265 0008 1B04     		lsl	r3, r3, #16
 1266 000a 1B0C     		lsr	r3, r3, #16
1027:.\Generated_Source\PSoC4/TCPWM_2.c ****     #endif /* (TCPWM_2_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1267              		.loc 1 1028 0
 1268 000c 181C     		mov	r0, r3
 1269 000e BD46     		mov	sp, r7
 1270              		@ sp needed
 1271 0010 80BD     		pop	{r7, pc}
 1272              	.L84:
 1273 0012 C046     		.align	2
 1274              	.L83:
 1275 0014 90010540 		.word	1074069904
 1276              		.cfi_endproc
 1277              	.LFE25:
 1278              		.size	TCPWM_2_ReadCompareBuf, .-TCPWM_2_ReadCompareBuf
 1279              		.section	.text.TCPWM_2_ReadCapture,"ax",%progbits
 1280              		.align	2
 1281              		.global	TCPWM_2_ReadCapture
 1282              		.code	16
 1283              		.thumb_func
 1284              		.type	TCPWM_2_ReadCapture, %function
 1285              	TCPWM_2_ReadCapture:
 1286              	.LFB26:
1029:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1030:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1031:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadCapture
1033:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1035:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1036:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1039:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1040:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1041:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1042:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1043:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Capture value
1044:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1045:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadCapture(void)
1047:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1287              		.loc 1 1047 0
 1288              		.cfi_startproc
 1289 0000 80B5     		push	{r7, lr}
 1290              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 42


 1291              		.cfi_offset 7, -8
 1292              		.cfi_offset 14, -4
 1293 0002 00AF     		add	r7, sp, #0
 1294              		.cfi_def_cfa_register 7
1048:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_COMP_CAP_REG & TCPWM_2_16BIT_MASK);
 1295              		.loc 1 1048 0
 1296 0004 034B     		ldr	r3, .L87
 1297 0006 1B68     		ldr	r3, [r3]
 1298 0008 1B04     		lsl	r3, r3, #16
 1299 000a 1B0C     		lsr	r3, r3, #16
1049:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1300              		.loc 1 1049 0
 1301 000c 181C     		mov	r0, r3
 1302 000e BD46     		mov	sp, r7
 1303              		@ sp needed
 1304 0010 80BD     		pop	{r7, pc}
 1305              	.L88:
 1306 0012 C046     		.align	2
 1307              	.L87:
 1308 0014 8C010540 		.word	1074069900
 1309              		.cfi_endproc
 1310              	.LFE26:
 1311              		.size	TCPWM_2_ReadCapture, .-TCPWM_2_ReadCapture
 1312              		.section	.text.TCPWM_2_ReadCaptureBuf,"ax",%progbits
 1313              		.align	2
 1314              		.global	TCPWM_2_ReadCaptureBuf
 1315              		.code	16
 1316              		.thumb_func
 1317              		.type	TCPWM_2_ReadCaptureBuf, %function
 1318              	TCPWM_2_ReadCaptureBuf:
 1319              	.LFB27:
1050:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1051:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1052:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1056:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1057:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1060:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1061:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1062:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1063:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1064:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1066:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1320              		.loc 1 1068 0
 1321              		.cfi_startproc
 1322 0000 80B5     		push	{r7, lr}
 1323              		.cfi_def_cfa_offset 8
 1324              		.cfi_offset 7, -8
 1325              		.cfi_offset 14, -4
 1326 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 43


 1327              		.cfi_def_cfa_register 7
1069:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_COMP_CAP_BUF_REG & TCPWM_2_16BIT_MASK);
 1328              		.loc 1 1069 0
 1329 0004 034B     		ldr	r3, .L91
 1330 0006 1B68     		ldr	r3, [r3]
 1331 0008 1B04     		lsl	r3, r3, #16
 1332 000a 1B0C     		lsr	r3, r3, #16
1070:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1333              		.loc 1 1070 0
 1334 000c 181C     		mov	r0, r3
 1335 000e BD46     		mov	sp, r7
 1336              		@ sp needed
 1337 0010 80BD     		pop	{r7, pc}
 1338              	.L92:
 1339 0012 C046     		.align	2
 1340              	.L91:
 1341 0014 90010540 		.word	1074069904
 1342              		.cfi_endproc
 1343              	.LFE27:
 1344              		.size	TCPWM_2_ReadCaptureBuf, .-TCPWM_2_ReadCaptureBuf
 1345              		.section	.text.TCPWM_2_SetCaptureMode,"ax",%progbits
 1346              		.align	2
 1347              		.global	TCPWM_2_SetCaptureMode
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	TCPWM_2_SetCaptureMode, %function
 1351              	TCPWM_2_SetCaptureMode:
 1352              	.LFB28:
1071:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1072:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1073:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetCaptureMode
1075:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1077:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1078:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/TCPWM_2.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1082:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1083:.\Generated_Source\PSoC4/TCPWM_2.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1085:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1090:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1091:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1092:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1093:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1353              		.loc 1 1095 0
 1354              		.cfi_startproc
 1355 0000 90B5     		push	{r4, r7, lr}
 1356              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 44


 1357              		.cfi_offset 4, -12
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
 1360 0002 85B0     		sub	sp, sp, #20
 1361              		.cfi_def_cfa_offset 32
 1362 0004 00AF     		add	r7, sp, #0
 1363              		.cfi_def_cfa_register 7
 1364 0006 7860     		str	r0, [r7, #4]
1096:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1098:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1365              		.loc 1 1098 0
 1366 0008 0F23     		mov	r3, #15
 1367 000a FC18     		add	r4, r7, r3
 1368 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1369 0010 031C     		mov	r3, r0
 1370 0012 2370     		strb	r3, [r4]
1099:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1100:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG &= (uint32)~TCPWM_2_CAPTURE_MASK;
 1371              		.loc 1 1100 0
 1372 0014 0A4B     		ldr	r3, .L94
 1373 0016 0A4A     		ldr	r2, .L94
 1374 0018 1268     		ldr	r2, [r2]
 1375 001a 0321     		mov	r1, #3
 1376 001c 8A43     		bic	r2, r1
 1377 001e 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG |= triggerMode;
 1378              		.loc 1 1101 0
 1379 0020 074B     		ldr	r3, .L94
 1380 0022 074A     		ldr	r2, .L94
 1381 0024 1168     		ldr	r1, [r2]
 1382 0026 7A68     		ldr	r2, [r7, #4]
 1383 0028 0A43     		orr	r2, r1
 1384 002a 1A60     		str	r2, [r3]
1102:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1103:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1385              		.loc 1 1103 0
 1386 002c 0F23     		mov	r3, #15
 1387 002e FB18     		add	r3, r7, r3
 1388 0030 1B78     		ldrb	r3, [r3]
 1389 0032 181C     		mov	r0, r3
 1390 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1391              		.loc 1 1104 0
 1392 0038 BD46     		mov	sp, r7
 1393 003a 05B0     		add	sp, sp, #20
 1394              		@ sp needed
 1395 003c 90BD     		pop	{r4, r7, pc}
 1396              	.L95:
 1397 003e C046     		.align	2
 1398              	.L94:
 1399 0040 A4010540 		.word	1074069924
 1400              		.cfi_endproc
 1401              	.LFE28:
 1402              		.size	TCPWM_2_SetCaptureMode, .-TCPWM_2_SetCaptureMode
 1403              		.section	.text.TCPWM_2_SetReloadMode,"ax",%progbits
 1404              		.align	2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 45


 1405              		.global	TCPWM_2_SetReloadMode
 1406              		.code	16
 1407              		.thumb_func
 1408              		.type	TCPWM_2_SetReloadMode, %function
 1409              	TCPWM_2_SetReloadMode:
 1410              	.LFB29:
1105:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1106:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1107:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetReloadMode
1109:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1111:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1112:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/TCPWM_2.c **** *  input.
1114:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1115:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1116:.\Generated_Source\PSoC4/TCPWM_2.c **** *  triggerMode: Enumerated trigger mode value
1117:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1118:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1123:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1124:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1125:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1126:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1411              		.loc 1 1128 0
 1412              		.cfi_startproc
 1413 0000 90B5     		push	{r4, r7, lr}
 1414              		.cfi_def_cfa_offset 12
 1415              		.cfi_offset 4, -12
 1416              		.cfi_offset 7, -8
 1417              		.cfi_offset 14, -4
 1418 0002 85B0     		sub	sp, sp, #20
 1419              		.cfi_def_cfa_offset 32
 1420 0004 00AF     		add	r7, sp, #0
 1421              		.cfi_def_cfa_register 7
 1422 0006 7860     		str	r0, [r7, #4]
1129:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1131:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1423              		.loc 1 1131 0
 1424 0008 0F23     		mov	r3, #15
 1425 000a FC18     		add	r4, r7, r3
 1426 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1427 0010 031C     		mov	r3, r0
 1428 0012 2370     		strb	r3, [r4]
1132:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1133:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG &= (uint32)~TCPWM_2_RELOAD_MASK;
 1429              		.loc 1 1133 0
 1430 0014 0A4B     		ldr	r3, .L97
 1431 0016 0A4A     		ldr	r2, .L97
 1432 0018 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 46


 1433 001a 3021     		mov	r1, #48
 1434 001c 8A43     		bic	r2, r1
 1435 001e 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_2_RELOAD_SHIFT));
 1436              		.loc 1 1134 0
 1437 0020 074B     		ldr	r3, .L97
 1438 0022 074A     		ldr	r2, .L97
 1439 0024 1168     		ldr	r1, [r2]
 1440 0026 7A68     		ldr	r2, [r7, #4]
 1441 0028 1201     		lsl	r2, r2, #4
 1442 002a 0A43     		orr	r2, r1
 1443 002c 1A60     		str	r2, [r3]
1135:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1136:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1444              		.loc 1 1136 0
 1445 002e 0F23     		mov	r3, #15
 1446 0030 FB18     		add	r3, r7, r3
 1447 0032 1B78     		ldrb	r3, [r3]
 1448 0034 181C     		mov	r0, r3
 1449 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1450              		.loc 1 1137 0
 1451 003a BD46     		mov	sp, r7
 1452 003c 05B0     		add	sp, sp, #20
 1453              		@ sp needed
 1454 003e 90BD     		pop	{r4, r7, pc}
 1455              	.L98:
 1456              		.align	2
 1457              	.L97:
 1458 0040 A4010540 		.word	1074069924
 1459              		.cfi_endproc
 1460              	.LFE29:
 1461              		.size	TCPWM_2_SetReloadMode, .-TCPWM_2_SetReloadMode
 1462              		.section	.text.TCPWM_2_SetStartMode,"ax",%progbits
 1463              		.align	2
 1464              		.global	TCPWM_2_SetStartMode
 1465              		.code	16
 1466              		.thumb_func
 1467              		.type	TCPWM_2_SetStartMode, %function
 1468              	TCPWM_2_SetStartMode:
 1469              	.LFB30:
1138:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1139:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1140:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetStartMode
1142:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1144:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1145:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/TCPWM_2.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1148:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1149:.\Generated_Source\PSoC4/TCPWM_2.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1151:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_FALLING   - Falling edge
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 47


1154:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1156:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1157:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1158:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1159:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1470              		.loc 1 1161 0
 1471              		.cfi_startproc
 1472 0000 90B5     		push	{r4, r7, lr}
 1473              		.cfi_def_cfa_offset 12
 1474              		.cfi_offset 4, -12
 1475              		.cfi_offset 7, -8
 1476              		.cfi_offset 14, -4
 1477 0002 85B0     		sub	sp, sp, #20
 1478              		.cfi_def_cfa_offset 32
 1479 0004 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 1481 0006 7860     		str	r0, [r7, #4]
1162:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1164:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1482              		.loc 1 1164 0
 1483 0008 0F23     		mov	r3, #15
 1484 000a FC18     		add	r4, r7, r3
 1485 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1486 0010 031C     		mov	r3, r0
 1487 0012 2370     		strb	r3, [r4]
1165:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1166:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG &= (uint32)~TCPWM_2_START_MASK;
 1488              		.loc 1 1166 0
 1489 0014 0A4B     		ldr	r3, .L100
 1490 0016 0A4A     		ldr	r2, .L100
 1491 0018 1268     		ldr	r2, [r2]
 1492 001a 0A49     		ldr	r1, .L100+4
 1493 001c 0A40     		and	r2, r1
 1494 001e 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_2_START_SHIFT));
 1495              		.loc 1 1167 0
 1496 0020 074B     		ldr	r3, .L100
 1497 0022 074A     		ldr	r2, .L100
 1498 0024 1168     		ldr	r1, [r2]
 1499 0026 7A68     		ldr	r2, [r7, #4]
 1500 0028 1202     		lsl	r2, r2, #8
 1501 002a 0A43     		orr	r2, r1
 1502 002c 1A60     		str	r2, [r3]
1168:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1169:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1503              		.loc 1 1169 0
 1504 002e 0F23     		mov	r3, #15
 1505 0030 FB18     		add	r3, r7, r3
 1506 0032 1B78     		ldrb	r3, [r3]
 1507 0034 181C     		mov	r0, r3
 1508 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1509              		.loc 1 1170 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 48


 1510 003a BD46     		mov	sp, r7
 1511 003c 05B0     		add	sp, sp, #20
 1512              		@ sp needed
 1513 003e 90BD     		pop	{r4, r7, pc}
 1514              	.L101:
 1515              		.align	2
 1516              	.L100:
 1517 0040 A4010540 		.word	1074069924
 1518 0044 FFFCFFFF 		.word	-769
 1519              		.cfi_endproc
 1520              	.LFE30:
 1521              		.size	TCPWM_2_SetStartMode, .-TCPWM_2_SetStartMode
 1522              		.section	.text.TCPWM_2_SetStopMode,"ax",%progbits
 1523              		.align	2
 1524              		.global	TCPWM_2_SetStopMode
 1525              		.code	16
 1526              		.thumb_func
 1527              		.type	TCPWM_2_SetStopMode, %function
 1528              	TCPWM_2_SetStopMode:
 1529              	.LFB31:
1171:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1172:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1173:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetStopMode
1175:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1177:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1178:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1180:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1181:.\Generated_Source\PSoC4/TCPWM_2.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1183:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1188:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1189:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1190:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1191:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1530              		.loc 1 1193 0
 1531              		.cfi_startproc
 1532 0000 90B5     		push	{r4, r7, lr}
 1533              		.cfi_def_cfa_offset 12
 1534              		.cfi_offset 4, -12
 1535              		.cfi_offset 7, -8
 1536              		.cfi_offset 14, -4
 1537 0002 85B0     		sub	sp, sp, #20
 1538              		.cfi_def_cfa_offset 32
 1539 0004 00AF     		add	r7, sp, #0
 1540              		.cfi_def_cfa_register 7
 1541 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/TCPWM_2.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 49


1196:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1542              		.loc 1 1196 0
 1543 0008 0F23     		mov	r3, #15
 1544 000a FC18     		add	r4, r7, r3
 1545 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1546 0010 031C     		mov	r3, r0
 1547 0012 2370     		strb	r3, [r4]
1197:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1198:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG &= (uint32)~TCPWM_2_STOP_MASK;
 1548              		.loc 1 1198 0
 1549 0014 0A4B     		ldr	r3, .L103
 1550 0016 0A4A     		ldr	r2, .L103
 1551 0018 1268     		ldr	r2, [r2]
 1552 001a C021     		mov	r1, #192
 1553 001c 8A43     		bic	r2, r1
 1554 001e 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_2_STOP_SHIFT));
 1555              		.loc 1 1199 0
 1556 0020 074B     		ldr	r3, .L103
 1557 0022 074A     		ldr	r2, .L103
 1558 0024 1168     		ldr	r1, [r2]
 1559 0026 7A68     		ldr	r2, [r7, #4]
 1560 0028 9201     		lsl	r2, r2, #6
 1561 002a 0A43     		orr	r2, r1
 1562 002c 1A60     		str	r2, [r3]
1200:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1201:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1563              		.loc 1 1201 0
 1564 002e 0F23     		mov	r3, #15
 1565 0030 FB18     		add	r3, r7, r3
 1566 0032 1B78     		ldrb	r3, [r3]
 1567 0034 181C     		mov	r0, r3
 1568 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1569              		.loc 1 1202 0
 1570 003a BD46     		mov	sp, r7
 1571 003c 05B0     		add	sp, sp, #20
 1572              		@ sp needed
 1573 003e 90BD     		pop	{r4, r7, pc}
 1574              	.L104:
 1575              		.align	2
 1576              	.L103:
 1577 0040 A4010540 		.word	1074069924
 1578              		.cfi_endproc
 1579              	.LFE31:
 1580              		.size	TCPWM_2_SetStopMode, .-TCPWM_2_SetStopMode
 1581              		.section	.text.TCPWM_2_SetCountMode,"ax",%progbits
 1582              		.align	2
 1583              		.global	TCPWM_2_SetCountMode
 1584              		.code	16
 1585              		.thumb_func
 1586              		.type	TCPWM_2_SetCountMode, %function
 1587              	TCPWM_2_SetCountMode:
 1588              	.LFB32:
1203:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1204:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1205:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 50


1206:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetCountMode
1207:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1209:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1210:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/TCPWM_2.c **** *  input.
1212:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1213:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1214:.\Generated_Source\PSoC4/TCPWM_2.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1216:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1221:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1222:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1223:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1224:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1589              		.loc 1 1226 0
 1590              		.cfi_startproc
 1591 0000 90B5     		push	{r4, r7, lr}
 1592              		.cfi_def_cfa_offset 12
 1593              		.cfi_offset 4, -12
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 85B0     		sub	sp, sp, #20
 1597              		.cfi_def_cfa_offset 32
 1598 0004 00AF     		add	r7, sp, #0
 1599              		.cfi_def_cfa_register 7
 1600 0006 7860     		str	r0, [r7, #4]
1227:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1229:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1601              		.loc 1 1229 0
 1602 0008 0F23     		mov	r3, #15
 1603 000a FC18     		add	r4, r7, r3
 1604 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1605 0010 031C     		mov	r3, r0
 1606 0012 2370     		strb	r3, [r4]
1230:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1231:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG &= (uint32)~TCPWM_2_COUNT_MASK;
 1607              		.loc 1 1231 0
 1608 0014 0A4B     		ldr	r3, .L106
 1609 0016 0A4A     		ldr	r2, .L106
 1610 0018 1268     		ldr	r2, [r2]
 1611 001a 0C21     		mov	r1, #12
 1612 001c 8A43     		bic	r2, r1
 1613 001e 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_2_COUNT_SHIFT));
 1614              		.loc 1 1232 0
 1615 0020 074B     		ldr	r3, .L106
 1616 0022 074A     		ldr	r2, .L106
 1617 0024 1168     		ldr	r1, [r2]
 1618 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 51


 1619 0028 9200     		lsl	r2, r2, #2
 1620 002a 0A43     		orr	r2, r1
 1621 002c 1A60     		str	r2, [r3]
1233:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1234:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1622              		.loc 1 1234 0
 1623 002e 0F23     		mov	r3, #15
 1624 0030 FB18     		add	r3, r7, r3
 1625 0032 1B78     		ldrb	r3, [r3]
 1626 0034 181C     		mov	r0, r3
 1627 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1628              		.loc 1 1235 0
 1629 003a BD46     		mov	sp, r7
 1630 003c 05B0     		add	sp, sp, #20
 1631              		@ sp needed
 1632 003e 90BD     		pop	{r4, r7, pc}
 1633              	.L107:
 1634              		.align	2
 1635              	.L106:
 1636 0040 A4010540 		.word	1074069924
 1637              		.cfi_endproc
 1638              	.LFE32:
 1639              		.size	TCPWM_2_SetCountMode, .-TCPWM_2_SetCountMode
 1640              		.section	.text.TCPWM_2_TriggerCommand,"ax",%progbits
 1641              		.align	2
 1642              		.global	TCPWM_2_TriggerCommand
 1643              		.code	16
 1644              		.thumb_func
 1645              		.type	TCPWM_2_TriggerCommand, %function
 1646              	TCPWM_2_TriggerCommand:
 1647              	.LFB33:
1236:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1237:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1238:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_TriggerCommand
1240:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1242:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1243:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/TCPWM_2.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/TCPWM_2.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1247:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1248:.\Generated_Source\PSoC4/TCPWM_2.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/TCPWM_2.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/TCPWM_2.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/TCPWM_2.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/TCPWM_2.c **** *        define.
1253:.\Generated_Source\PSoC4/TCPWM_2.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/TCPWM_2.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1256:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/TCPWM_2.c **** *
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 52


1261:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1262:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1263:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1264:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1648              		.loc 1 1266 0
 1649              		.cfi_startproc
 1650 0000 90B5     		push	{r4, r7, lr}
 1651              		.cfi_def_cfa_offset 12
 1652              		.cfi_offset 4, -12
 1653              		.cfi_offset 7, -8
 1654              		.cfi_offset 14, -4
 1655 0002 85B0     		sub	sp, sp, #20
 1656              		.cfi_def_cfa_offset 32
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
 1659 0006 7860     		str	r0, [r7, #4]
 1660 0008 3960     		str	r1, [r7]
1267:.\Generated_Source\PSoC4/TCPWM_2.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1269:.\Generated_Source\PSoC4/TCPWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1661              		.loc 1 1269 0
 1662 000a 0F23     		mov	r3, #15
 1663 000c FC18     		add	r4, r7, r3
 1664 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1665 0012 031C     		mov	r3, r0
 1666 0014 2370     		strb	r3, [r4]
1270:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1271:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_COMMAND_REG = ((uint32)(mask << command));
 1667              		.loc 1 1271 0
 1668 0016 074B     		ldr	r3, .L109
 1669 0018 3A68     		ldr	r2, [r7]
 1670 001a 7968     		ldr	r1, [r7, #4]
 1671 001c 9140     		lsl	r1, r1, r2
 1672 001e 0A1C     		mov	r2, r1
 1673 0020 1A60     		str	r2, [r3]
1272:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1273:.\Generated_Source\PSoC4/TCPWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1674              		.loc 1 1273 0
 1675 0022 0F23     		mov	r3, #15
 1676 0024 FB18     		add	r3, r7, r3
 1677 0026 1B78     		ldrb	r3, [r3]
 1678 0028 181C     		mov	r0, r3
 1679 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1680              		.loc 1 1274 0
 1681 002e BD46     		mov	sp, r7
 1682 0030 05B0     		add	sp, sp, #20
 1683              		@ sp needed
 1684 0032 90BD     		pop	{r4, r7, pc}
 1685              	.L110:
 1686              		.align	2
 1687              	.L109:
 1688 0034 08000540 		.word	1074069512
 1689              		.cfi_endproc
 1690              	.LFE33:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 53


 1691              		.size	TCPWM_2_TriggerCommand, .-TCPWM_2_TriggerCommand
 1692              		.section	.text.TCPWM_2_ReadStatus,"ax",%progbits
 1693              		.align	2
 1694              		.global	TCPWM_2_ReadStatus
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	TCPWM_2_ReadStatus, %function
 1698              	TCPWM_2_ReadStatus:
 1699              	.LFB34:
1275:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1276:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1277:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ReadStatus
1279:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1281:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1282:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Reads the status of the TCPWM_2.
1283:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1284:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1285:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1286:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1287:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1288:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Status
1289:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1290:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1293:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_ReadStatus(void)
1295:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1700              		.loc 1 1295 0
 1701              		.cfi_startproc
 1702 0000 80B5     		push	{r7, lr}
 1703              		.cfi_def_cfa_offset 8
 1704              		.cfi_offset 7, -8
 1705              		.cfi_offset 14, -4
 1706 0002 00AF     		add	r7, sp, #0
 1707              		.cfi_def_cfa_register 7
1296:.\Generated_Source\PSoC4/TCPWM_2.c ****     return ((TCPWM_2_STATUS_REG >> TCPWM_2_RUNNING_STATUS_SHIFT) |
 1708              		.loc 1 1296 0
 1709 0004 054B     		ldr	r3, .L113
 1710 0006 1B68     		ldr	r3, [r3]
 1711 0008 9A0F     		lsr	r2, r3, #30
1297:.\Generated_Source\PSoC4/TCPWM_2.c ****             (TCPWM_2_STATUS_REG & TCPWM_2_STATUS_DOWN));
 1712              		.loc 1 1297 0
 1713 000a 044B     		ldr	r3, .L113
 1714 000c 1B68     		ldr	r3, [r3]
 1715 000e 0121     		mov	r1, #1
 1716 0010 0B40     		and	r3, r1
1296:.\Generated_Source\PSoC4/TCPWM_2.c ****     return ((TCPWM_2_STATUS_REG >> TCPWM_2_RUNNING_STATUS_SHIFT) |
 1717              		.loc 1 1296 0
 1718 0012 1343     		orr	r3, r2
1298:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1719              		.loc 1 1298 0
 1720 0014 181C     		mov	r0, r3
 1721 0016 BD46     		mov	sp, r7
 1722              		@ sp needed
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 54


 1723 0018 80BD     		pop	{r7, pc}
 1724              	.L114:
 1725 001a C046     		.align	2
 1726              	.L113:
 1727 001c 84010540 		.word	1074069892
 1728              		.cfi_endproc
 1729              	.LFE34:
 1730              		.size	TCPWM_2_ReadStatus, .-TCPWM_2_ReadStatus
 1731              		.section	.text.TCPWM_2_SetInterruptMode,"ax",%progbits
 1732              		.align	2
 1733              		.global	TCPWM_2_SetInterruptMode
 1734              		.code	16
 1735              		.thumb_func
 1736              		.type	TCPWM_2_SetInterruptMode, %function
 1737              	TCPWM_2_SetInterruptMode:
 1738              	.LFB35:
1299:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1300:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1301:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetInterruptMode
1303:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1305:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1306:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/TCPWM_2.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1309:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1310:.\Generated_Source\PSoC4/TCPWM_2.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1312:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1315:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1316:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1317:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1318:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1739              		.loc 1 1320 0
 1740              		.cfi_startproc
 1741 0000 80B5     		push	{r7, lr}
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 7, -8
 1744              		.cfi_offset 14, -4
 1745 0002 82B0     		sub	sp, sp, #8
 1746              		.cfi_def_cfa_offset 16
 1747 0004 00AF     		add	r7, sp, #0
 1748              		.cfi_def_cfa_register 7
 1749 0006 7860     		str	r0, [r7, #4]
1321:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_INTERRUPT_MASK_REG =  interruptMask;
 1750              		.loc 1 1321 0
 1751 0008 024B     		ldr	r3, .L116
 1752 000a 7A68     		ldr	r2, [r7, #4]
 1753 000c 1A60     		str	r2, [r3]
1322:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1754              		.loc 1 1322 0
 1755 000e BD46     		mov	sp, r7
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 55


 1756 0010 02B0     		add	sp, sp, #8
 1757              		@ sp needed
 1758 0012 80BD     		pop	{r7, pc}
 1759              	.L117:
 1760              		.align	2
 1761              	.L116:
 1762 0014 B8010540 		.word	1074069944
 1763              		.cfi_endproc
 1764              	.LFE35:
 1765              		.size	TCPWM_2_SetInterruptMode, .-TCPWM_2_SetInterruptMode
 1766              		.section	.text.TCPWM_2_GetInterruptSourceMasked,"ax",%progbits
 1767              		.align	2
 1768              		.global	TCPWM_2_GetInterruptSourceMasked
 1769              		.code	16
 1770              		.thumb_func
 1771              		.type	TCPWM_2_GetInterruptSourceMasked, %function
 1772              	TCPWM_2_GetInterruptSourceMasked:
 1773              	.LFB36:
1323:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1324:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1325:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1329:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1330:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1332:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1333:.\Generated_Source\PSoC4/TCPWM_2.c **** *   None
1334:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1335:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1336:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1338:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1341:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1774              		.loc 1 1343 0
 1775              		.cfi_startproc
 1776 0000 80B5     		push	{r7, lr}
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_offset 7, -8
 1779              		.cfi_offset 14, -4
 1780 0002 00AF     		add	r7, sp, #0
 1781              		.cfi_def_cfa_register 7
1344:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_INTERRUPT_MASKED_REG);
 1782              		.loc 1 1344 0
 1783 0004 024B     		ldr	r3, .L120
 1784 0006 1B68     		ldr	r3, [r3]
1345:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1785              		.loc 1 1345 0
 1786 0008 181C     		mov	r0, r3
 1787 000a BD46     		mov	sp, r7
 1788              		@ sp needed
 1789 000c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 56


 1790              	.L121:
 1791 000e C046     		.align	2
 1792              	.L120:
 1793 0010 BC010540 		.word	1074069948
 1794              		.cfi_endproc
 1795              	.LFE36:
 1796              		.size	TCPWM_2_GetInterruptSourceMasked, .-TCPWM_2_GetInterruptSourceMasked
 1797              		.section	.text.TCPWM_2_GetInterruptSource,"ax",%progbits
 1798              		.align	2
 1799              		.global	TCPWM_2_GetInterruptSource
 1800              		.code	16
 1801              		.thumb_func
 1802              		.type	TCPWM_2_GetInterruptSource, %function
 1803              	TCPWM_2_GetInterruptSource:
 1804              	.LFB37:
1346:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1347:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1348:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_GetInterruptSource
1350:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1352:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1353:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1355:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1356:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1357:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1358:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1359:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1361:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1364:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/TCPWM_2.c **** uint32 TCPWM_2_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1805              		.loc 1 1366 0
 1806              		.cfi_startproc
 1807 0000 80B5     		push	{r7, lr}
 1808              		.cfi_def_cfa_offset 8
 1809              		.cfi_offset 7, -8
 1810              		.cfi_offset 14, -4
 1811 0002 00AF     		add	r7, sp, #0
 1812              		.cfi_def_cfa_register 7
1367:.\Generated_Source\PSoC4/TCPWM_2.c ****     return (TCPWM_2_INTERRUPT_REQ_REG);
 1813              		.loc 1 1367 0
 1814 0004 024B     		ldr	r3, .L124
 1815 0006 1B68     		ldr	r3, [r3]
1368:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1816              		.loc 1 1368 0
 1817 0008 181C     		mov	r0, r3
 1818 000a BD46     		mov	sp, r7
 1819              		@ sp needed
 1820 000c 80BD     		pop	{r7, pc}
 1821              	.L125:
 1822 000e C046     		.align	2
 1823              	.L124:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 57


 1824 0010 B0010540 		.word	1074069936
 1825              		.cfi_endproc
 1826              	.LFE37:
 1827              		.size	TCPWM_2_GetInterruptSource, .-TCPWM_2_GetInterruptSource
 1828              		.section	.text.TCPWM_2_ClearInterrupt,"ax",%progbits
 1829              		.align	2
 1830              		.global	TCPWM_2_ClearInterrupt
 1831              		.code	16
 1832              		.thumb_func
 1833              		.type	TCPWM_2_ClearInterrupt, %function
 1834              	TCPWM_2_ClearInterrupt:
 1835              	.LFB38:
1369:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1370:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1371:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_ClearInterrupt
1373:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1374:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1375:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1376:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1378:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1379:.\Generated_Source\PSoC4/TCPWM_2.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1381:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1384:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1385:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1386:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1387:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1836              		.loc 1 1389 0
 1837              		.cfi_startproc
 1838 0000 80B5     		push	{r7, lr}
 1839              		.cfi_def_cfa_offset 8
 1840              		.cfi_offset 7, -8
 1841              		.cfi_offset 14, -4
 1842 0002 82B0     		sub	sp, sp, #8
 1843              		.cfi_def_cfa_offset 16
 1844 0004 00AF     		add	r7, sp, #0
 1845              		.cfi_def_cfa_register 7
 1846 0006 7860     		str	r0, [r7, #4]
1390:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_INTERRUPT_REQ_REG = interruptMask;
 1847              		.loc 1 1390 0
 1848 0008 024B     		ldr	r3, .L127
 1849 000a 7A68     		ldr	r2, [r7, #4]
 1850 000c 1A60     		str	r2, [r3]
1391:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1851              		.loc 1 1391 0
 1852 000e BD46     		mov	sp, r7
 1853 0010 02B0     		add	sp, sp, #8
 1854              		@ sp needed
 1855 0012 80BD     		pop	{r7, pc}
 1856              	.L128:
 1857              		.align	2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 58


 1858              	.L127:
 1859 0014 B0010540 		.word	1074069936
 1860              		.cfi_endproc
 1861              	.LFE38:
 1862              		.size	TCPWM_2_ClearInterrupt, .-TCPWM_2_ClearInterrupt
 1863              		.section	.text.TCPWM_2_SetInterrupt,"ax",%progbits
 1864              		.align	2
 1865              		.global	TCPWM_2_SetInterrupt
 1866              		.code	16
 1867              		.thumb_func
 1868              		.type	TCPWM_2_SetInterrupt, %function
 1869              	TCPWM_2_SetInterrupt:
 1870              	.LFB39:
1392:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1393:.\Generated_Source\PSoC4/TCPWM_2.c **** 
1394:.\Generated_Source\PSoC4/TCPWM_2.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/TCPWM_2.c **** * Function Name: TCPWM_2_SetInterrupt
1396:.\Generated_Source\PSoC4/TCPWM_2.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1398:.\Generated_Source\PSoC4/TCPWM_2.c **** * Summary:
1399:.\Generated_Source\PSoC4/TCPWM_2.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1401:.\Generated_Source\PSoC4/TCPWM_2.c **** * Parameters:
1402:.\Generated_Source\PSoC4/TCPWM_2.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/TCPWM_2.c **** *   Values:
1404:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/TCPWM_2.c **** *     - TCPWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1407:.\Generated_Source\PSoC4/TCPWM_2.c **** * Return:
1408:.\Generated_Source\PSoC4/TCPWM_2.c **** *  None
1409:.\Generated_Source\PSoC4/TCPWM_2.c **** *
1410:.\Generated_Source\PSoC4/TCPWM_2.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/TCPWM_2.c **** void TCPWM_2_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/TCPWM_2.c **** {
 1871              		.loc 1 1412 0
 1872              		.cfi_startproc
 1873 0000 80B5     		push	{r7, lr}
 1874              		.cfi_def_cfa_offset 8
 1875              		.cfi_offset 7, -8
 1876              		.cfi_offset 14, -4
 1877 0002 82B0     		sub	sp, sp, #8
 1878              		.cfi_def_cfa_offset 16
 1879 0004 00AF     		add	r7, sp, #0
 1880              		.cfi_def_cfa_register 7
 1881 0006 7860     		str	r0, [r7, #4]
1413:.\Generated_Source\PSoC4/TCPWM_2.c ****     TCPWM_2_INTERRUPT_SET_REG = interruptMask;
 1882              		.loc 1 1413 0
 1883 0008 024B     		ldr	r3, .L130
 1884 000a 7A68     		ldr	r2, [r7, #4]
 1885 000c 1A60     		str	r2, [r3]
1414:.\Generated_Source\PSoC4/TCPWM_2.c **** }
 1886              		.loc 1 1414 0
 1887 000e BD46     		mov	sp, r7
 1888 0010 02B0     		add	sp, sp, #8
 1889              		@ sp needed
 1890 0012 80BD     		pop	{r7, pc}
 1891              	.L131:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 59


 1892              		.align	2
 1893              	.L130:
 1894 0014 B4010540 		.word	1074069940
 1895              		.cfi_endproc
 1896              	.LFE39:
 1897              		.size	TCPWM_2_SetInterrupt, .-TCPWM_2_SetInterrupt
 1898              		.text
 1899              	.Letext0:
 1900              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1901              		.section	.debug_info,"",%progbits
 1902              	.Ldebug_info0:
 1903 0000 F0060000 		.4byte	0x6f0
 1904 0004 0400     		.2byte	0x4
 1905 0006 00000000 		.4byte	.Ldebug_abbrev0
 1906 000a 04       		.byte	0x4
 1907 000b 01       		.uleb128 0x1
 1908 000c FD040000 		.4byte	.LASF76
 1909 0010 01       		.byte	0x1
 1910 0011 C0000000 		.4byte	.LASF77
 1911 0015 50030000 		.4byte	.LASF78
 1912 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1913 001d 00000000 		.4byte	0
 1914 0021 00000000 		.4byte	.Ldebug_line0
 1915 0025 02       		.uleb128 0x2
 1916 0026 01       		.byte	0x1
 1917 0027 06       		.byte	0x6
 1918 0028 A0000000 		.4byte	.LASF0
 1919 002c 02       		.uleb128 0x2
 1920 002d 01       		.byte	0x1
 1921 002e 08       		.byte	0x8
 1922 002f 27030000 		.4byte	.LASF1
 1923 0033 02       		.uleb128 0x2
 1924 0034 02       		.byte	0x2
 1925 0035 05       		.byte	0x5
 1926 0036 46030000 		.4byte	.LASF2
 1927 003a 02       		.uleb128 0x2
 1928 003b 02       		.byte	0x2
 1929 003c 07       		.byte	0x7
 1930 003d F5010000 		.4byte	.LASF3
 1931 0041 02       		.uleb128 0x2
 1932 0042 04       		.byte	0x4
 1933 0043 05       		.byte	0x5
 1934 0044 08010000 		.4byte	.LASF4
 1935 0048 02       		.uleb128 0x2
 1936 0049 04       		.byte	0x4
 1937 004a 07       		.byte	0x7
 1938 004b DA010000 		.4byte	.LASF5
 1939 004f 02       		.uleb128 0x2
 1940 0050 08       		.byte	0x8
 1941 0051 05       		.byte	0x5
 1942 0052 92000000 		.4byte	.LASF6
 1943 0056 02       		.uleb128 0x2
 1944 0057 08       		.byte	0x8
 1945 0058 07       		.byte	0x7
 1946 0059 46000000 		.4byte	.LASF7
 1947 005d 03       		.uleb128 0x3
 1948 005e 04       		.byte	0x4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 60


 1949 005f 05       		.byte	0x5
 1950 0060 696E7400 		.ascii	"int\000"
 1951 0064 02       		.uleb128 0x2
 1952 0065 04       		.byte	0x4
 1953 0066 07       		.byte	0x7
 1954 0067 C5010000 		.4byte	.LASF8
 1955 006b 04       		.uleb128 0x4
 1956 006c 21010000 		.4byte	.LASF9
 1957 0070 02       		.byte	0x2
 1958 0071 3801     		.2byte	0x138
 1959 0073 2C000000 		.4byte	0x2c
 1960 0077 04       		.uleb128 0x4
 1961 0078 78010000 		.4byte	.LASF10
 1962 007c 02       		.byte	0x2
 1963 007d 3A01     		.2byte	0x13a
 1964 007f 48000000 		.4byte	0x48
 1965 0083 02       		.uleb128 0x2
 1966 0084 04       		.byte	0x4
 1967 0085 04       		.byte	0x4
 1968 0086 EB020000 		.4byte	.LASF11
 1969 008a 02       		.uleb128 0x2
 1970 008b 08       		.byte	0x8
 1971 008c 04       		.byte	0x4
 1972 008d 48010000 		.4byte	.LASF12
 1973 0091 02       		.uleb128 0x2
 1974 0092 01       		.byte	0x1
 1975 0093 08       		.byte	0x8
 1976 0094 EC030000 		.4byte	.LASF13
 1977 0098 04       		.uleb128 0x4
 1978 0099 6C020000 		.4byte	.LASF14
 1979 009d 02       		.byte	0x2
 1980 009e E401     		.2byte	0x1e4
 1981 00a0 A4000000 		.4byte	0xa4
 1982 00a4 05       		.uleb128 0x5
 1983 00a5 77000000 		.4byte	0x77
 1984 00a9 02       		.uleb128 0x2
 1985 00aa 04       		.byte	0x4
 1986 00ab 07       		.byte	0x7
 1987 00ac 87020000 		.4byte	.LASF15
 1988 00b0 06       		.uleb128 0x6
 1989 00b1 8B050000 		.4byte	.LASF16
 1990 00b5 01       		.byte	0x1
 1991 00b6 26       		.byte	0x26
 1992 00b7 00000000 		.4byte	.LFB0
 1993 00bb 54000000 		.4byte	.LFE0-.LFB0
 1994 00bf 01       		.uleb128 0x1
 1995 00c0 9C       		.byte	0x9c
 1996 00c1 07       		.uleb128 0x7
 1997 00c2 F9000000 		.4byte	.LASF18
 1998 00c6 01       		.byte	0x1
 1999 00c7 B1       		.byte	0xb1
 2000 00c8 00000000 		.4byte	.LFB1
 2001 00cc 38000000 		.4byte	.LFE1-.LFB1
 2002 00d0 01       		.uleb128 0x1
 2003 00d1 9C       		.byte	0x9c
 2004 00d2 E5000000 		.4byte	0xe5
 2005 00d6 08       		.uleb128 0x8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 61


 2006 00d7 96040000 		.4byte	.LASF20
 2007 00db 01       		.byte	0x1
 2008 00dc B3       		.byte	0xb3
 2009 00dd 6B000000 		.4byte	0x6b
 2010 00e1 02       		.uleb128 0x2
 2011 00e2 91       		.byte	0x91
 2012 00e3 6F       		.sleb128 -17
 2013 00e4 00       		.byte	0
 2014 00e5 06       		.uleb128 0x6
 2015 00e6 06000000 		.4byte	.LASF17
 2016 00ea 01       		.byte	0x1
 2017 00eb E6       		.byte	0xe6
 2018 00ec 00000000 		.4byte	.LFB2
 2019 00f0 24000000 		.4byte	.LFE2-.LFB2
 2020 00f4 01       		.uleb128 0x1
 2021 00f5 9C       		.byte	0x9c
 2022 00f6 09       		.uleb128 0x9
 2023 00f7 B6020000 		.4byte	.LASF19
 2024 00fb 01       		.byte	0x1
 2025 00fc 0001     		.2byte	0x100
 2026 00fe 00000000 		.4byte	.LFB3
 2027 0102 30000000 		.4byte	.LFE3-.LFB3
 2028 0106 01       		.uleb128 0x1
 2029 0107 9C       		.byte	0x9c
 2030 0108 1C010000 		.4byte	0x11c
 2031 010c 0A       		.uleb128 0xa
 2032 010d 96040000 		.4byte	.LASF20
 2033 0111 01       		.byte	0x1
 2034 0112 0201     		.2byte	0x102
 2035 0114 6B000000 		.4byte	0x6b
 2036 0118 02       		.uleb128 0x2
 2037 0119 91       		.byte	0x91
 2038 011a 6F       		.sleb128 -17
 2039 011b 00       		.byte	0
 2040 011c 09       		.uleb128 0x9
 2041 011d 11010000 		.4byte	.LASF21
 2042 0121 01       		.byte	0x1
 2043 0122 2501     		.2byte	0x125
 2044 0124 00000000 		.4byte	.LFB4
 2045 0128 48000000 		.4byte	.LFE4-.LFB4
 2046 012c 01       		.uleb128 0x1
 2047 012d 9C       		.byte	0x9c
 2048 012e 51010000 		.4byte	0x151
 2049 0132 0B       		.uleb128 0xb
 2050 0133 06040000 		.4byte	.LASF23
 2051 0137 01       		.byte	0x1
 2052 0138 2501     		.2byte	0x125
 2053 013a 77000000 		.4byte	0x77
 2054 013e 02       		.uleb128 0x2
 2055 013f 91       		.byte	0x91
 2056 0140 64       		.sleb128 -28
 2057 0141 0A       		.uleb128 0xa
 2058 0142 96040000 		.4byte	.LASF20
 2059 0146 01       		.byte	0x1
 2060 0147 2701     		.2byte	0x127
 2061 0149 6B000000 		.4byte	0x6b
 2062 014d 02       		.uleb128 0x2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 62


 2063 014e 91       		.byte	0x91
 2064 014f 6F       		.sleb128 -17
 2065 0150 00       		.byte	0
 2066 0151 09       		.uleb128 0x9
 2067 0152 66040000 		.4byte	.LASF22
 2068 0156 01       		.byte	0x1
 2069 0157 4601     		.2byte	0x146
 2070 0159 00000000 		.4byte	.LFB5
 2071 015d 48000000 		.4byte	.LFE5-.LFB5
 2072 0161 01       		.uleb128 0x1
 2073 0162 9C       		.byte	0x9c
 2074 0163 86010000 		.4byte	0x186
 2075 0167 0B       		.uleb128 0xb
 2076 0168 74000000 		.4byte	.LASF24
 2077 016c 01       		.byte	0x1
 2078 016d 4601     		.2byte	0x146
 2079 016f 77000000 		.4byte	0x77
 2080 0173 02       		.uleb128 0x2
 2081 0174 91       		.byte	0x91
 2082 0175 64       		.sleb128 -28
 2083 0176 0A       		.uleb128 0xa
 2084 0177 96040000 		.4byte	.LASF20
 2085 017b 01       		.byte	0x1
 2086 017c 4801     		.2byte	0x148
 2087 017e 6B000000 		.4byte	0x6b
 2088 0182 02       		.uleb128 0x2
 2089 0183 91       		.byte	0x91
 2090 0184 6F       		.sleb128 -17
 2091 0185 00       		.byte	0
 2092 0186 09       		.uleb128 0x9
 2093 0187 E8040000 		.4byte	.LASF25
 2094 018b 01       		.byte	0x1
 2095 018c 6B01     		.2byte	0x16b
 2096 018e 00000000 		.4byte	.LFB6
 2097 0192 48000000 		.4byte	.LFE6-.LFB6
 2098 0196 01       		.uleb128 0x1
 2099 0197 9C       		.byte	0x9c
 2100 0198 BB010000 		.4byte	0x1bb
 2101 019c 0B       		.uleb128 0xb
 2102 019d F1020000 		.4byte	.LASF26
 2103 01a1 01       		.byte	0x1
 2104 01a2 6B01     		.2byte	0x16b
 2105 01a4 77000000 		.4byte	0x77
 2106 01a8 02       		.uleb128 0x2
 2107 01a9 91       		.byte	0x91
 2108 01aa 64       		.sleb128 -28
 2109 01ab 0A       		.uleb128 0xa
 2110 01ac 96040000 		.4byte	.LASF20
 2111 01b0 01       		.byte	0x1
 2112 01b1 6D01     		.2byte	0x16d
 2113 01b3 6B000000 		.4byte	0x6b
 2114 01b7 02       		.uleb128 0x2
 2115 01b8 91       		.byte	0x91
 2116 01b9 6F       		.sleb128 -17
 2117 01ba 00       		.byte	0
 2118 01bb 09       		.uleb128 0x9
 2119 01bc 83040000 		.4byte	.LASF27
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 63


 2120 01c0 01       		.byte	0x1
 2121 01c1 8B01     		.2byte	0x18b
 2122 01c3 00000000 		.4byte	.LFB7
 2123 01c7 4C000000 		.4byte	.LFE7-.LFB7
 2124 01cb 01       		.uleb128 0x1
 2125 01cc 9C       		.byte	0x9c
 2126 01cd F0010000 		.4byte	0x1f0
 2127 01d1 0B       		.uleb128 0xb
 2128 01d2 5E020000 		.4byte	.LASF28
 2129 01d6 01       		.byte	0x1
 2130 01d7 8B01     		.2byte	0x18b
 2131 01d9 77000000 		.4byte	0x77
 2132 01dd 02       		.uleb128 0x2
 2133 01de 91       		.byte	0x91
 2134 01df 64       		.sleb128 -28
 2135 01e0 0A       		.uleb128 0xa
 2136 01e1 96040000 		.4byte	.LASF20
 2137 01e5 01       		.byte	0x1
 2138 01e6 8D01     		.2byte	0x18d
 2139 01e8 6B000000 		.4byte	0x6b
 2140 01ec 02       		.uleb128 0x2
 2141 01ed 91       		.byte	0x91
 2142 01ee 6F       		.sleb128 -17
 2143 01ef 00       		.byte	0
 2144 01f0 0C       		.uleb128 0xc
 2145 01f1 65010000 		.4byte	.LASF29
 2146 01f5 01       		.byte	0x1
 2147 01f6 C101     		.2byte	0x1c1
 2148 01f8 00000000 		.4byte	.LFB8
 2149 01fc 1C000000 		.4byte	.LFE8-.LFB8
 2150 0200 01       		.uleb128 0x1
 2151 0201 9C       		.byte	0x9c
 2152 0202 16020000 		.4byte	0x216
 2153 0206 0B       		.uleb128 0xb
 2154 0207 EC010000 		.4byte	.LASF30
 2155 020b 01       		.byte	0x1
 2156 020c C101     		.2byte	0x1c1
 2157 020e 77000000 		.4byte	0x77
 2158 0212 02       		.uleb128 0x2
 2159 0213 91       		.byte	0x91
 2160 0214 74       		.sleb128 -12
 2161 0215 00       		.byte	0
 2162 0216 09       		.uleb128 0x9
 2163 0217 D6050000 		.4byte	.LASF31
 2164 021b 01       		.byte	0x1
 2165 021c E501     		.2byte	0x1e5
 2166 021e 00000000 		.4byte	.LFB9
 2167 0222 48000000 		.4byte	.LFE9-.LFB9
 2168 0226 01       		.uleb128 0x1
 2169 0227 9C       		.byte	0x9c
 2170 0228 4B020000 		.4byte	0x24b
 2171 022c 0B       		.uleb128 0xb
 2172 022d A7020000 		.4byte	.LASF32
 2173 0231 01       		.byte	0x1
 2174 0232 E501     		.2byte	0x1e5
 2175 0234 77000000 		.4byte	0x77
 2176 0238 02       		.uleb128 0x2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 64


 2177 0239 91       		.byte	0x91
 2178 023a 64       		.sleb128 -28
 2179 023b 0A       		.uleb128 0xa
 2180 023c 96040000 		.4byte	.LASF20
 2181 0240 01       		.byte	0x1
 2182 0241 E701     		.2byte	0x1e7
 2183 0243 6B000000 		.4byte	0x6b
 2184 0247 02       		.uleb128 0x2
 2185 0248 91       		.byte	0x91
 2186 0249 6F       		.sleb128 -17
 2187 024a 00       		.byte	0
 2188 024b 09       		.uleb128 0x9
 2189 024c D3030000 		.4byte	.LASF33
 2190 0250 01       		.byte	0x1
 2191 0251 0702     		.2byte	0x207
 2192 0253 00000000 		.4byte	.LFB10
 2193 0257 48000000 		.4byte	.LFE10-.LFB10
 2194 025b 01       		.uleb128 0x1
 2195 025c 9C       		.byte	0x9c
 2196 025d 80020000 		.4byte	0x280
 2197 0261 0B       		.uleb128 0xb
 2198 0262 35030000 		.4byte	.LASF34
 2199 0266 01       		.byte	0x1
 2200 0267 0702     		.2byte	0x207
 2201 0269 77000000 		.4byte	0x77
 2202 026d 02       		.uleb128 0x2
 2203 026e 91       		.byte	0x91
 2204 026f 64       		.sleb128 -28
 2205 0270 0A       		.uleb128 0xa
 2206 0271 96040000 		.4byte	.LASF20
 2207 0275 01       		.byte	0x1
 2208 0276 0902     		.2byte	0x209
 2209 0278 6B000000 		.4byte	0x6b
 2210 027c 02       		.uleb128 0x2
 2211 027d 91       		.byte	0x91
 2212 027e 6F       		.sleb128 -17
 2213 027f 00       		.byte	0
 2214 0280 09       		.uleb128 0x9
 2215 0281 A5010000 		.4byte	.LASF35
 2216 0285 01       		.byte	0x1
 2217 0286 2802     		.2byte	0x228
 2218 0288 00000000 		.4byte	.LFB11
 2219 028c 4C000000 		.4byte	.LFE11-.LFB11
 2220 0290 01       		.uleb128 0x1
 2221 0291 9C       		.byte	0x9c
 2222 0292 B5020000 		.4byte	0x2b5
 2223 0296 0B       		.uleb128 0xb
 2224 0297 BC010000 		.4byte	.LASF36
 2225 029b 01       		.byte	0x1
 2226 029c 2802     		.2byte	0x228
 2227 029e 77000000 		.4byte	0x77
 2228 02a2 02       		.uleb128 0x2
 2229 02a3 91       		.byte	0x91
 2230 02a4 64       		.sleb128 -28
 2231 02a5 0A       		.uleb128 0xa
 2232 02a6 96040000 		.4byte	.LASF20
 2233 02aa 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 65


 2234 02ab 2A02     		.2byte	0x22a
 2235 02ad 6B000000 		.4byte	0x6b
 2236 02b1 02       		.uleb128 0x2
 2237 02b2 91       		.byte	0x91
 2238 02b3 6F       		.sleb128 -17
 2239 02b4 00       		.byte	0
 2240 02b5 09       		.uleb128 0x9
 2241 02b6 F1030000 		.4byte	.LASF37
 2242 02ba 01       		.byte	0x1
 2243 02bb 4902     		.2byte	0x249
 2244 02bd 00000000 		.4byte	.LFB12
 2245 02c1 48000000 		.4byte	.LFE12-.LFB12
 2246 02c5 01       		.uleb128 0x1
 2247 02c6 9C       		.byte	0x9c
 2248 02c7 EA020000 		.4byte	0x2ea
 2249 02cb 0B       		.uleb128 0xb
 2250 02cc A0010000 		.4byte	.LASF38
 2251 02d0 01       		.byte	0x1
 2252 02d1 4902     		.2byte	0x249
 2253 02d3 77000000 		.4byte	0x77
 2254 02d7 02       		.uleb128 0x2
 2255 02d8 91       		.byte	0x91
 2256 02d9 64       		.sleb128 -28
 2257 02da 0A       		.uleb128 0xa
 2258 02db 96040000 		.4byte	.LASF20
 2259 02df 01       		.byte	0x1
 2260 02e0 4B02     		.2byte	0x24b
 2261 02e2 6B000000 		.4byte	0x6b
 2262 02e6 02       		.uleb128 0x2
 2263 02e7 91       		.byte	0x91
 2264 02e8 6F       		.sleb128 -17
 2265 02e9 00       		.byte	0
 2266 02ea 0C       		.uleb128 0xc
 2267 02eb FB020000 		.4byte	.LASF39
 2268 02ef 01       		.byte	0x1
 2269 02f0 6702     		.2byte	0x267
 2270 02f2 00000000 		.4byte	.LFB13
 2271 02f6 1C000000 		.4byte	.LFE13-.LFB13
 2272 02fa 01       		.uleb128 0x1
 2273 02fb 9C       		.byte	0x9c
 2274 02fc 10030000 		.4byte	0x310
 2275 0300 0B       		.uleb128 0xb
 2276 0301 00000000 		.4byte	.LASF40
 2277 0305 01       		.byte	0x1
 2278 0306 6702     		.2byte	0x267
 2279 0308 77000000 		.4byte	0x77
 2280 030c 02       		.uleb128 0x2
 2281 030d 91       		.byte	0x91
 2282 030e 74       		.sleb128 -12
 2283 030f 00       		.byte	0
 2284 0310 0D       		.uleb128 0xd
 2285 0311 C3020000 		.4byte	.LASF45
 2286 0315 01       		.byte	0x1
 2287 0316 7B02     		.2byte	0x27b
 2288 0318 77000000 		.4byte	0x77
 2289 031c 00000000 		.4byte	.LFB14
 2290 0320 18000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 66


 2291 0324 01       		.uleb128 0x1
 2292 0325 9C       		.byte	0x9c
 2293 0326 09       		.uleb128 0x9
 2294 0327 10030000 		.4byte	.LASF41
 2295 032b 01       		.byte	0x1
 2296 032c 9802     		.2byte	0x298
 2297 032e 00000000 		.4byte	.LFB15
 2298 0332 48000000 		.4byte	.LFE15-.LFB15
 2299 0336 01       		.uleb128 0x1
 2300 0337 9C       		.byte	0x9c
 2301 0338 5B030000 		.4byte	0x35b
 2302 033c 0B       		.uleb128 0xb
 2303 033d 47040000 		.4byte	.LASF42
 2304 0341 01       		.byte	0x1
 2305 0342 9802     		.2byte	0x298
 2306 0344 77000000 		.4byte	0x77
 2307 0348 02       		.uleb128 0x2
 2308 0349 91       		.byte	0x91
 2309 034a 64       		.sleb128 -28
 2310 034b 0A       		.uleb128 0xa
 2311 034c 96040000 		.4byte	.LASF20
 2312 0350 01       		.byte	0x1
 2313 0351 9A02     		.2byte	0x29a
 2314 0353 6B000000 		.4byte	0x6b
 2315 0357 02       		.uleb128 0x2
 2316 0358 91       		.byte	0x91
 2317 0359 6F       		.sleb128 -17
 2318 035a 00       		.byte	0
 2319 035b 0C       		.uleb128 0xc
 2320 035c AC000000 		.4byte	.LASF43
 2321 0360 01       		.byte	0x1
 2322 0361 B502     		.2byte	0x2b5
 2323 0363 00000000 		.4byte	.LFB16
 2324 0367 1C000000 		.4byte	.LFE16-.LFB16
 2325 036b 01       		.uleb128 0x1
 2326 036c 9C       		.byte	0x9c
 2327 036d 81030000 		.4byte	0x381
 2328 0371 0B       		.uleb128 0xb
 2329 0372 2C000000 		.4byte	.LASF44
 2330 0376 01       		.byte	0x1
 2331 0377 B502     		.2byte	0x2b5
 2332 0379 77000000 		.4byte	0x77
 2333 037d 02       		.uleb128 0x2
 2334 037e 91       		.byte	0x91
 2335 037f 74       		.sleb128 -12
 2336 0380 00       		.byte	0
 2337 0381 0D       		.uleb128 0xd
 2338 0382 33000000 		.4byte	.LASF46
 2339 0386 01       		.byte	0x1
 2340 0387 C902     		.2byte	0x2c9
 2341 0389 77000000 		.4byte	0x77
 2342 038d 00000000 		.4byte	.LFB17
 2343 0391 18000000 		.4byte	.LFE17-.LFB17
 2344 0395 01       		.uleb128 0x1
 2345 0396 9C       		.byte	0x9c
 2346 0397 09       		.uleb128 0x9
 2347 0398 D1040000 		.4byte	.LASF47
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 67


 2348 039c 01       		.byte	0x1
 2349 039d E302     		.2byte	0x2e3
 2350 039f 00000000 		.4byte	.LFB18
 2351 03a3 48000000 		.4byte	.LFE18-.LFB18
 2352 03a7 01       		.uleb128 0x1
 2353 03a8 9C       		.byte	0x9c
 2354 03a9 CC030000 		.4byte	0x3cc
 2355 03ad 0B       		.uleb128 0xb
 2356 03ae 53040000 		.4byte	.LASF48
 2357 03b2 01       		.byte	0x1
 2358 03b3 E302     		.2byte	0x2e3
 2359 03b5 77000000 		.4byte	0x77
 2360 03b9 02       		.uleb128 0x2
 2361 03ba 91       		.byte	0x91
 2362 03bb 64       		.sleb128 -28
 2363 03bc 0A       		.uleb128 0xa
 2364 03bd 96040000 		.4byte	.LASF20
 2365 03c1 01       		.byte	0x1
 2366 03c2 E502     		.2byte	0x2e5
 2367 03c4 6B000000 		.4byte	0x6b
 2368 03c8 02       		.uleb128 0x2
 2369 03c9 91       		.byte	0x91
 2370 03ca 6F       		.sleb128 -17
 2371 03cb 00       		.byte	0
 2372 03cc 0C       		.uleb128 0xc
 2373 03cd 1D020000 		.4byte	.LASF49
 2374 03d1 01       		.byte	0x1
 2375 03d2 FE02     		.2byte	0x2fe
 2376 03d4 00000000 		.4byte	.LFB19
 2377 03d8 1C000000 		.4byte	.LFE19-.LFB19
 2378 03dc 01       		.uleb128 0x1
 2379 03dd 9C       		.byte	0x9c
 2380 03de F2030000 		.4byte	0x3f2
 2381 03e2 0B       		.uleb128 0xb
 2382 03e3 98050000 		.4byte	.LASF50
 2383 03e7 01       		.byte	0x1
 2384 03e8 FE02     		.2byte	0x2fe
 2385 03ea 77000000 		.4byte	0x77
 2386 03ee 02       		.uleb128 0x2
 2387 03ef 91       		.byte	0x91
 2388 03f0 74       		.sleb128 -12
 2389 03f1 00       		.byte	0
 2390 03f2 0D       		.uleb128 0xd
 2391 03f3 E3000000 		.4byte	.LASF51
 2392 03f7 01       		.byte	0x1
 2393 03f8 1203     		.2byte	0x312
 2394 03fa 77000000 		.4byte	0x77
 2395 03fe 00000000 		.4byte	.LFB20
 2396 0402 18000000 		.4byte	.LFE20-.LFB20
 2397 0406 01       		.uleb128 0x1
 2398 0407 9C       		.byte	0x9c
 2399 0408 09       		.uleb128 0x9
 2400 0409 4F010000 		.4byte	.LASF52
 2401 040d 01       		.byte	0x1
 2402 040e 2C03     		.2byte	0x32c
 2403 0410 00000000 		.4byte	.LFB21
 2404 0414 48000000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 68


 2405 0418 01       		.uleb128 0x1
 2406 0419 9C       		.byte	0x9c
 2407 041a 3D040000 		.4byte	0x43d
 2408 041e 0B       		.uleb128 0xb
 2409 041f 53040000 		.4byte	.LASF48
 2410 0423 01       		.byte	0x1
 2411 0424 2C03     		.2byte	0x32c
 2412 0426 77000000 		.4byte	0x77
 2413 042a 02       		.uleb128 0x2
 2414 042b 91       		.byte	0x91
 2415 042c 64       		.sleb128 -28
 2416 042d 0A       		.uleb128 0xa
 2417 042e 96040000 		.4byte	.LASF20
 2418 0432 01       		.byte	0x1
 2419 0433 2E03     		.2byte	0x32e
 2420 0435 6B000000 		.4byte	0x6b
 2421 0439 02       		.uleb128 0x2
 2422 043a 91       		.byte	0x91
 2423 043b 6F       		.sleb128 -17
 2424 043c 00       		.byte	0
 2425 043d 0C       		.uleb128 0xc
 2426 043e 72020000 		.4byte	.LASF53
 2427 0442 01       		.byte	0x1
 2428 0443 5103     		.2byte	0x351
 2429 0445 00000000 		.4byte	.LFB22
 2430 0449 1C000000 		.4byte	.LFE22-.LFB22
 2431 044d 01       		.uleb128 0x1
 2432 044e 9C       		.byte	0x9c
 2433 044f 63040000 		.4byte	0x463
 2434 0453 0B       		.uleb128 0xb
 2435 0454 5E040000 		.4byte	.LASF54
 2436 0458 01       		.byte	0x1
 2437 0459 5103     		.2byte	0x351
 2438 045b 77000000 		.4byte	0x77
 2439 045f 02       		.uleb128 0x2
 2440 0460 91       		.byte	0x91
 2441 0461 74       		.sleb128 -12
 2442 0462 00       		.byte	0
 2443 0463 0D       		.uleb128 0xd
 2444 0464 34020000 		.4byte	.LASF55
 2445 0468 01       		.byte	0x1
 2446 0469 8403     		.2byte	0x384
 2447 046b 77000000 		.4byte	0x77
 2448 046f 00000000 		.4byte	.LFB23
 2449 0473 18000000 		.4byte	.LFE23-.LFB23
 2450 0477 01       		.uleb128 0x1
 2451 0478 9C       		.byte	0x9c
 2452 0479 0C       		.uleb128 0xc
 2453 047a 14000000 		.4byte	.LASF56
 2454 047e 01       		.byte	0x1
 2455 047f BA03     		.2byte	0x3ba
 2456 0481 00000000 		.4byte	.LFB24
 2457 0485 1C000000 		.4byte	.LFE24-.LFB24
 2458 0489 01       		.uleb128 0x1
 2459 048a 9C       		.byte	0x9c
 2460 048b 9F040000 		.4byte	0x49f
 2461 048f 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 69


 2462 0490 78040000 		.4byte	.LASF57
 2463 0494 01       		.byte	0x1
 2464 0495 BA03     		.2byte	0x3ba
 2465 0497 77000000 		.4byte	0x77
 2466 049b 02       		.uleb128 0x2
 2467 049c 91       		.byte	0x91
 2468 049d 74       		.sleb128 -12
 2469 049e 00       		.byte	0
 2470 049f 0D       		.uleb128 0xd
 2471 04a0 BA040000 		.4byte	.LASF58
 2472 04a4 01       		.byte	0x1
 2473 04a5 E803     		.2byte	0x3e8
 2474 04a7 77000000 		.4byte	0x77
 2475 04ab 00000000 		.4byte	.LFB25
 2476 04af 18000000 		.4byte	.LFE25-.LFB25
 2477 04b3 01       		.uleb128 0x1
 2478 04b4 9C       		.byte	0x9c
 2479 04b5 0D       		.uleb128 0xd
 2480 04b6 D7020000 		.4byte	.LASF59
 2481 04ba 01       		.byte	0x1
 2482 04bb 1604     		.2byte	0x416
 2483 04bd 77000000 		.4byte	0x77
 2484 04c1 00000000 		.4byte	.LFB26
 2485 04c5 18000000 		.4byte	.LFE26-.LFB26
 2486 04c9 01       		.uleb128 0x1
 2487 04ca 9C       		.byte	0x9c
 2488 04cb 0D       		.uleb128 0xd
 2489 04cc 90020000 		.4byte	.LASF60
 2490 04d0 01       		.byte	0x1
 2491 04d1 2B04     		.2byte	0x42b
 2492 04d3 77000000 		.4byte	0x77
 2493 04d7 00000000 		.4byte	.LFB27
 2494 04db 18000000 		.4byte	.LFE27-.LFB27
 2495 04df 01       		.uleb128 0x1
 2496 04e0 9C       		.byte	0x9c
 2497 04e1 09       		.uleb128 0x9
 2498 04e2 0B040000 		.4byte	.LASF61
 2499 04e6 01       		.byte	0x1
 2500 04e7 4604     		.2byte	0x446
 2501 04e9 00000000 		.4byte	.LFB28
 2502 04ed 44000000 		.4byte	.LFE28-.LFB28
 2503 04f1 01       		.uleb128 0x1
 2504 04f2 9C       		.byte	0x9c
 2505 04f3 16050000 		.4byte	0x516
 2506 04f7 0B       		.uleb128 0xb
 2507 04f8 7F010000 		.4byte	.LASF62
 2508 04fc 01       		.byte	0x1
 2509 04fd 4604     		.2byte	0x446
 2510 04ff 77000000 		.4byte	0x77
 2511 0503 02       		.uleb128 0x2
 2512 0504 91       		.byte	0x91
 2513 0505 64       		.sleb128 -28
 2514 0506 0A       		.uleb128 0xa
 2515 0507 96040000 		.4byte	.LASF20
 2516 050b 01       		.byte	0x1
 2517 050c 4804     		.2byte	0x448
 2518 050e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 70


 2519 0512 02       		.uleb128 0x2
 2520 0513 91       		.byte	0x91
 2521 0514 6F       		.sleb128 -17
 2522 0515 00       		.byte	0
 2523 0516 09       		.uleb128 0x9
 2524 0517 48020000 		.4byte	.LASF63
 2525 051b 01       		.byte	0x1
 2526 051c 6704     		.2byte	0x467
 2527 051e 00000000 		.4byte	.LFB29
 2528 0522 44000000 		.4byte	.LFE29-.LFB29
 2529 0526 01       		.uleb128 0x1
 2530 0527 9C       		.byte	0x9c
 2531 0528 4B050000 		.4byte	0x54b
 2532 052c 0B       		.uleb128 0xb
 2533 052d 7F010000 		.4byte	.LASF62
 2534 0531 01       		.byte	0x1
 2535 0532 6704     		.2byte	0x467
 2536 0534 77000000 		.4byte	0x77
 2537 0538 02       		.uleb128 0x2
 2538 0539 91       		.byte	0x91
 2539 053a 64       		.sleb128 -28
 2540 053b 0A       		.uleb128 0xa
 2541 053c 96040000 		.4byte	.LASF20
 2542 0540 01       		.byte	0x1
 2543 0541 6904     		.2byte	0x469
 2544 0543 6B000000 		.4byte	0x6b
 2545 0547 02       		.uleb128 0x2
 2546 0548 91       		.byte	0x91
 2547 0549 6F       		.sleb128 -17
 2548 054a 00       		.byte	0
 2549 054b 09       		.uleb128 0x9
 2550 054c 22040000 		.4byte	.LASF64
 2551 0550 01       		.byte	0x1
 2552 0551 8804     		.2byte	0x488
 2553 0553 00000000 		.4byte	.LFB30
 2554 0557 48000000 		.4byte	.LFE30-.LFB30
 2555 055b 01       		.uleb128 0x1
 2556 055c 9C       		.byte	0x9c
 2557 055d 80050000 		.4byte	0x580
 2558 0561 0B       		.uleb128 0xb
 2559 0562 7F010000 		.4byte	.LASF62
 2560 0566 01       		.byte	0x1
 2561 0567 8804     		.2byte	0x488
 2562 0569 77000000 		.4byte	0x77
 2563 056d 02       		.uleb128 0x2
 2564 056e 91       		.byte	0x91
 2565 056f 64       		.sleb128 -28
 2566 0570 0A       		.uleb128 0xa
 2567 0571 96040000 		.4byte	.LASF20
 2568 0575 01       		.byte	0x1
 2569 0576 8A04     		.2byte	0x48a
 2570 0578 6B000000 		.4byte	0x6b
 2571 057c 02       		.uleb128 0x2
 2572 057d 91       		.byte	0x91
 2573 057e 6F       		.sleb128 -17
 2574 057f 00       		.byte	0
 2575 0580 09       		.uleb128 0x9
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 71


 2576 0581 BF030000 		.4byte	.LASF65
 2577 0585 01       		.byte	0x1
 2578 0586 A804     		.2byte	0x4a8
 2579 0588 00000000 		.4byte	.LFB31
 2580 058c 44000000 		.4byte	.LFE31-.LFB31
 2581 0590 01       		.uleb128 0x1
 2582 0591 9C       		.byte	0x9c
 2583 0592 B5050000 		.4byte	0x5b5
 2584 0596 0B       		.uleb128 0xb
 2585 0597 7F010000 		.4byte	.LASF62
 2586 059b 01       		.byte	0x1
 2587 059c A804     		.2byte	0x4a8
 2588 059e 77000000 		.4byte	0x77
 2589 05a2 02       		.uleb128 0x2
 2590 05a3 91       		.byte	0x91
 2591 05a4 64       		.sleb128 -28
 2592 05a5 0A       		.uleb128 0xa
 2593 05a6 96040000 		.4byte	.LASF20
 2594 05aa 01       		.byte	0x1
 2595 05ab AA04     		.2byte	0x4aa
 2596 05ad 6B000000 		.4byte	0x6b
 2597 05b1 02       		.uleb128 0x2
 2598 05b2 91       		.byte	0x91
 2599 05b3 6F       		.sleb128 -17
 2600 05b4 00       		.byte	0
 2601 05b5 09       		.uleb128 0x9
 2602 05b6 08020000 		.4byte	.LASF66
 2603 05ba 01       		.byte	0x1
 2604 05bb C904     		.2byte	0x4c9
 2605 05bd 00000000 		.4byte	.LFB32
 2606 05c1 44000000 		.4byte	.LFE32-.LFB32
 2607 05c5 01       		.uleb128 0x1
 2608 05c6 9C       		.byte	0x9c
 2609 05c7 EA050000 		.4byte	0x5ea
 2610 05cb 0B       		.uleb128 0xb
 2611 05cc 7F010000 		.4byte	.LASF62
 2612 05d0 01       		.byte	0x1
 2613 05d1 C904     		.2byte	0x4c9
 2614 05d3 77000000 		.4byte	0x77
 2615 05d7 02       		.uleb128 0x2
 2616 05d8 91       		.byte	0x91
 2617 05d9 64       		.sleb128 -28
 2618 05da 0A       		.uleb128 0xa
 2619 05db 96040000 		.4byte	.LASF20
 2620 05df 01       		.byte	0x1
 2621 05e0 CB04     		.2byte	0x4cb
 2622 05e2 6B000000 		.4byte	0x6b
 2623 05e6 02       		.uleb128 0x2
 2624 05e7 91       		.byte	0x91
 2625 05e8 6F       		.sleb128 -17
 2626 05e9 00       		.byte	0
 2627 05ea 09       		.uleb128 0x9
 2628 05eb 5D000000 		.4byte	.LASF67
 2629 05ef 01       		.byte	0x1
 2630 05f0 F104     		.2byte	0x4f1
 2631 05f2 00000000 		.4byte	.LFB33
 2632 05f6 38000000 		.4byte	.LFE33-.LFB33
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 72


 2633 05fa 01       		.uleb128 0x1
 2634 05fb 9C       		.byte	0x9c
 2635 05fc 2E060000 		.4byte	0x62e
 2636 0600 0B       		.uleb128 0xb
 2637 0601 A0010000 		.4byte	.LASF38
 2638 0605 01       		.byte	0x1
 2639 0606 F104     		.2byte	0x4f1
 2640 0608 77000000 		.4byte	0x77
 2641 060c 02       		.uleb128 0x2
 2642 060d 91       		.byte	0x91
 2643 060e 64       		.sleb128 -28
 2644 060f 0B       		.uleb128 0xb
 2645 0610 D2010000 		.4byte	.LASF68
 2646 0614 01       		.byte	0x1
 2647 0615 F104     		.2byte	0x4f1
 2648 0617 77000000 		.4byte	0x77
 2649 061b 02       		.uleb128 0x2
 2650 061c 91       		.byte	0x91
 2651 061d 60       		.sleb128 -32
 2652 061e 0A       		.uleb128 0xa
 2653 061f 96040000 		.4byte	.LASF20
 2654 0623 01       		.byte	0x1
 2655 0624 F304     		.2byte	0x4f3
 2656 0626 6B000000 		.4byte	0x6b
 2657 062a 02       		.uleb128 0x2
 2658 062b 91       		.byte	0x91
 2659 062c 6F       		.sleb128 -17
 2660 062d 00       		.byte	0
 2661 062e 0D       		.uleb128 0xd
 2662 062f A7040000 		.4byte	.LASF69
 2663 0633 01       		.byte	0x1
 2664 0634 0E05     		.2byte	0x50e
 2665 0636 77000000 		.4byte	0x77
 2666 063a 00000000 		.4byte	.LFB34
 2667 063e 20000000 		.4byte	.LFE34-.LFB34
 2668 0642 01       		.uleb128 0x1
 2669 0643 9C       		.byte	0x9c
 2670 0644 0C       		.uleb128 0xc
 2671 0645 A2050000 		.4byte	.LASF70
 2672 0649 01       		.byte	0x1
 2673 064a 2705     		.2byte	0x527
 2674 064c 00000000 		.4byte	.LFB35
 2675 0650 18000000 		.4byte	.LFE35-.LFB35
 2676 0654 01       		.uleb128 0x1
 2677 0655 9C       		.byte	0x9c
 2678 0656 6A060000 		.4byte	0x66a
 2679 065a 0B       		.uleb128 0xb
 2680 065b B1030000 		.4byte	.LASF71
 2681 065f 01       		.byte	0x1
 2682 0660 2705     		.2byte	0x527
 2683 0662 77000000 		.4byte	0x77
 2684 0666 02       		.uleb128 0x2
 2685 0667 91       		.byte	0x91
 2686 0668 74       		.sleb128 -12
 2687 0669 00       		.byte	0
 2688 066a 0D       		.uleb128 0xd
 2689 066b 27010000 		.4byte	.LASF72
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 73


 2690 066f 01       		.byte	0x1
 2691 0670 3E05     		.2byte	0x53e
 2692 0672 77000000 		.4byte	0x77
 2693 0676 00000000 		.4byte	.LFB36
 2694 067a 14000000 		.4byte	.LFE36-.LFB36
 2695 067e 01       		.uleb128 0x1
 2696 067f 9C       		.byte	0x9c
 2697 0680 0D       		.uleb128 0xd
 2698 0681 BB050000 		.4byte	.LASF73
 2699 0685 01       		.byte	0x1
 2700 0686 5505     		.2byte	0x555
 2701 0688 77000000 		.4byte	0x77
 2702 068c 00000000 		.4byte	.LFB37
 2703 0690 14000000 		.4byte	.LFE37-.LFB37
 2704 0694 01       		.uleb128 0x1
 2705 0695 9C       		.byte	0x9c
 2706 0696 0C       		.uleb128 0xc
 2707 0697 7B000000 		.4byte	.LASF74
 2708 069b 01       		.byte	0x1
 2709 069c 6C05     		.2byte	0x56c
 2710 069e 00000000 		.4byte	.LFB38
 2711 06a2 18000000 		.4byte	.LFE38-.LFB38
 2712 06a6 01       		.uleb128 0x1
 2713 06a7 9C       		.byte	0x9c
 2714 06a8 BC060000 		.4byte	0x6bc
 2715 06ac 0B       		.uleb128 0xb
 2716 06ad B1030000 		.4byte	.LASF71
 2717 06b1 01       		.byte	0x1
 2718 06b2 6C05     		.2byte	0x56c
 2719 06b4 77000000 		.4byte	0x77
 2720 06b8 02       		.uleb128 0x2
 2721 06b9 91       		.byte	0x91
 2722 06ba 74       		.sleb128 -12
 2723 06bb 00       		.byte	0
 2724 06bc 0C       		.uleb128 0xc
 2725 06bd 8B010000 		.4byte	.LASF75
 2726 06c1 01       		.byte	0x1
 2727 06c2 8305     		.2byte	0x583
 2728 06c4 00000000 		.4byte	.LFB39
 2729 06c8 18000000 		.4byte	.LFE39-.LFB39
 2730 06cc 01       		.uleb128 0x1
 2731 06cd 9C       		.byte	0x9c
 2732 06ce E2060000 		.4byte	0x6e2
 2733 06d2 0B       		.uleb128 0xb
 2734 06d3 B1030000 		.4byte	.LASF71
 2735 06d7 01       		.byte	0x1
 2736 06d8 8305     		.2byte	0x583
 2737 06da 77000000 		.4byte	0x77
 2738 06de 02       		.uleb128 0x2
 2739 06df 91       		.byte	0x91
 2740 06e0 74       		.sleb128 -12
 2741 06e1 00       		.byte	0
 2742 06e2 0E       		.uleb128 0xe
 2743 06e3 37040000 		.4byte	.LASF79
 2744 06e7 01       		.byte	0x1
 2745 06e8 15       		.byte	0x15
 2746 06e9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 74


 2747 06ed 05       		.uleb128 0x5
 2748 06ee 03       		.byte	0x3
 2749 06ef 00000000 		.4byte	TCPWM_2_initVar
 2750 06f3 00       		.byte	0
 2751              		.section	.debug_abbrev,"",%progbits
 2752              	.Ldebug_abbrev0:
 2753 0000 01       		.uleb128 0x1
 2754 0001 11       		.uleb128 0x11
 2755 0002 01       		.byte	0x1
 2756 0003 25       		.uleb128 0x25
 2757 0004 0E       		.uleb128 0xe
 2758 0005 13       		.uleb128 0x13
 2759 0006 0B       		.uleb128 0xb
 2760 0007 03       		.uleb128 0x3
 2761 0008 0E       		.uleb128 0xe
 2762 0009 1B       		.uleb128 0x1b
 2763 000a 0E       		.uleb128 0xe
 2764 000b 55       		.uleb128 0x55
 2765 000c 17       		.uleb128 0x17
 2766 000d 11       		.uleb128 0x11
 2767 000e 01       		.uleb128 0x1
 2768 000f 10       		.uleb128 0x10
 2769 0010 17       		.uleb128 0x17
 2770 0011 00       		.byte	0
 2771 0012 00       		.byte	0
 2772 0013 02       		.uleb128 0x2
 2773 0014 24       		.uleb128 0x24
 2774 0015 00       		.byte	0
 2775 0016 0B       		.uleb128 0xb
 2776 0017 0B       		.uleb128 0xb
 2777 0018 3E       		.uleb128 0x3e
 2778 0019 0B       		.uleb128 0xb
 2779 001a 03       		.uleb128 0x3
 2780 001b 0E       		.uleb128 0xe
 2781 001c 00       		.byte	0
 2782 001d 00       		.byte	0
 2783 001e 03       		.uleb128 0x3
 2784 001f 24       		.uleb128 0x24
 2785 0020 00       		.byte	0
 2786 0021 0B       		.uleb128 0xb
 2787 0022 0B       		.uleb128 0xb
 2788 0023 3E       		.uleb128 0x3e
 2789 0024 0B       		.uleb128 0xb
 2790 0025 03       		.uleb128 0x3
 2791 0026 08       		.uleb128 0x8
 2792 0027 00       		.byte	0
 2793 0028 00       		.byte	0
 2794 0029 04       		.uleb128 0x4
 2795 002a 16       		.uleb128 0x16
 2796 002b 00       		.byte	0
 2797 002c 03       		.uleb128 0x3
 2798 002d 0E       		.uleb128 0xe
 2799 002e 3A       		.uleb128 0x3a
 2800 002f 0B       		.uleb128 0xb
 2801 0030 3B       		.uleb128 0x3b
 2802 0031 05       		.uleb128 0x5
 2803 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 75


 2804 0033 13       		.uleb128 0x13
 2805 0034 00       		.byte	0
 2806 0035 00       		.byte	0
 2807 0036 05       		.uleb128 0x5
 2808 0037 35       		.uleb128 0x35
 2809 0038 00       		.byte	0
 2810 0039 49       		.uleb128 0x49
 2811 003a 13       		.uleb128 0x13
 2812 003b 00       		.byte	0
 2813 003c 00       		.byte	0
 2814 003d 06       		.uleb128 0x6
 2815 003e 2E       		.uleb128 0x2e
 2816 003f 00       		.byte	0
 2817 0040 3F       		.uleb128 0x3f
 2818 0041 19       		.uleb128 0x19
 2819 0042 03       		.uleb128 0x3
 2820 0043 0E       		.uleb128 0xe
 2821 0044 3A       		.uleb128 0x3a
 2822 0045 0B       		.uleb128 0xb
 2823 0046 3B       		.uleb128 0x3b
 2824 0047 0B       		.uleb128 0xb
 2825 0048 27       		.uleb128 0x27
 2826 0049 19       		.uleb128 0x19
 2827 004a 11       		.uleb128 0x11
 2828 004b 01       		.uleb128 0x1
 2829 004c 12       		.uleb128 0x12
 2830 004d 06       		.uleb128 0x6
 2831 004e 40       		.uleb128 0x40
 2832 004f 18       		.uleb128 0x18
 2833 0050 9642     		.uleb128 0x2116
 2834 0052 19       		.uleb128 0x19
 2835 0053 00       		.byte	0
 2836 0054 00       		.byte	0
 2837 0055 07       		.uleb128 0x7
 2838 0056 2E       		.uleb128 0x2e
 2839 0057 01       		.byte	0x1
 2840 0058 3F       		.uleb128 0x3f
 2841 0059 19       		.uleb128 0x19
 2842 005a 03       		.uleb128 0x3
 2843 005b 0E       		.uleb128 0xe
 2844 005c 3A       		.uleb128 0x3a
 2845 005d 0B       		.uleb128 0xb
 2846 005e 3B       		.uleb128 0x3b
 2847 005f 0B       		.uleb128 0xb
 2848 0060 27       		.uleb128 0x27
 2849 0061 19       		.uleb128 0x19
 2850 0062 11       		.uleb128 0x11
 2851 0063 01       		.uleb128 0x1
 2852 0064 12       		.uleb128 0x12
 2853 0065 06       		.uleb128 0x6
 2854 0066 40       		.uleb128 0x40
 2855 0067 18       		.uleb128 0x18
 2856 0068 9642     		.uleb128 0x2116
 2857 006a 19       		.uleb128 0x19
 2858 006b 01       		.uleb128 0x1
 2859 006c 13       		.uleb128 0x13
 2860 006d 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 76


 2861 006e 00       		.byte	0
 2862 006f 08       		.uleb128 0x8
 2863 0070 34       		.uleb128 0x34
 2864 0071 00       		.byte	0
 2865 0072 03       		.uleb128 0x3
 2866 0073 0E       		.uleb128 0xe
 2867 0074 3A       		.uleb128 0x3a
 2868 0075 0B       		.uleb128 0xb
 2869 0076 3B       		.uleb128 0x3b
 2870 0077 0B       		.uleb128 0xb
 2871 0078 49       		.uleb128 0x49
 2872 0079 13       		.uleb128 0x13
 2873 007a 02       		.uleb128 0x2
 2874 007b 18       		.uleb128 0x18
 2875 007c 00       		.byte	0
 2876 007d 00       		.byte	0
 2877 007e 09       		.uleb128 0x9
 2878 007f 2E       		.uleb128 0x2e
 2879 0080 01       		.byte	0x1
 2880 0081 3F       		.uleb128 0x3f
 2881 0082 19       		.uleb128 0x19
 2882 0083 03       		.uleb128 0x3
 2883 0084 0E       		.uleb128 0xe
 2884 0085 3A       		.uleb128 0x3a
 2885 0086 0B       		.uleb128 0xb
 2886 0087 3B       		.uleb128 0x3b
 2887 0088 05       		.uleb128 0x5
 2888 0089 27       		.uleb128 0x27
 2889 008a 19       		.uleb128 0x19
 2890 008b 11       		.uleb128 0x11
 2891 008c 01       		.uleb128 0x1
 2892 008d 12       		.uleb128 0x12
 2893 008e 06       		.uleb128 0x6
 2894 008f 40       		.uleb128 0x40
 2895 0090 18       		.uleb128 0x18
 2896 0091 9642     		.uleb128 0x2116
 2897 0093 19       		.uleb128 0x19
 2898 0094 01       		.uleb128 0x1
 2899 0095 13       		.uleb128 0x13
 2900 0096 00       		.byte	0
 2901 0097 00       		.byte	0
 2902 0098 0A       		.uleb128 0xa
 2903 0099 34       		.uleb128 0x34
 2904 009a 00       		.byte	0
 2905 009b 03       		.uleb128 0x3
 2906 009c 0E       		.uleb128 0xe
 2907 009d 3A       		.uleb128 0x3a
 2908 009e 0B       		.uleb128 0xb
 2909 009f 3B       		.uleb128 0x3b
 2910 00a0 05       		.uleb128 0x5
 2911 00a1 49       		.uleb128 0x49
 2912 00a2 13       		.uleb128 0x13
 2913 00a3 02       		.uleb128 0x2
 2914 00a4 18       		.uleb128 0x18
 2915 00a5 00       		.byte	0
 2916 00a6 00       		.byte	0
 2917 00a7 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 77


 2918 00a8 05       		.uleb128 0x5
 2919 00a9 00       		.byte	0
 2920 00aa 03       		.uleb128 0x3
 2921 00ab 0E       		.uleb128 0xe
 2922 00ac 3A       		.uleb128 0x3a
 2923 00ad 0B       		.uleb128 0xb
 2924 00ae 3B       		.uleb128 0x3b
 2925 00af 05       		.uleb128 0x5
 2926 00b0 49       		.uleb128 0x49
 2927 00b1 13       		.uleb128 0x13
 2928 00b2 02       		.uleb128 0x2
 2929 00b3 18       		.uleb128 0x18
 2930 00b4 00       		.byte	0
 2931 00b5 00       		.byte	0
 2932 00b6 0C       		.uleb128 0xc
 2933 00b7 2E       		.uleb128 0x2e
 2934 00b8 01       		.byte	0x1
 2935 00b9 3F       		.uleb128 0x3f
 2936 00ba 19       		.uleb128 0x19
 2937 00bb 03       		.uleb128 0x3
 2938 00bc 0E       		.uleb128 0xe
 2939 00bd 3A       		.uleb128 0x3a
 2940 00be 0B       		.uleb128 0xb
 2941 00bf 3B       		.uleb128 0x3b
 2942 00c0 05       		.uleb128 0x5
 2943 00c1 27       		.uleb128 0x27
 2944 00c2 19       		.uleb128 0x19
 2945 00c3 11       		.uleb128 0x11
 2946 00c4 01       		.uleb128 0x1
 2947 00c5 12       		.uleb128 0x12
 2948 00c6 06       		.uleb128 0x6
 2949 00c7 40       		.uleb128 0x40
 2950 00c8 18       		.uleb128 0x18
 2951 00c9 9742     		.uleb128 0x2117
 2952 00cb 19       		.uleb128 0x19
 2953 00cc 01       		.uleb128 0x1
 2954 00cd 13       		.uleb128 0x13
 2955 00ce 00       		.byte	0
 2956 00cf 00       		.byte	0
 2957 00d0 0D       		.uleb128 0xd
 2958 00d1 2E       		.uleb128 0x2e
 2959 00d2 00       		.byte	0
 2960 00d3 3F       		.uleb128 0x3f
 2961 00d4 19       		.uleb128 0x19
 2962 00d5 03       		.uleb128 0x3
 2963 00d6 0E       		.uleb128 0xe
 2964 00d7 3A       		.uleb128 0x3a
 2965 00d8 0B       		.uleb128 0xb
 2966 00d9 3B       		.uleb128 0x3b
 2967 00da 05       		.uleb128 0x5
 2968 00db 27       		.uleb128 0x27
 2969 00dc 19       		.uleb128 0x19
 2970 00dd 49       		.uleb128 0x49
 2971 00de 13       		.uleb128 0x13
 2972 00df 11       		.uleb128 0x11
 2973 00e0 01       		.uleb128 0x1
 2974 00e1 12       		.uleb128 0x12
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 78


 2975 00e2 06       		.uleb128 0x6
 2976 00e3 40       		.uleb128 0x40
 2977 00e4 18       		.uleb128 0x18
 2978 00e5 9742     		.uleb128 0x2117
 2979 00e7 19       		.uleb128 0x19
 2980 00e8 00       		.byte	0
 2981 00e9 00       		.byte	0
 2982 00ea 0E       		.uleb128 0xe
 2983 00eb 34       		.uleb128 0x34
 2984 00ec 00       		.byte	0
 2985 00ed 03       		.uleb128 0x3
 2986 00ee 0E       		.uleb128 0xe
 2987 00ef 3A       		.uleb128 0x3a
 2988 00f0 0B       		.uleb128 0xb
 2989 00f1 3B       		.uleb128 0x3b
 2990 00f2 0B       		.uleb128 0xb
 2991 00f3 49       		.uleb128 0x49
 2992 00f4 13       		.uleb128 0x13
 2993 00f5 3F       		.uleb128 0x3f
 2994 00f6 19       		.uleb128 0x19
 2995 00f7 02       		.uleb128 0x2
 2996 00f8 18       		.uleb128 0x18
 2997 00f9 00       		.byte	0
 2998 00fa 00       		.byte	0
 2999 00fb 00       		.byte	0
 3000              		.section	.debug_aranges,"",%progbits
 3001 0000 54010000 		.4byte	0x154
 3002 0004 0200     		.2byte	0x2
 3003 0006 00000000 		.4byte	.Ldebug_info0
 3004 000a 04       		.byte	0x4
 3005 000b 00       		.byte	0
 3006 000c 0000     		.2byte	0
 3007 000e 0000     		.2byte	0
 3008 0010 00000000 		.4byte	.LFB0
 3009 0014 54000000 		.4byte	.LFE0-.LFB0
 3010 0018 00000000 		.4byte	.LFB1
 3011 001c 38000000 		.4byte	.LFE1-.LFB1
 3012 0020 00000000 		.4byte	.LFB2
 3013 0024 24000000 		.4byte	.LFE2-.LFB2
 3014 0028 00000000 		.4byte	.LFB3
 3015 002c 30000000 		.4byte	.LFE3-.LFB3
 3016 0030 00000000 		.4byte	.LFB4
 3017 0034 48000000 		.4byte	.LFE4-.LFB4
 3018 0038 00000000 		.4byte	.LFB5
 3019 003c 48000000 		.4byte	.LFE5-.LFB5
 3020 0040 00000000 		.4byte	.LFB6
 3021 0044 48000000 		.4byte	.LFE6-.LFB6
 3022 0048 00000000 		.4byte	.LFB7
 3023 004c 4C000000 		.4byte	.LFE7-.LFB7
 3024 0050 00000000 		.4byte	.LFB8
 3025 0054 1C000000 		.4byte	.LFE8-.LFB8
 3026 0058 00000000 		.4byte	.LFB9
 3027 005c 48000000 		.4byte	.LFE9-.LFB9
 3028 0060 00000000 		.4byte	.LFB10
 3029 0064 48000000 		.4byte	.LFE10-.LFB10
 3030 0068 00000000 		.4byte	.LFB11
 3031 006c 4C000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 79


 3032 0070 00000000 		.4byte	.LFB12
 3033 0074 48000000 		.4byte	.LFE12-.LFB12
 3034 0078 00000000 		.4byte	.LFB13
 3035 007c 1C000000 		.4byte	.LFE13-.LFB13
 3036 0080 00000000 		.4byte	.LFB14
 3037 0084 18000000 		.4byte	.LFE14-.LFB14
 3038 0088 00000000 		.4byte	.LFB15
 3039 008c 48000000 		.4byte	.LFE15-.LFB15
 3040 0090 00000000 		.4byte	.LFB16
 3041 0094 1C000000 		.4byte	.LFE16-.LFB16
 3042 0098 00000000 		.4byte	.LFB17
 3043 009c 18000000 		.4byte	.LFE17-.LFB17
 3044 00a0 00000000 		.4byte	.LFB18
 3045 00a4 48000000 		.4byte	.LFE18-.LFB18
 3046 00a8 00000000 		.4byte	.LFB19
 3047 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3048 00b0 00000000 		.4byte	.LFB20
 3049 00b4 18000000 		.4byte	.LFE20-.LFB20
 3050 00b8 00000000 		.4byte	.LFB21
 3051 00bc 48000000 		.4byte	.LFE21-.LFB21
 3052 00c0 00000000 		.4byte	.LFB22
 3053 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3054 00c8 00000000 		.4byte	.LFB23
 3055 00cc 18000000 		.4byte	.LFE23-.LFB23
 3056 00d0 00000000 		.4byte	.LFB24
 3057 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3058 00d8 00000000 		.4byte	.LFB25
 3059 00dc 18000000 		.4byte	.LFE25-.LFB25
 3060 00e0 00000000 		.4byte	.LFB26
 3061 00e4 18000000 		.4byte	.LFE26-.LFB26
 3062 00e8 00000000 		.4byte	.LFB27
 3063 00ec 18000000 		.4byte	.LFE27-.LFB27
 3064 00f0 00000000 		.4byte	.LFB28
 3065 00f4 44000000 		.4byte	.LFE28-.LFB28
 3066 00f8 00000000 		.4byte	.LFB29
 3067 00fc 44000000 		.4byte	.LFE29-.LFB29
 3068 0100 00000000 		.4byte	.LFB30
 3069 0104 48000000 		.4byte	.LFE30-.LFB30
 3070 0108 00000000 		.4byte	.LFB31
 3071 010c 44000000 		.4byte	.LFE31-.LFB31
 3072 0110 00000000 		.4byte	.LFB32
 3073 0114 44000000 		.4byte	.LFE32-.LFB32
 3074 0118 00000000 		.4byte	.LFB33
 3075 011c 38000000 		.4byte	.LFE33-.LFB33
 3076 0120 00000000 		.4byte	.LFB34
 3077 0124 20000000 		.4byte	.LFE34-.LFB34
 3078 0128 00000000 		.4byte	.LFB35
 3079 012c 18000000 		.4byte	.LFE35-.LFB35
 3080 0130 00000000 		.4byte	.LFB36
 3081 0134 14000000 		.4byte	.LFE36-.LFB36
 3082 0138 00000000 		.4byte	.LFB37
 3083 013c 14000000 		.4byte	.LFE37-.LFB37
 3084 0140 00000000 		.4byte	.LFB38
 3085 0144 18000000 		.4byte	.LFE38-.LFB38
 3086 0148 00000000 		.4byte	.LFB39
 3087 014c 18000000 		.4byte	.LFE39-.LFB39
 3088 0150 00000000 		.4byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 80


 3089 0154 00000000 		.4byte	0
 3090              		.section	.debug_ranges,"",%progbits
 3091              	.Ldebug_ranges0:
 3092 0000 00000000 		.4byte	.LFB0
 3093 0004 54000000 		.4byte	.LFE0
 3094 0008 00000000 		.4byte	.LFB1
 3095 000c 38000000 		.4byte	.LFE1
 3096 0010 00000000 		.4byte	.LFB2
 3097 0014 24000000 		.4byte	.LFE2
 3098 0018 00000000 		.4byte	.LFB3
 3099 001c 30000000 		.4byte	.LFE3
 3100 0020 00000000 		.4byte	.LFB4
 3101 0024 48000000 		.4byte	.LFE4
 3102 0028 00000000 		.4byte	.LFB5
 3103 002c 48000000 		.4byte	.LFE5
 3104 0030 00000000 		.4byte	.LFB6
 3105 0034 48000000 		.4byte	.LFE6
 3106 0038 00000000 		.4byte	.LFB7
 3107 003c 4C000000 		.4byte	.LFE7
 3108 0040 00000000 		.4byte	.LFB8
 3109 0044 1C000000 		.4byte	.LFE8
 3110 0048 00000000 		.4byte	.LFB9
 3111 004c 48000000 		.4byte	.LFE9
 3112 0050 00000000 		.4byte	.LFB10
 3113 0054 48000000 		.4byte	.LFE10
 3114 0058 00000000 		.4byte	.LFB11
 3115 005c 4C000000 		.4byte	.LFE11
 3116 0060 00000000 		.4byte	.LFB12
 3117 0064 48000000 		.4byte	.LFE12
 3118 0068 00000000 		.4byte	.LFB13
 3119 006c 1C000000 		.4byte	.LFE13
 3120 0070 00000000 		.4byte	.LFB14
 3121 0074 18000000 		.4byte	.LFE14
 3122 0078 00000000 		.4byte	.LFB15
 3123 007c 48000000 		.4byte	.LFE15
 3124 0080 00000000 		.4byte	.LFB16
 3125 0084 1C000000 		.4byte	.LFE16
 3126 0088 00000000 		.4byte	.LFB17
 3127 008c 18000000 		.4byte	.LFE17
 3128 0090 00000000 		.4byte	.LFB18
 3129 0094 48000000 		.4byte	.LFE18
 3130 0098 00000000 		.4byte	.LFB19
 3131 009c 1C000000 		.4byte	.LFE19
 3132 00a0 00000000 		.4byte	.LFB20
 3133 00a4 18000000 		.4byte	.LFE20
 3134 00a8 00000000 		.4byte	.LFB21
 3135 00ac 48000000 		.4byte	.LFE21
 3136 00b0 00000000 		.4byte	.LFB22
 3137 00b4 1C000000 		.4byte	.LFE22
 3138 00b8 00000000 		.4byte	.LFB23
 3139 00bc 18000000 		.4byte	.LFE23
 3140 00c0 00000000 		.4byte	.LFB24
 3141 00c4 1C000000 		.4byte	.LFE24
 3142 00c8 00000000 		.4byte	.LFB25
 3143 00cc 18000000 		.4byte	.LFE25
 3144 00d0 00000000 		.4byte	.LFB26
 3145 00d4 18000000 		.4byte	.LFE26
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 81


 3146 00d8 00000000 		.4byte	.LFB27
 3147 00dc 18000000 		.4byte	.LFE27
 3148 00e0 00000000 		.4byte	.LFB28
 3149 00e4 44000000 		.4byte	.LFE28
 3150 00e8 00000000 		.4byte	.LFB29
 3151 00ec 44000000 		.4byte	.LFE29
 3152 00f0 00000000 		.4byte	.LFB30
 3153 00f4 48000000 		.4byte	.LFE30
 3154 00f8 00000000 		.4byte	.LFB31
 3155 00fc 44000000 		.4byte	.LFE31
 3156 0100 00000000 		.4byte	.LFB32
 3157 0104 44000000 		.4byte	.LFE32
 3158 0108 00000000 		.4byte	.LFB33
 3159 010c 38000000 		.4byte	.LFE33
 3160 0110 00000000 		.4byte	.LFB34
 3161 0114 20000000 		.4byte	.LFE34
 3162 0118 00000000 		.4byte	.LFB35
 3163 011c 18000000 		.4byte	.LFE35
 3164 0120 00000000 		.4byte	.LFB36
 3165 0124 14000000 		.4byte	.LFE36
 3166 0128 00000000 		.4byte	.LFB37
 3167 012c 14000000 		.4byte	.LFE37
 3168 0130 00000000 		.4byte	.LFB38
 3169 0134 18000000 		.4byte	.LFE38
 3170 0138 00000000 		.4byte	.LFB39
 3171 013c 18000000 		.4byte	.LFE39
 3172 0140 00000000 		.4byte	0
 3173 0144 00000000 		.4byte	0
 3174              		.section	.debug_line,"",%progbits
 3175              	.Ldebug_line0:
 3176 0000 73030000 		.section	.debug_str,"MS",%progbits,1
 3176      02004600 
 3176      00000201 
 3176      FB0E0D00 
 3176      01010101 
 3177              	.LASF40:
 3178 0000 636F756E 		.ascii	"count\000"
 3178      7400
 3179              	.LASF17:
 3180 0006 54435057 		.ascii	"TCPWM_2_Start\000"
 3180      4D5F325F 
 3180      53746172 
 3180      7400
 3181              	.LASF56:
 3182 0014 54435057 		.ascii	"TCPWM_2_WriteCompareBuf\000"
 3182      4D5F325F 
 3182      57726974 
 3182      65436F6D 
 3182      70617265 
 3183              	.LASF44:
 3184 002c 70657269 		.ascii	"period\000"
 3184      6F6400
 3185              	.LASF46:
 3186 0033 54435057 		.ascii	"TCPWM_2_ReadPeriod\000"
 3186      4D5F325F 
 3186      52656164 
 3186      50657269 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 82


 3186      6F6400
 3187              	.LASF7:
 3188 0046 6C6F6E67 		.ascii	"long long unsigned int\000"
 3188      206C6F6E 
 3188      6720756E 
 3188      7369676E 
 3188      65642069 
 3189              	.LASF67:
 3190 005d 54435057 		.ascii	"TCPWM_2_TriggerCommand\000"
 3190      4D5F325F 
 3190      54726967 
 3190      67657243 
 3190      6F6D6D61 
 3191              	.LASF24:
 3192 0074 71644D6F 		.ascii	"qdMode\000"
 3192      646500
 3193              	.LASF74:
 3194 007b 54435057 		.ascii	"TCPWM_2_ClearInterrupt\000"
 3194      4D5F325F 
 3194      436C6561 
 3194      72496E74 
 3194      65727275 
 3195              	.LASF6:
 3196 0092 6C6F6E67 		.ascii	"long long int\000"
 3196      206C6F6E 
 3196      6720696E 
 3196      7400
 3197              	.LASF0:
 3198 00a0 7369676E 		.ascii	"signed char\000"
 3198      65642063 
 3198      68617200 
 3199              	.LASF43:
 3200 00ac 54435057 		.ascii	"TCPWM_2_WritePeriod\000"
 3200      4D5F325F 
 3200      57726974 
 3200      65506572 
 3200      696F6400 
 3201              	.LASF77:
 3202 00c0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\TCPWM_2.c\000"
 3202      6E657261 
 3202      7465645F 
 3202      536F7572 
 3202      63655C50 
 3203              	.LASF51:
 3204 00e3 54435057 		.ascii	"TCPWM_2_ReadPeriodBuf\000"
 3204      4D5F325F 
 3204      52656164 
 3204      50657269 
 3204      6F644275 
 3205              	.LASF18:
 3206 00f9 54435057 		.ascii	"TCPWM_2_Enable\000"
 3206      4D5F325F 
 3206      456E6162 
 3206      6C6500
 3207              	.LASF4:
 3208 0108 6C6F6E67 		.ascii	"long int\000"
 3208      20696E74 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 83


 3208      00
 3209              	.LASF21:
 3210 0111 54435057 		.ascii	"TCPWM_2_SetMode\000"
 3210      4D5F325F 
 3210      5365744D 
 3210      6F646500 
 3211              	.LASF9:
 3212 0121 75696E74 		.ascii	"uint8\000"
 3212      3800
 3213              	.LASF72:
 3214 0127 54435057 		.ascii	"TCPWM_2_GetInterruptSourceMasked\000"
 3214      4D5F325F 
 3214      47657449 
 3214      6E746572 
 3214      72757074 
 3215              	.LASF12:
 3216 0148 646F7562 		.ascii	"double\000"
 3216      6C6500
 3217              	.LASF52:
 3218 014f 54435057 		.ascii	"TCPWM_2_SetPeriodSwap\000"
 3218      4D5F325F 
 3218      53657450 
 3218      6572696F 
 3218      64537761 
 3219              	.LASF29:
 3220 0165 54435057 		.ascii	"TCPWM_2_SetPWMMode\000"
 3220      4D5F325F 
 3220      53657450 
 3220      574D4D6F 
 3220      646500
 3221              	.LASF10:
 3222 0178 75696E74 		.ascii	"uint32\000"
 3222      333200
 3223              	.LASF62:
 3224 017f 74726967 		.ascii	"triggerMode\000"
 3224      6765724D 
 3224      6F646500 
 3225              	.LASF75:
 3226 018b 54435057 		.ascii	"TCPWM_2_SetInterrupt\000"
 3226      4D5F325F 
 3226      53657449 
 3226      6E746572 
 3226      72757074 
 3227              	.LASF38:
 3228 01a0 6D61736B 		.ascii	"mask\000"
 3228      00
 3229              	.LASF35:
 3230 01a5 54435057 		.ascii	"TCPWM_2_SetPWMDeadTime\000"
 3230      4D5F325F 
 3230      53657450 
 3230      574D4465 
 3230      61645469 
 3231              	.LASF36:
 3232 01bc 64656164 		.ascii	"deadTime\000"
 3232      54696D65 
 3232      00
 3233              	.LASF8:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 84


 3234 01c5 756E7369 		.ascii	"unsigned int\000"
 3234      676E6564 
 3234      20696E74 
 3234      00
 3235              	.LASF68:
 3236 01d2 636F6D6D 		.ascii	"command\000"
 3236      616E6400 
 3237              	.LASF5:
 3238 01da 6C6F6E67 		.ascii	"long unsigned int\000"
 3238      20756E73 
 3238      69676E65 
 3238      6420696E 
 3238      7400
 3239              	.LASF30:
 3240 01ec 6D6F6465 		.ascii	"modeMask\000"
 3240      4D61736B 
 3240      00
 3241              	.LASF3:
 3242 01f5 73686F72 		.ascii	"short unsigned int\000"
 3242      7420756E 
 3242      7369676E 
 3242      65642069 
 3242      6E7400
 3243              	.LASF66:
 3244 0208 54435057 		.ascii	"TCPWM_2_SetCountMode\000"
 3244      4D5F325F 
 3244      53657443 
 3244      6F756E74 
 3244      4D6F6465 
 3245              	.LASF49:
 3246 021d 54435057 		.ascii	"TCPWM_2_WritePeriodBuf\000"
 3246      4D5F325F 
 3246      57726974 
 3246      65506572 
 3246      696F6442 
 3247              	.LASF55:
 3248 0234 54435057 		.ascii	"TCPWM_2_ReadCompare\000"
 3248      4D5F325F 
 3248      52656164 
 3248      436F6D70 
 3248      61726500 
 3249              	.LASF63:
 3250 0248 54435057 		.ascii	"TCPWM_2_SetReloadMode\000"
 3250      4D5F325F 
 3250      53657452 
 3250      656C6F61 
 3250      644D6F64 
 3251              	.LASF28:
 3252 025e 6F6E6553 		.ascii	"oneShotEnable\000"
 3252      686F7445 
 3252      6E61626C 
 3252      6500
 3253              	.LASF14:
 3254 026c 72656733 		.ascii	"reg32\000"
 3254      3200
 3255              	.LASF53:
 3256 0272 54435057 		.ascii	"TCPWM_2_WriteCompare\000"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 85


 3256      4D5F325F 
 3256      57726974 
 3256      65436F6D 
 3256      70617265 
 3257              	.LASF15:
 3258 0287 73697A65 		.ascii	"sizetype\000"
 3258      74797065 
 3258      00
 3259              	.LASF60:
 3260 0290 54435057 		.ascii	"TCPWM_2_ReadCaptureBuf\000"
 3260      4D5F325F 
 3260      52656164 
 3260      43617074 
 3260      75726542 
 3261              	.LASF32:
 3262 02a7 73796E63 		.ascii	"syncKillEnable\000"
 3262      4B696C6C 
 3262      456E6162 
 3262      6C6500
 3263              	.LASF19:
 3264 02b6 54435057 		.ascii	"TCPWM_2_Stop\000"
 3264      4D5F325F 
 3264      53746F70 
 3264      00
 3265              	.LASF45:
 3266 02c3 54435057 		.ascii	"TCPWM_2_ReadCounter\000"
 3266      4D5F325F 
 3266      52656164 
 3266      436F756E 
 3266      74657200 
 3267              	.LASF59:
 3268 02d7 54435057 		.ascii	"TCPWM_2_ReadCapture\000"
 3268      4D5F325F 
 3268      52656164 
 3268      43617074 
 3268      75726500 
 3269              	.LASF11:
 3270 02eb 666C6F61 		.ascii	"float\000"
 3270      7400
 3271              	.LASF26:
 3272 02f1 70726573 		.ascii	"prescaler\000"
 3272      63616C65 
 3272      7200
 3273              	.LASF39:
 3274 02fb 54435057 		.ascii	"TCPWM_2_WriteCounter\000"
 3274      4D5F325F 
 3274      57726974 
 3274      65436F75 
 3274      6E746572 
 3275              	.LASF41:
 3276 0310 54435057 		.ascii	"TCPWM_2_SetCounterMode\000"
 3276      4D5F325F 
 3276      53657443 
 3276      6F756E74 
 3276      65724D6F 
 3277              	.LASF1:
 3278 0327 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 86


 3278      676E6564 
 3278      20636861 
 3278      7200
 3279              	.LASF34:
 3280 0335 73746F70 		.ascii	"stopOnKillEnable\000"
 3280      4F6E4B69 
 3280      6C6C456E 
 3280      61626C65 
 3280      00
 3281              	.LASF2:
 3282 0346 73686F72 		.ascii	"short int\000"
 3282      7420696E 
 3282      7400
 3283              	.LASF78:
 3284 0350 433A5C55 		.ascii	"C:\\Users\\Tech Consulting\\Desktop\\PSOC4 projects"
 3284      73657273 
 3284      5C546563 
 3284      6820436F 
 3284      6E73756C 
 3285 037f 5C537465 		.ascii	"\\StepMotor_PSoC4200\\StepMotor_PSoC4200_Dual.cydsn"
 3285      704D6F74 
 3285      6F725F50 
 3285      536F4334 
 3285      3230305C 
 3286 03b0 00       		.ascii	"\000"
 3287              	.LASF71:
 3288 03b1 696E7465 		.ascii	"interruptMask\000"
 3288      72727570 
 3288      744D6173 
 3288      6B00
 3289              	.LASF65:
 3290 03bf 54435057 		.ascii	"TCPWM_2_SetStopMode\000"
 3290      4D5F325F 
 3290      53657453 
 3290      746F704D 
 3290      6F646500 
 3291              	.LASF33:
 3292 03d3 54435057 		.ascii	"TCPWM_2_SetPWMStopOnKill\000"
 3292      4D5F325F 
 3292      53657450 
 3292      574D5374 
 3292      6F704F6E 
 3293              	.LASF13:
 3294 03ec 63686172 		.ascii	"char\000"
 3294      00
 3295              	.LASF37:
 3296 03f1 54435057 		.ascii	"TCPWM_2_SetPWMInvert\000"
 3296      4D5F325F 
 3296      53657450 
 3296      574D496E 
 3296      76657274 
 3297              	.LASF23:
 3298 0406 6D6F6465 		.ascii	"mode\000"
 3298      00
 3299              	.LASF61:
 3300 040b 54435057 		.ascii	"TCPWM_2_SetCaptureMode\000"
 3300      4D5F325F 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 87


 3300      53657443 
 3300      61707475 
 3300      72654D6F 
 3301              	.LASF64:
 3302 0422 54435057 		.ascii	"TCPWM_2_SetStartMode\000"
 3302      4D5F325F 
 3302      53657453 
 3302      74617274 
 3302      4D6F6465 
 3303              	.LASF79:
 3304 0437 54435057 		.ascii	"TCPWM_2_initVar\000"
 3304      4D5F325F 
 3304      696E6974 
 3304      56617200 
 3305              	.LASF42:
 3306 0447 636F756E 		.ascii	"counterMode\000"
 3306      7465724D 
 3306      6F646500 
 3307              	.LASF48:
 3308 0453 73776170 		.ascii	"swapEnable\000"
 3308      456E6162 
 3308      6C6500
 3309              	.LASF54:
 3310 045e 636F6D70 		.ascii	"compare\000"
 3310      61726500 
 3311              	.LASF22:
 3312 0466 54435057 		.ascii	"TCPWM_2_SetQDMode\000"
 3312      4D5F325F 
 3312      53657451 
 3312      444D6F64 
 3312      6500
 3313              	.LASF57:
 3314 0478 636F6D70 		.ascii	"compareBuf\000"
 3314      61726542 
 3314      756600
 3315              	.LASF27:
 3316 0483 54435057 		.ascii	"TCPWM_2_SetOneShot\000"
 3316      4D5F325F 
 3316      5365744F 
 3316      6E655368 
 3316      6F7400
 3317              	.LASF20:
 3318 0496 656E6162 		.ascii	"enableInterrupts\000"
 3318      6C65496E 
 3318      74657272 
 3318      75707473 
 3318      00
 3319              	.LASF69:
 3320 04a7 54435057 		.ascii	"TCPWM_2_ReadStatus\000"
 3320      4D5F325F 
 3320      52656164 
 3320      53746174 
 3320      757300
 3321              	.LASF58:
 3322 04ba 54435057 		.ascii	"TCPWM_2_ReadCompareBuf\000"
 3322      4D5F325F 
 3322      52656164 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 88


 3322      436F6D70 
 3322      61726542 
 3323              	.LASF47:
 3324 04d1 54435057 		.ascii	"TCPWM_2_SetCompareSwap\000"
 3324      4D5F325F 
 3324      53657443 
 3324      6F6D7061 
 3324      72655377 
 3325              	.LASF25:
 3326 04e8 54435057 		.ascii	"TCPWM_2_SetPrescaler\000"
 3326      4D5F325F 
 3326      53657450 
 3326      72657363 
 3326      616C6572 
 3327              	.LASF76:
 3328 04fd 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3328      4320342E 
 3328      392E3320 
 3328      32303135 
 3328      30333033 
 3329 0530 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3329      20726576 
 3329      6973696F 
 3329      6E203232 
 3329      31323230 
 3330 0563 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3330      66756E63 
 3330      74696F6E 
 3330      2D736563 
 3330      74696F6E 
 3331              	.LASF16:
 3332 058b 54435057 		.ascii	"TCPWM_2_Init\000"
 3332      4D5F325F 
 3332      496E6974 
 3332      00
 3333              	.LASF50:
 3334 0598 70657269 		.ascii	"periodBuf\000"
 3334      6F644275 
 3334      6600
 3335              	.LASF70:
 3336 05a2 54435057 		.ascii	"TCPWM_2_SetInterruptMode\000"
 3336      4D5F325F 
 3336      53657449 
 3336      6E746572 
 3336      72757074 
 3337              	.LASF73:
 3338 05bb 54435057 		.ascii	"TCPWM_2_GetInterruptSource\000"
 3338      4D5F325F 
 3338      47657449 
 3338      6E746572 
 3338      72757074 
 3339              	.LASF31:
 3340 05d6 54435057 		.ascii	"TCPWM_2_SetPWMSyncKill\000"
 3340      4D5F325F 
 3340      53657450 
 3340      574D5379 
 3340      6E634B69 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccLra6ig.s 			page 89


 3341              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
