ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SW3.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SW3_SetDriveMode,"ax",%progbits
  18              		.align	2
  19              		.global	SW3_SetDriveMode
  20              		.code	16
  21              		.thumb_func
  22              		.type	SW3_SetDriveMode, %function
  23              	SW3_SetDriveMode:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\SW3.c"
   1:.\Generated_Source\PSoC4/SW3.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SW3.c **** * File Name: SW3.c  
   3:.\Generated_Source\PSoC4/SW3.c **** * Version 2.20
   4:.\Generated_Source\PSoC4/SW3.c **** *
   5:.\Generated_Source\PSoC4/SW3.c **** * Description:
   6:.\Generated_Source\PSoC4/SW3.c **** *  This file contains API to enable firmware control of a Pins component.
   7:.\Generated_Source\PSoC4/SW3.c **** *
   8:.\Generated_Source\PSoC4/SW3.c **** ********************************************************************************
   9:.\Generated_Source\PSoC4/SW3.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:.\Generated_Source\PSoC4/SW3.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:.\Generated_Source\PSoC4/SW3.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:.\Generated_Source\PSoC4/SW3.c **** * the software package with which this file was provided.
  13:.\Generated_Source\PSoC4/SW3.c **** *******************************************************************************/
  14:.\Generated_Source\PSoC4/SW3.c **** 
  15:.\Generated_Source\PSoC4/SW3.c **** #include "cytypes.h"
  16:.\Generated_Source\PSoC4/SW3.c **** #include "SW3.h"
  17:.\Generated_Source\PSoC4/SW3.c **** 
  18:.\Generated_Source\PSoC4/SW3.c **** 
  19:.\Generated_Source\PSoC4/SW3.c **** #if defined(SW3__PC)
  20:.\Generated_Source\PSoC4/SW3.c ****     #define SW3_SetP4PinDriveMode(shift, mode)  \
  21:.\Generated_Source\PSoC4/SW3.c ****     do { \
  22:.\Generated_Source\PSoC4/SW3.c ****         SW3_PC =   (SW3_PC & \
  23:.\Generated_Source\PSoC4/SW3.c ****                                 (uint32)(~(uint32)(SW3_DRIVE_MODE_IND_MASK << \
  24:.\Generated_Source\PSoC4/SW3.c ****                                 (SW3_DRIVE_MODE_BITS * (shift))))) | \
  25:.\Generated_Source\PSoC4/SW3.c ****                                 (uint32)((uint32)(mode) << \
  26:.\Generated_Source\PSoC4/SW3.c ****                                 (SW3_DRIVE_MODE_BITS * (shift))); \
  27:.\Generated_Source\PSoC4/SW3.c ****     } while (0)
  28:.\Generated_Source\PSoC4/SW3.c **** #else
  29:.\Generated_Source\PSoC4/SW3.c ****     #if (CY_PSOC4_4200L)
  30:.\Generated_Source\PSoC4/SW3.c ****         #define SW3_SetP4PinDriveMode(shift, mode)  \
  31:.\Generated_Source\PSoC4/SW3.c ****         do { \
  32:.\Generated_Source\PSoC4/SW3.c ****             SW3_USBIO_CTRL_REG = (SW3_USBIO_CTRL_REG & \
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 2


  33:.\Generated_Source\PSoC4/SW3.c ****                                     (uint32)(~(uint32)(SW3_DRIVE_MODE_IND_MASK << \
  34:.\Generated_Source\PSoC4/SW3.c ****                                     (SW3_DRIVE_MODE_BITS * (shift))))) | \
  35:.\Generated_Source\PSoC4/SW3.c ****                                     (uint32)((uint32)(mode) << \
  36:.\Generated_Source\PSoC4/SW3.c ****                                     (SW3_DRIVE_MODE_BITS * (shift))); \
  37:.\Generated_Source\PSoC4/SW3.c ****         } while (0)
  38:.\Generated_Source\PSoC4/SW3.c ****     #endif
  39:.\Generated_Source\PSoC4/SW3.c **** #endif
  40:.\Generated_Source\PSoC4/SW3.c ****   
  41:.\Generated_Source\PSoC4/SW3.c **** 
  42:.\Generated_Source\PSoC4/SW3.c **** #if defined(SW3__PC) || (CY_PSOC4_4200L) 
  43:.\Generated_Source\PSoC4/SW3.c ****     /*******************************************************************************
  44:.\Generated_Source\PSoC4/SW3.c ****     * Function Name: SW3_SetDriveMode
  45:.\Generated_Source\PSoC4/SW3.c ****     ****************************************************************************//**
  46:.\Generated_Source\PSoC4/SW3.c ****     *
  47:.\Generated_Source\PSoC4/SW3.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:.\Generated_Source\PSoC4/SW3.c ****     * 
  49:.\Generated_Source\PSoC4/SW3.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:.\Generated_Source\PSoC4/SW3.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:.\Generated_Source\PSoC4/SW3.c ****     *
  52:.\Generated_Source\PSoC4/SW3.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:.\Generated_Source\PSoC4/SW3.c ****     * parameter for more information.
  54:.\Generated_Source\PSoC4/SW3.c ****     *
  55:.\Generated_Source\PSoC4/SW3.c ****     * \param mode
  56:.\Generated_Source\PSoC4/SW3.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:.\Generated_Source\PSoC4/SW3.c ****     *  \ref driveMode.
  58:.\Generated_Source\PSoC4/SW3.c ****     *
  59:.\Generated_Source\PSoC4/SW3.c ****     * \return
  60:.\Generated_Source\PSoC4/SW3.c ****     *  None
  61:.\Generated_Source\PSoC4/SW3.c ****     *
  62:.\Generated_Source\PSoC4/SW3.c ****     * \sideeffect
  63:.\Generated_Source\PSoC4/SW3.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:.\Generated_Source\PSoC4/SW3.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:.\Generated_Source\PSoC4/SW3.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:.\Generated_Source\PSoC4/SW3.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:.\Generated_Source\PSoC4/SW3.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:.\Generated_Source\PSoC4/SW3.c ****     *
  69:.\Generated_Source\PSoC4/SW3.c ****     * \funcusage
  70:.\Generated_Source\PSoC4/SW3.c ****     *  \snippet SW3_SUT.c usage_SW3_SetDriveMode
  71:.\Generated_Source\PSoC4/SW3.c ****     *******************************************************************************/
  72:.\Generated_Source\PSoC4/SW3.c ****     void SW3_SetDriveMode(uint8 mode)
  73:.\Generated_Source\PSoC4/SW3.c ****     {
  26              		.loc 1 73 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 021C     		mov	r2, r0
  37 0008 FB1D     		add	r3, r7, #7
  38 000a 1A70     		strb	r2, [r3]
  74:.\Generated_Source\PSoC4/SW3.c **** 		SW3_SetP4PinDriveMode(SW3__0__SHIFT, mode);
  39              		.loc 1 74 0
  40 000c 154B     		ldr	r3, .L2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 3


  41 000e 154A     		ldr	r2, .L2
  42 0010 1268     		ldr	r2, [r2]
  43 0012 0721     		mov	r1, #7
  44 0014 8A43     		bic	r2, r1
  45 0016 111C     		mov	r1, r2
  46 0018 FA1D     		add	r2, r7, #7
  47 001a 1278     		ldrb	r2, [r2]
  48 001c 0A43     		orr	r2, r1
  49 001e 1A60     		str	r2, [r3]
  75:.\Generated_Source\PSoC4/SW3.c **** 		SW3_SetP4PinDriveMode(SW3__1__SHIFT, mode);
  50              		.loc 1 75 0
  51 0020 104B     		ldr	r3, .L2
  52 0022 104A     		ldr	r2, .L2
  53 0024 1268     		ldr	r2, [r2]
  54 0026 3821     		mov	r1, #56
  55 0028 8A43     		bic	r2, r1
  56 002a 111C     		mov	r1, r2
  57 002c FA1D     		add	r2, r7, #7
  58 002e 1278     		ldrb	r2, [r2]
  59 0030 D200     		lsl	r2, r2, #3
  60 0032 0A43     		orr	r2, r1
  61 0034 1A60     		str	r2, [r3]
  76:.\Generated_Source\PSoC4/SW3.c **** 		SW3_SetP4PinDriveMode(SW3__2__SHIFT, mode);
  62              		.loc 1 76 0
  63 0036 0B4B     		ldr	r3, .L2
  64 0038 0A4A     		ldr	r2, .L2
  65 003a 1268     		ldr	r2, [r2]
  66 003c 0A49     		ldr	r1, .L2+4
  67 003e 1140     		and	r1, r2
  68 0040 FA1D     		add	r2, r7, #7
  69 0042 1278     		ldrb	r2, [r2]
  70 0044 9201     		lsl	r2, r2, #6
  71 0046 0A43     		orr	r2, r1
  72 0048 1A60     		str	r2, [r3]
  77:.\Generated_Source\PSoC4/SW3.c **** 		SW3_SetP4PinDriveMode(SW3__3__SHIFT, mode);
  73              		.loc 1 77 0
  74 004a 064B     		ldr	r3, .L2
  75 004c 054A     		ldr	r2, .L2
  76 004e 1268     		ldr	r2, [r2]
  77 0050 0649     		ldr	r1, .L2+8
  78 0052 1140     		and	r1, r2
  79 0054 FA1D     		add	r2, r7, #7
  80 0056 1278     		ldrb	r2, [r2]
  81 0058 5202     		lsl	r2, r2, #9
  82 005a 0A43     		orr	r2, r1
  83 005c 1A60     		str	r2, [r3]
  78:.\Generated_Source\PSoC4/SW3.c ****     }
  84              		.loc 1 78 0
  85 005e BD46     		mov	sp, r7
  86 0060 02B0     		add	sp, sp, #8
  87              		@ sp needed
  88 0062 80BD     		pop	{r7, pc}
  89              	.L3:
  90              		.align	2
  91              	.L2:
  92 0064 08020440 		.word	1074004488
  93 0068 3FFEFFFF 		.word	-449
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 4


  94 006c FFF1FFFF 		.word	-3585
  95              		.cfi_endproc
  96              	.LFE0:
  97              		.size	SW3_SetDriveMode, .-SW3_SetDriveMode
  98              		.section	.text.SW3_Write,"ax",%progbits
  99              		.align	2
 100              		.global	SW3_Write
 101              		.code	16
 102              		.thumb_func
 103              		.type	SW3_Write, %function
 104              	SW3_Write:
 105              	.LFB1:
  79:.\Generated_Source\PSoC4/SW3.c **** #endif
  80:.\Generated_Source\PSoC4/SW3.c **** 
  81:.\Generated_Source\PSoC4/SW3.c **** 
  82:.\Generated_Source\PSoC4/SW3.c **** /*******************************************************************************
  83:.\Generated_Source\PSoC4/SW3.c **** * Function Name: SW3_Write
  84:.\Generated_Source\PSoC4/SW3.c **** ****************************************************************************//**
  85:.\Generated_Source\PSoC4/SW3.c **** *
  86:.\Generated_Source\PSoC4/SW3.c **** * \brief Writes the value to the physical port (data output register), masking
  87:.\Generated_Source\PSoC4/SW3.c **** *  and shifting the bits appropriately. 
  88:.\Generated_Source\PSoC4/SW3.c **** *
  89:.\Generated_Source\PSoC4/SW3.c **** * The data output register controls the signal applied to the physical pin in 
  90:.\Generated_Source\PSoC4/SW3.c **** * conjunction with the drive mode parameter. This function avoids changing 
  91:.\Generated_Source\PSoC4/SW3.c **** * other bits in the port by using the appropriate method (read-modify-write or
  92:.\Generated_Source\PSoC4/SW3.c **** * bit banding).
  93:.\Generated_Source\PSoC4/SW3.c **** *
  94:.\Generated_Source\PSoC4/SW3.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  95:.\Generated_Source\PSoC4/SW3.c **** * as it is driven by the hardware signal attached to it.
  96:.\Generated_Source\PSoC4/SW3.c **** *
  97:.\Generated_Source\PSoC4/SW3.c **** * \param value
  98:.\Generated_Source\PSoC4/SW3.c **** *  Value to write to the component instance.
  99:.\Generated_Source\PSoC4/SW3.c **** *
 100:.\Generated_Source\PSoC4/SW3.c **** * \return 
 101:.\Generated_Source\PSoC4/SW3.c **** *  None 
 102:.\Generated_Source\PSoC4/SW3.c **** *
 103:.\Generated_Source\PSoC4/SW3.c **** * \sideeffect
 104:.\Generated_Source\PSoC4/SW3.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 105:.\Generated_Source\PSoC4/SW3.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 106:.\Generated_Source\PSoC4/SW3.c **** *  interrupts this function and performs writes to the Pins component data 
 107:.\Generated_Source\PSoC4/SW3.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 108:.\Generated_Source\PSoC4/SW3.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 109:.\Generated_Source\PSoC4/SW3.c **** *  this function.
 110:.\Generated_Source\PSoC4/SW3.c **** *
 111:.\Generated_Source\PSoC4/SW3.c **** * \funcusage
 112:.\Generated_Source\PSoC4/SW3.c **** *  \snippet SW3_SUT.c usage_SW3_Write
 113:.\Generated_Source\PSoC4/SW3.c **** *******************************************************************************/
 114:.\Generated_Source\PSoC4/SW3.c **** void SW3_Write(uint8 value)
 115:.\Generated_Source\PSoC4/SW3.c **** {
 106              		.loc 1 115 0
 107              		.cfi_startproc
 108 0000 80B5     		push	{r7, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 7, -8
 111              		.cfi_offset 14, -4
 112 0002 84B0     		sub	sp, sp, #16
 113              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 5


 114 0004 00AF     		add	r7, sp, #0
 115              		.cfi_def_cfa_register 7
 116 0006 021C     		mov	r2, r0
 117 0008 FB1D     		add	r3, r7, #7
 118 000a 1A70     		strb	r2, [r3]
 116:.\Generated_Source\PSoC4/SW3.c ****     uint8 drVal = (uint8)(SW3_DR & (uint8)(~SW3_MASK));
 119              		.loc 1 116 0
 120 000c 0D4B     		ldr	r3, .L5
 121 000e 1B68     		ldr	r3, [r3]
 122 0010 DAB2     		uxtb	r2, r3
 123 0012 0F23     		mov	r3, #15
 124 0014 FB18     		add	r3, r7, r3
 125 0016 0F21     		mov	r1, #15
 126 0018 8A43     		bic	r2, r1
 127 001a 1A70     		strb	r2, [r3]
 117:.\Generated_Source\PSoC4/SW3.c ****     drVal = (drVal | ((uint8)(value << SW3_SHIFT) & SW3_MASK));
 128              		.loc 1 117 0
 129 001c FB1D     		add	r3, r7, #7
 130 001e 1B78     		ldrb	r3, [r3]
 131 0020 0F22     		mov	r2, #15
 132 0022 1340     		and	r3, r2
 133 0024 D9B2     		uxtb	r1, r3
 134 0026 0F23     		mov	r3, #15
 135 0028 FB18     		add	r3, r7, r3
 136 002a 0F22     		mov	r2, #15
 137 002c BA18     		add	r2, r7, r2
 138 002e 1278     		ldrb	r2, [r2]
 139 0030 0A43     		orr	r2, r1
 140 0032 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/SW3.c ****     SW3_DR = (uint32)drVal;
 141              		.loc 1 118 0
 142 0034 034B     		ldr	r3, .L5
 143 0036 0F22     		mov	r2, #15
 144 0038 BA18     		add	r2, r7, r2
 145 003a 1278     		ldrb	r2, [r2]
 146 003c 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/SW3.c **** }
 147              		.loc 1 119 0
 148 003e BD46     		mov	sp, r7
 149 0040 04B0     		add	sp, sp, #16
 150              		@ sp needed
 151 0042 80BD     		pop	{r7, pc}
 152              	.L6:
 153              		.align	2
 154              	.L5:
 155 0044 00020440 		.word	1074004480
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	SW3_Write, .-SW3_Write
 159              		.section	.text.SW3_Read,"ax",%progbits
 160              		.align	2
 161              		.global	SW3_Read
 162              		.code	16
 163              		.thumb_func
 164              		.type	SW3_Read, %function
 165              	SW3_Read:
 166              	.LFB2:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 6


 120:.\Generated_Source\PSoC4/SW3.c **** 
 121:.\Generated_Source\PSoC4/SW3.c **** 
 122:.\Generated_Source\PSoC4/SW3.c **** /*******************************************************************************
 123:.\Generated_Source\PSoC4/SW3.c **** * Function Name: SW3_Read
 124:.\Generated_Source\PSoC4/SW3.c **** ****************************************************************************//**
 125:.\Generated_Source\PSoC4/SW3.c **** *
 126:.\Generated_Source\PSoC4/SW3.c **** * \brief Reads the associated physical port (pin status register) and masks 
 127:.\Generated_Source\PSoC4/SW3.c **** *  the required bits according to the width and bit position of the component
 128:.\Generated_Source\PSoC4/SW3.c **** *  instance. 
 129:.\Generated_Source\PSoC4/SW3.c **** *
 130:.\Generated_Source\PSoC4/SW3.c **** * The pin's status register returns the current logic level present on the 
 131:.\Generated_Source\PSoC4/SW3.c **** * physical pin.
 132:.\Generated_Source\PSoC4/SW3.c **** *
 133:.\Generated_Source\PSoC4/SW3.c **** * \return 
 134:.\Generated_Source\PSoC4/SW3.c **** *  The current value for the pins in the component as a right justified number.
 135:.\Generated_Source\PSoC4/SW3.c **** *
 136:.\Generated_Source\PSoC4/SW3.c **** * \funcusage
 137:.\Generated_Source\PSoC4/SW3.c **** *  \snippet SW3_SUT.c usage_SW3_Read  
 138:.\Generated_Source\PSoC4/SW3.c **** *******************************************************************************/
 139:.\Generated_Source\PSoC4/SW3.c **** uint8 SW3_Read(void)
 140:.\Generated_Source\PSoC4/SW3.c **** {
 167              		.loc 1 140 0
 168              		.cfi_startproc
 169 0000 80B5     		push	{r7, lr}
 170              		.cfi_def_cfa_offset 8
 171              		.cfi_offset 7, -8
 172              		.cfi_offset 14, -4
 173 0002 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 141:.\Generated_Source\PSoC4/SW3.c ****     return (uint8)((SW3_PS & SW3_MASK) >> SW3_SHIFT);
 175              		.loc 1 141 0
 176 0004 044B     		ldr	r3, .L9
 177 0006 1B68     		ldr	r3, [r3]
 178 0008 DBB2     		uxtb	r3, r3
 179 000a 0F22     		mov	r2, #15
 180 000c 1340     		and	r3, r2
 181 000e DBB2     		uxtb	r3, r3
 142:.\Generated_Source\PSoC4/SW3.c **** }
 182              		.loc 1 142 0
 183 0010 181C     		mov	r0, r3
 184 0012 BD46     		mov	sp, r7
 185              		@ sp needed
 186 0014 80BD     		pop	{r7, pc}
 187              	.L10:
 188 0016 C046     		.align	2
 189              	.L9:
 190 0018 04020440 		.word	1074004484
 191              		.cfi_endproc
 192              	.LFE2:
 193              		.size	SW3_Read, .-SW3_Read
 194              		.section	.text.SW3_ReadDataReg,"ax",%progbits
 195              		.align	2
 196              		.global	SW3_ReadDataReg
 197              		.code	16
 198              		.thumb_func
 199              		.type	SW3_ReadDataReg, %function
 200              	SW3_ReadDataReg:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 7


 201              	.LFB3:
 143:.\Generated_Source\PSoC4/SW3.c **** 
 144:.\Generated_Source\PSoC4/SW3.c **** 
 145:.\Generated_Source\PSoC4/SW3.c **** /*******************************************************************************
 146:.\Generated_Source\PSoC4/SW3.c **** * Function Name: SW3_ReadDataReg
 147:.\Generated_Source\PSoC4/SW3.c **** ****************************************************************************//**
 148:.\Generated_Source\PSoC4/SW3.c **** *
 149:.\Generated_Source\PSoC4/SW3.c **** * \brief Reads the associated physical port's data output register and masks 
 150:.\Generated_Source\PSoC4/SW3.c **** *  the correct bits according to the width and bit position of the component 
 151:.\Generated_Source\PSoC4/SW3.c **** *  instance. 
 152:.\Generated_Source\PSoC4/SW3.c **** *
 153:.\Generated_Source\PSoC4/SW3.c **** * The data output register controls the signal applied to the physical pin in 
 154:.\Generated_Source\PSoC4/SW3.c **** * conjunction with the drive mode parameter. This is not the same as the 
 155:.\Generated_Source\PSoC4/SW3.c **** * preferred SW3_Read() API because the 
 156:.\Generated_Source\PSoC4/SW3.c **** * SW3_ReadDataReg() reads the data register instead of the status 
 157:.\Generated_Source\PSoC4/SW3.c **** * register. For output pins this is a useful function to determine the value 
 158:.\Generated_Source\PSoC4/SW3.c **** * just written to the pin.
 159:.\Generated_Source\PSoC4/SW3.c **** *
 160:.\Generated_Source\PSoC4/SW3.c **** * \return 
 161:.\Generated_Source\PSoC4/SW3.c **** *  The current value of the data register masked and shifted into a right 
 162:.\Generated_Source\PSoC4/SW3.c **** *  justified number for the component instance.
 163:.\Generated_Source\PSoC4/SW3.c **** *
 164:.\Generated_Source\PSoC4/SW3.c **** * \funcusage
 165:.\Generated_Source\PSoC4/SW3.c **** *  \snippet SW3_SUT.c usage_SW3_ReadDataReg 
 166:.\Generated_Source\PSoC4/SW3.c **** *******************************************************************************/
 167:.\Generated_Source\PSoC4/SW3.c **** uint8 SW3_ReadDataReg(void)
 168:.\Generated_Source\PSoC4/SW3.c **** {
 202              		.loc 1 168 0
 203              		.cfi_startproc
 204 0000 80B5     		push	{r7, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 7, -8
 207              		.cfi_offset 14, -4
 208 0002 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 169:.\Generated_Source\PSoC4/SW3.c ****     return (uint8)((SW3_DR & SW3_MASK) >> SW3_SHIFT);
 210              		.loc 1 169 0
 211 0004 044B     		ldr	r3, .L13
 212 0006 1B68     		ldr	r3, [r3]
 213 0008 DBB2     		uxtb	r3, r3
 214 000a 0F22     		mov	r2, #15
 215 000c 1340     		and	r3, r2
 216 000e DBB2     		uxtb	r3, r3
 170:.\Generated_Source\PSoC4/SW3.c **** }
 217              		.loc 1 170 0
 218 0010 181C     		mov	r0, r3
 219 0012 BD46     		mov	sp, r7
 220              		@ sp needed
 221 0014 80BD     		pop	{r7, pc}
 222              	.L14:
 223 0016 C046     		.align	2
 224              	.L13:
 225 0018 00020440 		.word	1074004480
 226              		.cfi_endproc
 227              	.LFE3:
 228              		.size	SW3_ReadDataReg, .-SW3_ReadDataReg
 229              		.section	.text.SW3_SetInterruptMode,"ax",%progbits
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 8


 230              		.align	2
 231              		.global	SW3_SetInterruptMode
 232              		.code	16
 233              		.thumb_func
 234              		.type	SW3_SetInterruptMode, %function
 235              	SW3_SetInterruptMode:
 236              	.LFB4:
 171:.\Generated_Source\PSoC4/SW3.c **** 
 172:.\Generated_Source\PSoC4/SW3.c **** 
 173:.\Generated_Source\PSoC4/SW3.c **** /*******************************************************************************
 174:.\Generated_Source\PSoC4/SW3.c **** * Function Name: SW3_SetInterruptMode
 175:.\Generated_Source\PSoC4/SW3.c **** ****************************************************************************//**
 176:.\Generated_Source\PSoC4/SW3.c **** *
 177:.\Generated_Source\PSoC4/SW3.c **** * \brief Configures the interrupt mode for each of the Pins component's
 178:.\Generated_Source\PSoC4/SW3.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 179:.\Generated_Source\PSoC4/SW3.c **** *  specified in the Pins component.
 180:.\Generated_Source\PSoC4/SW3.c **** *
 181:.\Generated_Source\PSoC4/SW3.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 182:.\Generated_Source\PSoC4/SW3.c **** *  interrupt may trigger it.
 183:.\Generated_Source\PSoC4/SW3.c **** *
 184:.\Generated_Source\PSoC4/SW3.c **** * \param position
 185:.\Generated_Source\PSoC4/SW3.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 186:.\Generated_Source\PSoC4/SW3.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 187:.\Generated_Source\PSoC4/SW3.c **** *  component. Or you may use SW3_INTR_ALL to configure the
 188:.\Generated_Source\PSoC4/SW3.c **** *  interrupt mode of all the pins in the Pins component.       
 189:.\Generated_Source\PSoC4/SW3.c **** *  - SW3_0_INTR       (First pin in the list)
 190:.\Generated_Source\PSoC4/SW3.c **** *  - SW3_1_INTR       (Second pin in the list)
 191:.\Generated_Source\PSoC4/SW3.c **** *  - ...
 192:.\Generated_Source\PSoC4/SW3.c **** *  - SW3_INTR_ALL     (All pins in Pins component)
 193:.\Generated_Source\PSoC4/SW3.c **** *
 194:.\Generated_Source\PSoC4/SW3.c **** * \param mode
 195:.\Generated_Source\PSoC4/SW3.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 196:.\Generated_Source\PSoC4/SW3.c **** *  \ref intrMode.
 197:.\Generated_Source\PSoC4/SW3.c **** *
 198:.\Generated_Source\PSoC4/SW3.c **** * \return 
 199:.\Generated_Source\PSoC4/SW3.c **** *  None
 200:.\Generated_Source\PSoC4/SW3.c **** *  
 201:.\Generated_Source\PSoC4/SW3.c **** * \sideeffect
 202:.\Generated_Source\PSoC4/SW3.c **** *  It is recommended that the interrupt be disabled before calling this 
 203:.\Generated_Source\PSoC4/SW3.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 204:.\Generated_Source\PSoC4/SW3.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 205:.\Generated_Source\PSoC4/SW3.c **** *  port.
 206:.\Generated_Source\PSoC4/SW3.c **** *
 207:.\Generated_Source\PSoC4/SW3.c **** * \funcusage
 208:.\Generated_Source\PSoC4/SW3.c **** *  \snippet SW3_SUT.c usage_SW3_SetInterruptMode
 209:.\Generated_Source\PSoC4/SW3.c **** *******************************************************************************/
 210:.\Generated_Source\PSoC4/SW3.c **** void SW3_SetInterruptMode(uint16 position, uint16 mode)
 211:.\Generated_Source\PSoC4/SW3.c **** {
 237              		.loc 1 211 0
 238              		.cfi_startproc
 239 0000 80B5     		push	{r7, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 7, -8
 242              		.cfi_offset 14, -4
 243 0002 84B0     		sub	sp, sp, #16
 244              		.cfi_def_cfa_offset 24
 245 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 9


 246              		.cfi_def_cfa_register 7
 247 0006 021C     		mov	r2, r0
 248 0008 BB1D     		add	r3, r7, #6
 249 000a 1A80     		strh	r2, [r3]
 250 000c 3B1D     		add	r3, r7, #4
 251 000e 0A1C     		add	r2, r1, #0
 252 0010 1A80     		strh	r2, [r3]
 212:.\Generated_Source\PSoC4/SW3.c ****     uint32 intrCfg;
 213:.\Generated_Source\PSoC4/SW3.c ****     
 214:.\Generated_Source\PSoC4/SW3.c ****     intrCfg =  SW3_INTCFG & (uint32)(~(uint32)position);
 253              		.loc 1 214 0
 254 0012 0A4B     		ldr	r3, .L16
 255 0014 1B68     		ldr	r3, [r3]
 256 0016 BA1D     		add	r2, r7, #6
 257 0018 1288     		ldrh	r2, [r2]
 258 001a D243     		mvn	r2, r2
 259 001c 1340     		and	r3, r2
 260 001e FB60     		str	r3, [r7, #12]
 215:.\Generated_Source\PSoC4/SW3.c ****     SW3_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 261              		.loc 1 215 0
 262 0020 064B     		ldr	r3, .L16
 263 0022 BA1D     		add	r2, r7, #6
 264 0024 391D     		add	r1, r7, #4
 265 0026 1288     		ldrh	r2, [r2]
 266 0028 0988     		ldrh	r1, [r1]
 267 002a 0A40     		and	r2, r1
 268 002c 92B2     		uxth	r2, r2
 269 002e 111C     		mov	r1, r2
 270 0030 FA68     		ldr	r2, [r7, #12]
 271 0032 0A43     		orr	r2, r1
 272 0034 1A60     		str	r2, [r3]
 216:.\Generated_Source\PSoC4/SW3.c **** }
 273              		.loc 1 216 0
 274 0036 BD46     		mov	sp, r7
 275 0038 04B0     		add	sp, sp, #16
 276              		@ sp needed
 277 003a 80BD     		pop	{r7, pc}
 278              	.L17:
 279              		.align	2
 280              	.L16:
 281 003c 0C020440 		.word	1074004492
 282              		.cfi_endproc
 283              	.LFE4:
 284              		.size	SW3_SetInterruptMode, .-SW3_SetInterruptMode
 285              		.section	.text.SW3_ClearInterrupt,"ax",%progbits
 286              		.align	2
 287              		.global	SW3_ClearInterrupt
 288              		.code	16
 289              		.thumb_func
 290              		.type	SW3_ClearInterrupt, %function
 291              	SW3_ClearInterrupt:
 292              	.LFB5:
 217:.\Generated_Source\PSoC4/SW3.c **** 
 218:.\Generated_Source\PSoC4/SW3.c **** 
 219:.\Generated_Source\PSoC4/SW3.c **** /*******************************************************************************
 220:.\Generated_Source\PSoC4/SW3.c **** * Function Name: SW3_ClearInterrupt
 221:.\Generated_Source\PSoC4/SW3.c **** ****************************************************************************//**
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 10


 222:.\Generated_Source\PSoC4/SW3.c **** *
 223:.\Generated_Source\PSoC4/SW3.c **** * \brief Clears any active interrupts attached with the component and returns 
 224:.\Generated_Source\PSoC4/SW3.c **** *  the value of the interrupt status register allowing determination of which
 225:.\Generated_Source\PSoC4/SW3.c **** *  pins generated an interrupt event.
 226:.\Generated_Source\PSoC4/SW3.c **** *
 227:.\Generated_Source\PSoC4/SW3.c **** * \return 
 228:.\Generated_Source\PSoC4/SW3.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 229:.\Generated_Source\PSoC4/SW3.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 230:.\Generated_Source\PSoC4/SW3.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 231:.\Generated_Source\PSoC4/SW3.c **** *  
 232:.\Generated_Source\PSoC4/SW3.c **** * \sideeffect
 233:.\Generated_Source\PSoC4/SW3.c **** *  Clears all bits of the physical port's interrupt status register, not just
 234:.\Generated_Source\PSoC4/SW3.c **** *  those associated with the Pins component.
 235:.\Generated_Source\PSoC4/SW3.c **** *
 236:.\Generated_Source\PSoC4/SW3.c **** * \funcusage
 237:.\Generated_Source\PSoC4/SW3.c **** *  \snippet SW3_SUT.c usage_SW3_ClearInterrupt
 238:.\Generated_Source\PSoC4/SW3.c **** *******************************************************************************/
 239:.\Generated_Source\PSoC4/SW3.c **** uint8 SW3_ClearInterrupt(void)
 240:.\Generated_Source\PSoC4/SW3.c **** {
 293              		.loc 1 240 0
 294              		.cfi_startproc
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 82B0     		sub	sp, sp, #8
 300              		.cfi_def_cfa_offset 16
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 241:.\Generated_Source\PSoC4/SW3.c **** 	uint8 maskedStatus = (uint8)(SW3_INTSTAT & SW3_MASK);
 303              		.loc 1 241 0
 304 0006 084B     		ldr	r3, .L20
 305 0008 1B68     		ldr	r3, [r3]
 306 000a DAB2     		uxtb	r2, r3
 307 000c FB1D     		add	r3, r7, #7
 308 000e 0F21     		mov	r1, #15
 309 0010 0A40     		and	r2, r1
 310 0012 1A70     		strb	r2, [r3]
 242:.\Generated_Source\PSoC4/SW3.c **** 	SW3_INTSTAT = maskedStatus;
 311              		.loc 1 242 0
 312 0014 044B     		ldr	r3, .L20
 313 0016 FA1D     		add	r2, r7, #7
 314 0018 1278     		ldrb	r2, [r2]
 315 001a 1A60     		str	r2, [r3]
 243:.\Generated_Source\PSoC4/SW3.c ****     return maskedStatus >> SW3_SHIFT;
 316              		.loc 1 243 0
 317 001c FB1D     		add	r3, r7, #7
 318 001e 1B78     		ldrb	r3, [r3]
 244:.\Generated_Source\PSoC4/SW3.c **** }
 319              		.loc 1 244 0
 320 0020 181C     		mov	r0, r3
 321 0022 BD46     		mov	sp, r7
 322 0024 02B0     		add	sp, sp, #8
 323              		@ sp needed
 324 0026 80BD     		pop	{r7, pc}
 325              	.L21:
 326              		.align	2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 11


 327              	.L20:
 328 0028 10020440 		.word	1074004496
 329              		.cfi_endproc
 330              	.LFE5:
 331              		.size	SW3_ClearInterrupt, .-SW3_ClearInterrupt
 332              		.text
 333              	.Letext0:
 334              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 335              		.section	.debug_info,"",%progbits
 336              	.Ldebug_info0:
 337 0000 96010000 		.4byte	0x196
 338 0004 0400     		.2byte	0x4
 339 0006 00000000 		.4byte	.Ldebug_abbrev0
 340 000a 04       		.byte	0x4
 341 000b 01       		.uleb128 0x1
 342 000c 6C000000 		.4byte	.LASF28
 343 0010 01       		.byte	0x1
 344 0011 0B020000 		.4byte	.LASF29
 345 0015 36010000 		.4byte	.LASF30
 346 0019 00000000 		.4byte	.Ldebug_ranges0+0
 347 001d 00000000 		.4byte	0
 348 0021 00000000 		.4byte	.Ldebug_line0
 349 0025 02       		.uleb128 0x2
 350 0026 01       		.byte	0x1
 351 0027 06       		.byte	0x6
 352 0028 EC010000 		.4byte	.LASF0
 353 002c 02       		.uleb128 0x2
 354 002d 01       		.byte	0x1
 355 002e 08       		.byte	0x8
 356 002f 1B000000 		.4byte	.LASF1
 357 0033 02       		.uleb128 0x2
 358 0034 02       		.byte	0x2
 359 0035 05       		.byte	0x5
 360 0036 D3010000 		.4byte	.LASF2
 361 003a 02       		.uleb128 0x2
 362 003b 02       		.byte	0x2
 363 003c 07       		.byte	0x7
 364 003d 41000000 		.4byte	.LASF3
 365 0041 02       		.uleb128 0x2
 366 0042 04       		.byte	0x4
 367 0043 05       		.byte	0x5
 368 0044 E3010000 		.4byte	.LASF4
 369 0048 02       		.uleb128 0x2
 370 0049 04       		.byte	0x4
 371 004a 07       		.byte	0x7
 372 004b 2F000000 		.4byte	.LASF5
 373 004f 02       		.uleb128 0x2
 374 0050 08       		.byte	0x8
 375 0051 05       		.byte	0x5
 376 0052 B3010000 		.4byte	.LASF6
 377 0056 02       		.uleb128 0x2
 378 0057 08       		.byte	0x8
 379 0058 07       		.byte	0x7
 380 0059 97010000 		.4byte	.LASF7
 381 005d 03       		.uleb128 0x3
 382 005e 04       		.byte	0x4
 383 005f 05       		.byte	0x5
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 12


 384 0060 696E7400 		.ascii	"int\000"
 385 0064 02       		.uleb128 0x2
 386 0065 04       		.byte	0x4
 387 0066 07       		.byte	0x7
 388 0067 29010000 		.4byte	.LASF8
 389 006b 04       		.uleb128 0x4
 390 006c DD010000 		.4byte	.LASF9
 391 0070 02       		.byte	0x2
 392 0071 3801     		.2byte	0x138
 393 0073 2C000000 		.4byte	0x2c
 394 0077 04       		.uleb128 0x4
 395 0078 FA000000 		.4byte	.LASF10
 396 007c 02       		.byte	0x2
 397 007d 3901     		.2byte	0x139
 398 007f 3A000000 		.4byte	0x3a
 399 0083 04       		.uleb128 0x4
 400 0084 1A010000 		.4byte	.LASF11
 401 0088 02       		.byte	0x2
 402 0089 3A01     		.2byte	0x13a
 403 008b 48000000 		.4byte	0x48
 404 008f 02       		.uleb128 0x2
 405 0090 04       		.byte	0x4
 406 0091 04       		.byte	0x4
 407 0092 15000000 		.4byte	.LASF12
 408 0096 02       		.uleb128 0x2
 409 0097 08       		.byte	0x8
 410 0098 04       		.byte	0x4
 411 0099 65000000 		.4byte	.LASF13
 412 009d 02       		.uleb128 0x2
 413 009e 01       		.byte	0x1
 414 009f 08       		.byte	0x8
 415 00a0 CE010000 		.4byte	.LASF14
 416 00a4 04       		.uleb128 0x4
 417 00a5 00000000 		.4byte	.LASF15
 418 00a9 02       		.byte	0x2
 419 00aa E401     		.2byte	0x1e4
 420 00ac B0000000 		.4byte	0xb0
 421 00b0 05       		.uleb128 0x5
 422 00b1 83000000 		.4byte	0x83
 423 00b5 06       		.uleb128 0x6
 424 00b6 54000000 		.4byte	.LASF16
 425 00ba 01       		.byte	0x1
 426 00bb 48       		.byte	0x48
 427 00bc 00000000 		.4byte	.LFB0
 428 00c0 70000000 		.4byte	.LFE0-.LFB0
 429 00c4 01       		.uleb128 0x1
 430 00c5 9C       		.byte	0x9c
 431 00c6 D9000000 		.4byte	0xd9
 432 00ca 07       		.uleb128 0x7
 433 00cb AE010000 		.4byte	.LASF18
 434 00cf 01       		.byte	0x1
 435 00d0 48       		.byte	0x48
 436 00d1 6B000000 		.4byte	0x6b
 437 00d5 02       		.uleb128 0x2
 438 00d6 91       		.byte	0x91
 439 00d7 77       		.sleb128 -9
 440 00d8 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 13


 441 00d9 06       		.uleb128 0x6
 442 00da 2A020000 		.4byte	.LASF17
 443 00de 01       		.byte	0x1
 444 00df 72       		.byte	0x72
 445 00e0 00000000 		.4byte	.LFB1
 446 00e4 48000000 		.4byte	.LFE1-.LFB1
 447 00e8 01       		.uleb128 0x1
 448 00e9 9C       		.byte	0x9c
 449 00ea 0B010000 		.4byte	0x10b
 450 00ee 07       		.uleb128 0x7
 451 00ef 06000000 		.4byte	.LASF19
 452 00f3 01       		.byte	0x1
 453 00f4 72       		.byte	0x72
 454 00f5 6B000000 		.4byte	0x6b
 455 00f9 02       		.uleb128 0x2
 456 00fa 91       		.byte	0x91
 457 00fb 6F       		.sleb128 -17
 458 00fc 08       		.uleb128 0x8
 459 00fd 29000000 		.4byte	.LASF24
 460 0101 01       		.byte	0x1
 461 0102 74       		.byte	0x74
 462 0103 6B000000 		.4byte	0x6b
 463 0107 02       		.uleb128 0x2
 464 0108 91       		.byte	0x91
 465 0109 77       		.sleb128 -9
 466 010a 00       		.byte	0
 467 010b 09       		.uleb128 0x9
 468 010c 0C000000 		.4byte	.LASF20
 469 0110 01       		.byte	0x1
 470 0111 8B       		.byte	0x8b
 471 0112 6B000000 		.4byte	0x6b
 472 0116 00000000 		.4byte	.LFB2
 473 011a 1C000000 		.4byte	.LFE2-.LFB2
 474 011e 01       		.uleb128 0x1
 475 011f 9C       		.byte	0x9c
 476 0120 09       		.uleb128 0x9
 477 0121 01010000 		.4byte	.LASF21
 478 0125 01       		.byte	0x1
 479 0126 A7       		.byte	0xa7
 480 0127 6B000000 		.4byte	0x6b
 481 012b 00000000 		.4byte	.LFB3
 482 012f 1C000000 		.4byte	.LFE3-.LFB3
 483 0133 01       		.uleb128 0x1
 484 0134 9C       		.byte	0x9c
 485 0135 06       		.uleb128 0x6
 486 0136 34020000 		.4byte	.LASF22
 487 013a 01       		.byte	0x1
 488 013b D2       		.byte	0xd2
 489 013c 00000000 		.4byte	.LFB4
 490 0140 40000000 		.4byte	.LFE4-.LFB4
 491 0144 01       		.uleb128 0x1
 492 0145 9C       		.byte	0x9c
 493 0146 75010000 		.4byte	0x175
 494 014a 07       		.uleb128 0x7
 495 014b 11010000 		.4byte	.LASF23
 496 014f 01       		.byte	0x1
 497 0150 D2       		.byte	0xd2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 14


 498 0151 77000000 		.4byte	0x77
 499 0155 02       		.uleb128 0x2
 500 0156 91       		.byte	0x91
 501 0157 6E       		.sleb128 -18
 502 0158 07       		.uleb128 0x7
 503 0159 AE010000 		.4byte	.LASF18
 504 015d 01       		.byte	0x1
 505 015e D2       		.byte	0xd2
 506 015f 77000000 		.4byte	0x77
 507 0163 02       		.uleb128 0x2
 508 0164 91       		.byte	0x91
 509 0165 6C       		.sleb128 -20
 510 0166 08       		.uleb128 0x8
 511 0167 21010000 		.4byte	.LASF25
 512 016b 01       		.byte	0x1
 513 016c D4       		.byte	0xd4
 514 016d 83000000 		.4byte	0x83
 515 0171 02       		.uleb128 0x2
 516 0172 91       		.byte	0x91
 517 0173 74       		.sleb128 -12
 518 0174 00       		.byte	0
 519 0175 0A       		.uleb128 0xa
 520 0176 F8010000 		.4byte	.LASF26
 521 017a 01       		.byte	0x1
 522 017b EF       		.byte	0xef
 523 017c 6B000000 		.4byte	0x6b
 524 0180 00000000 		.4byte	.LFB5
 525 0184 2C000000 		.4byte	.LFE5-.LFB5
 526 0188 01       		.uleb128 0x1
 527 0189 9C       		.byte	0x9c
 528 018a 08       		.uleb128 0x8
 529 018b C1010000 		.4byte	.LASF27
 530 018f 01       		.byte	0x1
 531 0190 F1       		.byte	0xf1
 532 0191 6B000000 		.4byte	0x6b
 533 0195 02       		.uleb128 0x2
 534 0196 91       		.byte	0x91
 535 0197 77       		.sleb128 -9
 536 0198 00       		.byte	0
 537 0199 00       		.byte	0
 538              		.section	.debug_abbrev,"",%progbits
 539              	.Ldebug_abbrev0:
 540 0000 01       		.uleb128 0x1
 541 0001 11       		.uleb128 0x11
 542 0002 01       		.byte	0x1
 543 0003 25       		.uleb128 0x25
 544 0004 0E       		.uleb128 0xe
 545 0005 13       		.uleb128 0x13
 546 0006 0B       		.uleb128 0xb
 547 0007 03       		.uleb128 0x3
 548 0008 0E       		.uleb128 0xe
 549 0009 1B       		.uleb128 0x1b
 550 000a 0E       		.uleb128 0xe
 551 000b 55       		.uleb128 0x55
 552 000c 17       		.uleb128 0x17
 553 000d 11       		.uleb128 0x11
 554 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 15


 555 000f 10       		.uleb128 0x10
 556 0010 17       		.uleb128 0x17
 557 0011 00       		.byte	0
 558 0012 00       		.byte	0
 559 0013 02       		.uleb128 0x2
 560 0014 24       		.uleb128 0x24
 561 0015 00       		.byte	0
 562 0016 0B       		.uleb128 0xb
 563 0017 0B       		.uleb128 0xb
 564 0018 3E       		.uleb128 0x3e
 565 0019 0B       		.uleb128 0xb
 566 001a 03       		.uleb128 0x3
 567 001b 0E       		.uleb128 0xe
 568 001c 00       		.byte	0
 569 001d 00       		.byte	0
 570 001e 03       		.uleb128 0x3
 571 001f 24       		.uleb128 0x24
 572 0020 00       		.byte	0
 573 0021 0B       		.uleb128 0xb
 574 0022 0B       		.uleb128 0xb
 575 0023 3E       		.uleb128 0x3e
 576 0024 0B       		.uleb128 0xb
 577 0025 03       		.uleb128 0x3
 578 0026 08       		.uleb128 0x8
 579 0027 00       		.byte	0
 580 0028 00       		.byte	0
 581 0029 04       		.uleb128 0x4
 582 002a 16       		.uleb128 0x16
 583 002b 00       		.byte	0
 584 002c 03       		.uleb128 0x3
 585 002d 0E       		.uleb128 0xe
 586 002e 3A       		.uleb128 0x3a
 587 002f 0B       		.uleb128 0xb
 588 0030 3B       		.uleb128 0x3b
 589 0031 05       		.uleb128 0x5
 590 0032 49       		.uleb128 0x49
 591 0033 13       		.uleb128 0x13
 592 0034 00       		.byte	0
 593 0035 00       		.byte	0
 594 0036 05       		.uleb128 0x5
 595 0037 35       		.uleb128 0x35
 596 0038 00       		.byte	0
 597 0039 49       		.uleb128 0x49
 598 003a 13       		.uleb128 0x13
 599 003b 00       		.byte	0
 600 003c 00       		.byte	0
 601 003d 06       		.uleb128 0x6
 602 003e 2E       		.uleb128 0x2e
 603 003f 01       		.byte	0x1
 604 0040 3F       		.uleb128 0x3f
 605 0041 19       		.uleb128 0x19
 606 0042 03       		.uleb128 0x3
 607 0043 0E       		.uleb128 0xe
 608 0044 3A       		.uleb128 0x3a
 609 0045 0B       		.uleb128 0xb
 610 0046 3B       		.uleb128 0x3b
 611 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 16


 612 0048 27       		.uleb128 0x27
 613 0049 19       		.uleb128 0x19
 614 004a 11       		.uleb128 0x11
 615 004b 01       		.uleb128 0x1
 616 004c 12       		.uleb128 0x12
 617 004d 06       		.uleb128 0x6
 618 004e 40       		.uleb128 0x40
 619 004f 18       		.uleb128 0x18
 620 0050 9742     		.uleb128 0x2117
 621 0052 19       		.uleb128 0x19
 622 0053 01       		.uleb128 0x1
 623 0054 13       		.uleb128 0x13
 624 0055 00       		.byte	0
 625 0056 00       		.byte	0
 626 0057 07       		.uleb128 0x7
 627 0058 05       		.uleb128 0x5
 628 0059 00       		.byte	0
 629 005a 03       		.uleb128 0x3
 630 005b 0E       		.uleb128 0xe
 631 005c 3A       		.uleb128 0x3a
 632 005d 0B       		.uleb128 0xb
 633 005e 3B       		.uleb128 0x3b
 634 005f 0B       		.uleb128 0xb
 635 0060 49       		.uleb128 0x49
 636 0061 13       		.uleb128 0x13
 637 0062 02       		.uleb128 0x2
 638 0063 18       		.uleb128 0x18
 639 0064 00       		.byte	0
 640 0065 00       		.byte	0
 641 0066 08       		.uleb128 0x8
 642 0067 34       		.uleb128 0x34
 643 0068 00       		.byte	0
 644 0069 03       		.uleb128 0x3
 645 006a 0E       		.uleb128 0xe
 646 006b 3A       		.uleb128 0x3a
 647 006c 0B       		.uleb128 0xb
 648 006d 3B       		.uleb128 0x3b
 649 006e 0B       		.uleb128 0xb
 650 006f 49       		.uleb128 0x49
 651 0070 13       		.uleb128 0x13
 652 0071 02       		.uleb128 0x2
 653 0072 18       		.uleb128 0x18
 654 0073 00       		.byte	0
 655 0074 00       		.byte	0
 656 0075 09       		.uleb128 0x9
 657 0076 2E       		.uleb128 0x2e
 658 0077 00       		.byte	0
 659 0078 3F       		.uleb128 0x3f
 660 0079 19       		.uleb128 0x19
 661 007a 03       		.uleb128 0x3
 662 007b 0E       		.uleb128 0xe
 663 007c 3A       		.uleb128 0x3a
 664 007d 0B       		.uleb128 0xb
 665 007e 3B       		.uleb128 0x3b
 666 007f 0B       		.uleb128 0xb
 667 0080 27       		.uleb128 0x27
 668 0081 19       		.uleb128 0x19
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 17


 669 0082 49       		.uleb128 0x49
 670 0083 13       		.uleb128 0x13
 671 0084 11       		.uleb128 0x11
 672 0085 01       		.uleb128 0x1
 673 0086 12       		.uleb128 0x12
 674 0087 06       		.uleb128 0x6
 675 0088 40       		.uleb128 0x40
 676 0089 18       		.uleb128 0x18
 677 008a 9742     		.uleb128 0x2117
 678 008c 19       		.uleb128 0x19
 679 008d 00       		.byte	0
 680 008e 00       		.byte	0
 681 008f 0A       		.uleb128 0xa
 682 0090 2E       		.uleb128 0x2e
 683 0091 01       		.byte	0x1
 684 0092 3F       		.uleb128 0x3f
 685 0093 19       		.uleb128 0x19
 686 0094 03       		.uleb128 0x3
 687 0095 0E       		.uleb128 0xe
 688 0096 3A       		.uleb128 0x3a
 689 0097 0B       		.uleb128 0xb
 690 0098 3B       		.uleb128 0x3b
 691 0099 0B       		.uleb128 0xb
 692 009a 27       		.uleb128 0x27
 693 009b 19       		.uleb128 0x19
 694 009c 49       		.uleb128 0x49
 695 009d 13       		.uleb128 0x13
 696 009e 11       		.uleb128 0x11
 697 009f 01       		.uleb128 0x1
 698 00a0 12       		.uleb128 0x12
 699 00a1 06       		.uleb128 0x6
 700 00a2 40       		.uleb128 0x40
 701 00a3 18       		.uleb128 0x18
 702 00a4 9742     		.uleb128 0x2117
 703 00a6 19       		.uleb128 0x19
 704 00a7 00       		.byte	0
 705 00a8 00       		.byte	0
 706 00a9 00       		.byte	0
 707              		.section	.debug_aranges,"",%progbits
 708 0000 44000000 		.4byte	0x44
 709 0004 0200     		.2byte	0x2
 710 0006 00000000 		.4byte	.Ldebug_info0
 711 000a 04       		.byte	0x4
 712 000b 00       		.byte	0
 713 000c 0000     		.2byte	0
 714 000e 0000     		.2byte	0
 715 0010 00000000 		.4byte	.LFB0
 716 0014 70000000 		.4byte	.LFE0-.LFB0
 717 0018 00000000 		.4byte	.LFB1
 718 001c 48000000 		.4byte	.LFE1-.LFB1
 719 0020 00000000 		.4byte	.LFB2
 720 0024 1C000000 		.4byte	.LFE2-.LFB2
 721 0028 00000000 		.4byte	.LFB3
 722 002c 1C000000 		.4byte	.LFE3-.LFB3
 723 0030 00000000 		.4byte	.LFB4
 724 0034 40000000 		.4byte	.LFE4-.LFB4
 725 0038 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 18


 726 003c 2C000000 		.4byte	.LFE5-.LFB5
 727 0040 00000000 		.4byte	0
 728 0044 00000000 		.4byte	0
 729              		.section	.debug_ranges,"",%progbits
 730              	.Ldebug_ranges0:
 731 0000 00000000 		.4byte	.LFB0
 732 0004 70000000 		.4byte	.LFE0
 733 0008 00000000 		.4byte	.LFB1
 734 000c 48000000 		.4byte	.LFE1
 735 0010 00000000 		.4byte	.LFB2
 736 0014 1C000000 		.4byte	.LFE2
 737 0018 00000000 		.4byte	.LFB3
 738 001c 1C000000 		.4byte	.LFE3
 739 0020 00000000 		.4byte	.LFB4
 740 0024 40000000 		.4byte	.LFE4
 741 0028 00000000 		.4byte	.LFB5
 742 002c 2C000000 		.4byte	.LFE5
 743 0030 00000000 		.4byte	0
 744 0034 00000000 		.4byte	0
 745              		.section	.debug_line,"",%progbits
 746              	.Ldebug_line0:
 747 0000 BC000000 		.section	.debug_str,"MS",%progbits,1
 747      02004200 
 747      00000201 
 747      FB0E0D00 
 747      01010101 
 748              	.LASF15:
 749 0000 72656733 		.ascii	"reg32\000"
 749      3200
 750              	.LASF19:
 751 0006 76616C75 		.ascii	"value\000"
 751      6500
 752              	.LASF20:
 753 000c 5357335F 		.ascii	"SW3_Read\000"
 753      52656164 
 753      00
 754              	.LASF12:
 755 0015 666C6F61 		.ascii	"float\000"
 755      7400
 756              	.LASF1:
 757 001b 756E7369 		.ascii	"unsigned char\000"
 757      676E6564 
 757      20636861 
 757      7200
 758              	.LASF24:
 759 0029 64725661 		.ascii	"drVal\000"
 759      6C00
 760              	.LASF5:
 761 002f 6C6F6E67 		.ascii	"long unsigned int\000"
 761      20756E73 
 761      69676E65 
 761      6420696E 
 761      7400
 762              	.LASF3:
 763 0041 73686F72 		.ascii	"short unsigned int\000"
 763      7420756E 
 763      7369676E 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 19


 763      65642069 
 763      6E7400
 764              	.LASF16:
 765 0054 5357335F 		.ascii	"SW3_SetDriveMode\000"
 765      53657444 
 765      72697665 
 765      4D6F6465 
 765      00
 766              	.LASF13:
 767 0065 646F7562 		.ascii	"double\000"
 767      6C6500
 768              	.LASF28:
 769 006c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 769      4320342E 
 769      392E3320 
 769      32303135 
 769      30333033 
 770 009f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 770      20726576 
 770      6973696F 
 770      6E203232 
 770      31323230 
 771 00d2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 771      66756E63 
 771      74696F6E 
 771      2D736563 
 771      74696F6E 
 772              	.LASF10:
 773 00fa 75696E74 		.ascii	"uint16\000"
 773      313600
 774              	.LASF21:
 775 0101 5357335F 		.ascii	"SW3_ReadDataReg\000"
 775      52656164 
 775      44617461 
 775      52656700 
 776              	.LASF23:
 777 0111 706F7369 		.ascii	"position\000"
 777      74696F6E 
 777      00
 778              	.LASF11:
 779 011a 75696E74 		.ascii	"uint32\000"
 779      333200
 780              	.LASF25:
 781 0121 696E7472 		.ascii	"intrCfg\000"
 781      43666700 
 782              	.LASF8:
 783 0129 756E7369 		.ascii	"unsigned int\000"
 783      676E6564 
 783      20696E74 
 783      00
 784              	.LASF30:
 785 0136 433A5C55 		.ascii	"C:\\Users\\Tech Consulting\\Desktop\\PSOC4 projects"
 785      73657273 
 785      5C546563 
 785      6820436F 
 785      6E73756C 
 786 0165 5C537465 		.ascii	"\\StepMotor_PSoC4200\\StepMotor_PSoC4200_Dual.cydsn"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 20


 786      704D6F74 
 786      6F725F50 
 786      536F4334 
 786      3230305C 
 787 0196 00       		.ascii	"\000"
 788              	.LASF7:
 789 0197 6C6F6E67 		.ascii	"long long unsigned int\000"
 789      206C6F6E 
 789      6720756E 
 789      7369676E 
 789      65642069 
 790              	.LASF18:
 791 01ae 6D6F6465 		.ascii	"mode\000"
 791      00
 792              	.LASF6:
 793 01b3 6C6F6E67 		.ascii	"long long int\000"
 793      206C6F6E 
 793      6720696E 
 793      7400
 794              	.LASF27:
 795 01c1 6D61736B 		.ascii	"maskedStatus\000"
 795      65645374 
 795      61747573 
 795      00
 796              	.LASF14:
 797 01ce 63686172 		.ascii	"char\000"
 797      00
 798              	.LASF2:
 799 01d3 73686F72 		.ascii	"short int\000"
 799      7420696E 
 799      7400
 800              	.LASF9:
 801 01dd 75696E74 		.ascii	"uint8\000"
 801      3800
 802              	.LASF4:
 803 01e3 6C6F6E67 		.ascii	"long int\000"
 803      20696E74 
 803      00
 804              	.LASF0:
 805 01ec 7369676E 		.ascii	"signed char\000"
 805      65642063 
 805      68617200 
 806              	.LASF26:
 807 01f8 5357335F 		.ascii	"SW3_ClearInterrupt\000"
 807      436C6561 
 807      72496E74 
 807      65727275 
 807      707400
 808              	.LASF29:
 809 020b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SW3.c\000"
 809      6E657261 
 809      7465645F 
 809      536F7572 
 809      63655C50 
 810              	.LASF17:
 811 022a 5357335F 		.ascii	"SW3_Write\000"
 811      57726974 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXt1Zbe.s 			page 21


 811      6500
 812              	.LASF22:
 813 0234 5357335F 		.ascii	"SW3_SetInterruptMode\000"
 813      53657449 
 813      6E746572 
 813      72757074 
 813      4D6F6465 
 814              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
