ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Comm_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	Comm_rxBufferHead,4,4
  18              		.comm	Comm_rxBufferTail,4,4
  19              		.comm	Comm_rxBufferOverflow,1,1
  20              		.comm	Comm_txBufferHead,4,4
  21              		.comm	Comm_txBufferTail,4,4
  22              		.section	.text.Comm_SpiUartReadRxData,"ax",%progbits
  23              		.align	2
  24              		.global	Comm_SpiUartReadRxData
  25              		.code	16
  26              		.thumb_func
  27              		.type	Comm_SpiUartReadRxData, %function
  28              	Comm_SpiUartReadRxData:
  29              	.LFB0:
  30              		.file 1 ".\\Generated_Source\\PSoC4\\Comm_SPI_UART.c"
   1:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * File Name: Comm_SPI_UART.c
   3:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Version 3.10
   4:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #include "Comm_PVT.h"
  19:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #include "Comm_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_INTERNAL_RX_SW_BUFFER_CONST)
  26:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint32 Comm_rxBufferHead;
  27:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint32 Comm_rxBufferTail;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 2


  28:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint8  Comm_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #endif /* (Comm_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint32 Comm_txBufferHead;
  33:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint32 Comm_txBufferTail;
  34:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #endif /* (Comm_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint8 Comm_rxBufferInternal[Comm_INTERNAL_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #endif /* (Comm_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     volatile uint8 Comm_txBufferInternal[Comm_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #endif /* (Comm_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
  48:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartReadRxData
  49:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
  50:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
  51:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
  52:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  53:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  54:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  55:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  56:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  57:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *     is empty.
  58:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
  59:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
  60:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
  61:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
  62:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
  63:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Next data element from the receive buffer.
  64:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
  65:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Global Variables:
  66:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Look into Comm_SpiInit for description.
  67:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
  68:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
  69:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 Comm_SpiUartReadRxData(void)
  70:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
  31              		.loc 1 70 0
  32              		.cfi_startproc
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  71:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 rxData = 0u;
  41              		.loc 1 71 0
  42 0006 0023     		mov	r3, #0
  43 0008 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 3


  72:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  73:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #if (Comm_INTERNAL_RX_SW_BUFFER_CONST)
  74:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 locTail;
  75:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #endif /* (Comm_INTERNAL_RX_SW_BUFFER_CONST) */
  76:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  77:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_CHECK_RX_SW_BUFFER)
  44              		.loc 1 77 0
  45 000a 144B     		ldr	r3, .L6
  46 000c 1B68     		ldr	r3, [r3]
  47 000e 002B     		cmp	r3, #0
  48 0010 1BD0     		beq	.L2
  78:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
  79:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             if (Comm_rxBufferHead != Comm_rxBufferTail)
  49              		.loc 1 79 0
  50 0012 134B     		ldr	r3, .L6+4
  51 0014 1A68     		ldr	r2, [r3]
  52 0016 134B     		ldr	r3, .L6+8
  53 0018 1B68     		ldr	r3, [r3]
  54 001a 9A42     		cmp	r2, r3
  55 001c 18D0     		beq	.L3
  80:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
  81:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* There is data in RX software buffer */
  82:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  83:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Calculate index to read from */
  84:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 locTail = (Comm_rxBufferTail + 1u);
  56              		.loc 1 84 0
  57 001e 114B     		ldr	r3, .L6+8
  58 0020 1B68     		ldr	r3, [r3]
  59 0022 0133     		add	r3, r3, #1
  60 0024 3B60     		str	r3, [r7]
  85:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  86:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 if (Comm_INTERNAL_RX_BUFFER_SIZE == locTail)
  61              		.loc 1 86 0
  62 0026 104B     		ldr	r3, .L6+12
  63 0028 1B68     		ldr	r3, [r3]
  64 002a 5A1C     		add	r2, r3, #1
  65 002c 3B68     		ldr	r3, [r7]
  66 002e 9A42     		cmp	r2, r3
  67 0030 01D1     		bne	.L4
  87:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 {
  88:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     locTail = 0u;
  68              		.loc 1 88 0
  69 0032 0023     		mov	r3, #0
  70 0034 3B60     		str	r3, [r7]
  71              	.L4:
  89:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 }
  90:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Get data from RX software buffer */
  92:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 rxData = Comm_GetWordFromRxBuffer(locTail);
  72              		.loc 1 92 0
  73 0036 3B68     		ldr	r3, [r7]
  74 0038 181C     		mov	r0, r3
  75 003a FFF7FEFF 		bl	Comm_GetWordFromRxBuffer
  76 003e 031C     		mov	r3, r0
  77 0040 7B60     		str	r3, [r7, #4]
  93:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  94:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Change index in the buffer */
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 4


  95:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 Comm_rxBufferTail = locTail;
  78              		.loc 1 95 0
  79 0042 084B     		ldr	r3, .L6+8
  80 0044 3A68     		ldr	r2, [r7]
  81 0046 1A60     		str	r2, [r3]
  82 0048 02E0     		b	.L3
  83              	.L2:
  96:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 if (Comm_CHECK_UART_RTS_CONTROL_FLOW)
  98:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 {
  99:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 100:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     if (0u == (Comm_INTR_RX_MASK_REG & Comm_INTR_RX_NOT_EMPTY))
 101:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     {
 102:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 103:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                         * receiving data into software buffer.
 104:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                         */
 105:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                         Comm_INTR_RX_MASK_REG |= Comm_INTR_RX_NOT_EMPTY;
 106:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     }
 107:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 }
 108:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 
 109:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 110:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 111:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 112:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 113:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 114:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Read data from RX FIFO */
 115:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             rxData = Comm_RX_FIFO_RD_REG;
  84              		.loc 1 115 0
  85 004a 084B     		ldr	r3, .L6+16
  86 004c 1B68     		ldr	r3, [r3]
  87 004e 7B60     		str	r3, [r7, #4]
  88              	.L3:
 116:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 117:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         
 118:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 119:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         return (rxData);
  89              		.loc 1 119 0
  90 0050 7B68     		ldr	r3, [r7, #4]
 120:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
  91              		.loc 1 120 0
  92 0052 181C     		mov	r0, r3
  93 0054 BD46     		mov	sp, r7
  94 0056 02B0     		add	sp, sp, #8
  95              		@ sp needed
  96 0058 80BD     		pop	{r7, pc}
  97              	.L7:
  98 005a C046     		.align	2
  99              	.L6:
 100 005c 00000000 		.word	Comm_rxBuffer
 101 0060 00000000 		.word	Comm_rxBufferHead
 102 0064 00000000 		.word	Comm_rxBufferTail
 103 0068 00000000 		.word	Comm_rxBufferSize
 104 006c 40030640 		.word	1074135872
 105              		.cfi_endproc
 106              	.LFE0:
 107              		.size	Comm_SpiUartReadRxData, .-Comm_SpiUartReadRxData
 108              		.section	.text.Comm_SpiUartGetRxBufferSize,"ax",%progbits
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 5


 109              		.align	2
 110              		.global	Comm_SpiUartGetRxBufferSize
 111              		.code	16
 112              		.thumb_func
 113              		.type	Comm_SpiUartGetRxBufferSize, %function
 114              	Comm_SpiUartGetRxBufferSize:
 115              	.LFB1:
 121:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 122:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 123:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 124:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartGetRxBufferSize
 125:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 126:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 127:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 128:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 129:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 130:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *     RX FIFO.
 131:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 132:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 133:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 134:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 135:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 136:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 137:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 138:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Number of received data elements
 139:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 140:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 141:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 Comm_SpiUartGetRxBufferSize(void)
 142:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 116              		.loc 1 142 0
 117              		.cfi_startproc
 118 0000 80B5     		push	{r7, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 82B0     		sub	sp, sp, #8
 123              		.cfi_def_cfa_offset 16
 124 0004 00AF     		add	r7, sp, #0
 125              		.cfi_def_cfa_register 7
 143:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 size;
 144:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #if (Comm_INTERNAL_RX_SW_BUFFER_CONST)
 145:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 locHead;
 146:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #endif /* (Comm_INTERNAL_RX_SW_BUFFER_CONST) */
 147:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 148:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_CHECK_RX_SW_BUFFER)
 126              		.loc 1 148 0
 127 0006 134B     		ldr	r3, .L14
 128 0008 1B68     		ldr	r3, [r3]
 129 000a 002B     		cmp	r3, #0
 130 000c 17D0     		beq	.L9
 149:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 150:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             locHead = Comm_rxBufferHead;
 131              		.loc 1 150 0
 132 000e 124B     		ldr	r3, .L14+4
 133 0010 1B68     		ldr	r3, [r3]
 134 0012 3B60     		str	r3, [r7]
 151:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 6


 152:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             if(locHead >= Comm_rxBufferTail)
 135              		.loc 1 152 0
 136 0014 114B     		ldr	r3, .L14+8
 137 0016 1B68     		ldr	r3, [r3]
 138 0018 3A68     		ldr	r2, [r7]
 139 001a 9A42     		cmp	r2, r3
 140 001c 05D3     		bcc	.L10
 153:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 154:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 size = (locHead - Comm_rxBufferTail);
 141              		.loc 1 154 0
 142 001e 0F4B     		ldr	r3, .L14+8
 143 0020 1B68     		ldr	r3, [r3]
 144 0022 3A68     		ldr	r2, [r7]
 145 0024 D31A     		sub	r3, r2, r3
 146 0026 7B60     		str	r3, [r7, #4]
 147 0028 0EE0     		b	.L12
 148              	.L10:
 155:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 156:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             else
 157:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 158:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 size = (locHead + (Comm_INTERNAL_RX_BUFFER_SIZE - Comm_rxBufferTail));
 149              		.loc 1 158 0
 150 002a 0D4B     		ldr	r3, .L14+12
 151 002c 1A68     		ldr	r2, [r3]
 152 002e 0B4B     		ldr	r3, .L14+8
 153 0030 1B68     		ldr	r3, [r3]
 154 0032 D21A     		sub	r2, r2, r3
 155 0034 3B68     		ldr	r3, [r7]
 156 0036 D318     		add	r3, r2, r3
 157 0038 0133     		add	r3, r3, #1
 158 003a 7B60     		str	r3, [r7, #4]
 159 003c 04E0     		b	.L12
 160              	.L9:
 159:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 160:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 161:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 162:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 163:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             size = Comm_GET_RX_FIFO_ENTRIES;
 161              		.loc 1 163 0
 162 003e 094B     		ldr	r3, .L14+16
 163 0040 1B68     		ldr	r3, [r3]
 164 0042 0F22     		mov	r2, #15
 165 0044 1340     		and	r3, r2
 166 0046 7B60     		str	r3, [r7, #4]
 167              	.L12:
 164:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 165:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         
 166:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 167:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         return (size);
 168              		.loc 1 167 0
 169 0048 7B68     		ldr	r3, [r7, #4]
 168:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 170              		.loc 1 168 0
 171 004a 181C     		mov	r0, r3
 172 004c BD46     		mov	sp, r7
 173 004e 02B0     		add	sp, sp, #8
 174              		@ sp needed
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 7


 175 0050 80BD     		pop	{r7, pc}
 176              	.L15:
 177 0052 C046     		.align	2
 178              	.L14:
 179 0054 00000000 		.word	Comm_rxBuffer
 180 0058 00000000 		.word	Comm_rxBufferHead
 181 005c 00000000 		.word	Comm_rxBufferTail
 182 0060 00000000 		.word	Comm_rxBufferSize
 183 0064 08030640 		.word	1074135816
 184              		.cfi_endproc
 185              	.LFE1:
 186              		.size	Comm_SpiUartGetRxBufferSize, .-Comm_SpiUartGetRxBufferSize
 187              		.section	.text.Comm_SpiUartClearRxBuffer,"ax",%progbits
 188              		.align	2
 189              		.global	Comm_SpiUartClearRxBuffer
 190              		.code	16
 191              		.thumb_func
 192              		.type	Comm_SpiUartClearRxBuffer, %function
 193              	Comm_SpiUartClearRxBuffer:
 194              	.LFB2:
 169:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 170:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 171:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 172:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartClearRxBuffer
 173:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 174:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 175:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 176:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 177:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 178:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 179:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 180:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 181:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 182:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 183:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 184:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 185:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     void Comm_SpiUartClearRxBuffer(void)
 186:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 195              		.loc 1 186 0
 196              		.cfi_startproc
 197 0000 80B5     		push	{r7, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 7, -8
 200              		.cfi_offset 14, -4
 201 0002 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 187:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_CHECK_RX_SW_BUFFER)
 203              		.loc 1 187 0
 204 0004 184B     		ldr	r3, .L19
 205 0006 1B68     		ldr	r3, [r3]
 206 0008 002B     		cmp	r3, #0
 207 000a 1DD0     		beq	.L17
 188:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 189:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Lock from component interruption */
 190:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_DisableInt();
 208              		.loc 1 190 0
 209 000c 0A20     		mov	r0, #10
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 8


 210 000e FFF7FEFF 		bl	CyIntDisable
 191:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 192:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Flush RX software buffer */
 193:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_rxBufferHead = Comm_rxBufferTail;
 211              		.loc 1 193 0
 212 0012 164B     		ldr	r3, .L19+4
 213 0014 1A68     		ldr	r2, [r3]
 214 0016 164B     		ldr	r3, .L19+8
 215 0018 1A60     		str	r2, [r3]
 194:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_rxBufferOverflow = 0u;
 216              		.loc 1 194 0
 217 001a 164B     		ldr	r3, .L19+12
 218 001c 0022     		mov	r2, #0
 219 001e 1A70     		strb	r2, [r3]
 195:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 196:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_CLEAR_RX_FIFO;
 220              		.loc 1 196 0
 221 0020 154B     		ldr	r3, .L19+16
 222 0022 154A     		ldr	r2, .L19+16
 223 0024 1268     		ldr	r2, [r2]
 224 0026 8021     		mov	r1, #128
 225 0028 4902     		lsl	r1, r1, #9
 226 002a 0A43     		orr	r2, r1
 227 002c 1A60     		str	r2, [r3]
 228 002e 124B     		ldr	r3, .L19+16
 229 0030 114A     		ldr	r2, .L19+16
 230 0032 1268     		ldr	r2, [r2]
 231 0034 1149     		ldr	r1, .L19+20
 232 0036 0A40     		and	r2, r1
 233 0038 1A60     		str	r2, [r3]
 197:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_ClearRxInterruptSource(Comm_INTR_RX_ALL);
 234              		.loc 1 197 0
 235 003a 114B     		ldr	r3, .L19+24
 236 003c 114A     		ldr	r2, .L19+28
 237 003e 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             if (Comm_CHECK_UART_RTS_CONTROL_FLOW)
 200:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 201:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 202:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 * data into software buffer.
 203:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 */
 204:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 Comm_INTR_RX_MASK_REG |= Comm_INTR_RX_NOT_EMPTY;
 205:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 206:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             
 207:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 208:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Release lock */
 209:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_EnableInt();
 238              		.loc 1 209 0
 239 0040 0A20     		mov	r0, #10
 240 0042 FFF7FEFF 		bl	CyIntEnable
 241 0046 0CE0     		b	.L16
 242              	.L17:
 210:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 211:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 212:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 213:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_CLEAR_RX_FIFO;
 243              		.loc 1 213 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 9


 244 0048 0B4B     		ldr	r3, .L19+16
 245 004a 0B4A     		ldr	r2, .L19+16
 246 004c 1268     		ldr	r2, [r2]
 247 004e 8021     		mov	r1, #128
 248 0050 4902     		lsl	r1, r1, #9
 249 0052 0A43     		orr	r2, r1
 250 0054 1A60     		str	r2, [r3]
 251 0056 084B     		ldr	r3, .L19+16
 252 0058 074A     		ldr	r2, .L19+16
 253 005a 1268     		ldr	r2, [r2]
 254 005c 0749     		ldr	r1, .L19+20
 255 005e 0A40     		and	r2, r1
 256 0060 1A60     		str	r2, [r3]
 257              	.L16:
 214:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 215:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         
 216:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 258              		.loc 1 216 0
 259 0062 BD46     		mov	sp, r7
 260              		@ sp needed
 261 0064 80BD     		pop	{r7, pc}
 262              	.L20:
 263 0066 C046     		.align	2
 264              	.L19:
 265 0068 00000000 		.word	Comm_rxBuffer
 266 006c 00000000 		.word	Comm_rxBufferTail
 267 0070 00000000 		.word	Comm_rxBufferHead
 268 0074 00000000 		.word	Comm_rxBufferOverflow
 269 0078 04030640 		.word	1074135812
 270 007c FFFFFEFF 		.word	-65537
 271 0080 C00F0640 		.word	1074139072
 272 0084 ED0F0000 		.word	4077
 273              		.cfi_endproc
 274              	.LFE2:
 275              		.size	Comm_SpiUartClearRxBuffer, .-Comm_SpiUartClearRxBuffer
 276              		.section	.text.Comm_SpiUartWriteTxData,"ax",%progbits
 277              		.align	2
 278              		.global	Comm_SpiUartWriteTxData
 279              		.code	16
 280              		.thumb_func
 281              		.type	Comm_SpiUartWriteTxData, %function
 282              	Comm_SpiUartWriteTxData:
 283              	.LFB3:
 217:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 218:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #endif /* (Comm_RX_DIRECTION) */
 219:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 220:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 221:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_TX_DIRECTION)
 222:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartWriteTxData
 224:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 226:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 227:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 228:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  bus time.
 229:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 230:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  requested data in the transmit buffer.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 10


 231:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 232:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 233:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 234:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 235:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 236:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 237:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 238:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 239:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     void Comm_SpiUartWriteTxData(uint32 txData)
 240:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 284              		.loc 1 240 0
 285              		.cfi_startproc
 286 0000 80B5     		push	{r7, lr}
 287              		.cfi_def_cfa_offset 8
 288              		.cfi_offset 7, -8
 289              		.cfi_offset 14, -4
 290 0002 84B0     		sub	sp, sp, #16
 291              		.cfi_def_cfa_offset 24
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 294 0006 7860     		str	r0, [r7, #4]
 241:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #if (Comm_INTERNAL_TX_SW_BUFFER_CONST)
 242:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 locHead;
 243:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #endif /* (Comm_INTERNAL_TX_SW_BUFFER_CONST) */
 244:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 245:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_CHECK_TX_SW_BUFFER)
 295              		.loc 1 245 0
 296 0008 244B     		ldr	r3, .L29
 297 000a 1B68     		ldr	r3, [r3]
 298 000c 002B     		cmp	r3, #0
 299 000e 38D0     		beq	.L22
 246:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 247:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 248:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             if ((Comm_txBufferHead == Comm_txBufferTail) &&
 300              		.loc 1 248 0
 301 0010 234B     		ldr	r3, .L29+4
 302 0012 1A68     		ldr	r2, [r3]
 303 0014 234B     		ldr	r3, .L29+8
 304 0016 1B68     		ldr	r3, [r3]
 305 0018 9A42     		cmp	r2, r3
 306 001a 09D1     		bne	.L23
 249:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 (Comm_SPI_UART_FIFO_SIZE != Comm_GET_TX_FIFO_ENTRIES))
 307              		.loc 1 249 0 discriminator 1
 308 001c 224B     		ldr	r3, .L29+12
 309 001e 1B68     		ldr	r3, [r3]
 310 0020 0F22     		mov	r2, #15
 311 0022 1340     		and	r3, r2
 248:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 (Comm_SPI_UART_FIFO_SIZE != Comm_GET_TX_FIFO_ENTRIES))
 312              		.loc 1 248 0 discriminator 1
 313 0024 082B     		cmp	r3, #8
 314 0026 03D0     		beq	.L23
 250:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 251:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 252:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 Comm_TX_FIFO_WR_REG = txData;
 315              		.loc 1 252 0
 316 0028 204B     		ldr	r3, .L29+16
 317 002a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 11


 318 002c 1A60     		str	r2, [r3]
 319 002e 32E0     		b	.L21
 320              	.L23:
 253:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 254:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Put data into TX software buffer */
 255:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             else
 256:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 257:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Head index to put data */
 258:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 locHead = (Comm_txBufferHead + 1u);
 321              		.loc 1 258 0
 322 0030 1B4B     		ldr	r3, .L29+4
 323 0032 1B68     		ldr	r3, [r3]
 324 0034 0133     		add	r3, r3, #1
 325 0036 FB60     		str	r3, [r7, #12]
 259:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Adjust TX software buffer index */
 261:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 if (Comm_TX_BUFFER_SIZE == locHead)
 326              		.loc 1 261 0
 327 0038 1D4B     		ldr	r3, .L29+20
 328 003a 1A68     		ldr	r2, [r3]
 329 003c FB68     		ldr	r3, [r7, #12]
 330 003e 9A42     		cmp	r2, r3
 331 0040 01D1     		bne	.L25
 262:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 {
 263:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     locHead = 0u;
 332              		.loc 1 263 0
 333 0042 0023     		mov	r3, #0
 334 0044 FB60     		str	r3, [r7, #12]
 335              	.L25:
 264:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 }
 265:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 266:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 267:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 while (locHead == Comm_txBufferTail)
 336              		.loc 1 267 0
 337 0046 C046     		mov	r8, r8
 338              	.L26:
 339              		.loc 1 267 0 is_stmt 0 discriminator 1
 340 0048 164B     		ldr	r3, .L29+8
 341 004a 1B68     		ldr	r3, [r3]
 342 004c FA68     		ldr	r2, [r7, #12]
 343 004e 9A42     		cmp	r2, r3
 344 0050 FAD0     		beq	.L26
 268:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 {
 269:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 }
 270:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 271:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* TX software buffer has at least one room */
 272:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 273:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 274:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 Comm_ClearTxInterruptSource(Comm_INTR_TX_NOT_FULL);
 345              		.loc 1 274 0 is_stmt 1
 346 0052 184B     		ldr	r3, .L29+24
 347 0054 0222     		mov	r2, #2
 348 0056 1A60     		str	r2, [r3]
 275:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 276:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 Comm_PutWordInTxBuffer(locHead, txData);
 349              		.loc 1 276 0
 350 0058 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 12


 351 005a 7B68     		ldr	r3, [r7, #4]
 352 005c 101C     		mov	r0, r2
 353 005e 191C     		mov	r1, r3
 354 0060 FFF7FEFF 		bl	Comm_PutWordInTxBuffer
 277:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 Comm_txBufferHead = locHead;
 355              		.loc 1 278 0
 356 0064 0E4B     		ldr	r3, .L29+4
 357 0066 FA68     		ldr	r2, [r7, #12]
 358 0068 1A60     		str	r2, [r3]
 279:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 281:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 if (0u == (Comm_INTR_TX_MASK_REG & Comm_INTR_TX_NOT_FULL))
 359              		.loc 1 281 0
 360 006a 134B     		ldr	r3, .L29+28
 361 006c 1B68     		ldr	r3, [r3]
 362 006e 0222     		mov	r2, #2
 363 0070 1340     		and	r3, r2
 364 0072 10D1     		bne	.L21
 282:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 {
 283:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 284:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                     Comm_INTR_TX_MASK_REG |= (uint32) Comm_INTR_TX_NOT_FULL;
 365              		.loc 1 284 0
 366 0074 104B     		ldr	r3, .L29+28
 367 0076 104A     		ldr	r2, .L29+28
 368 0078 1268     		ldr	r2, [r2]
 369 007a 0221     		mov	r1, #2
 370 007c 0A43     		orr	r2, r1
 371 007e 1A60     		str	r2, [r3]
 372 0080 09E0     		b	.L21
 373              	.L22:
 285:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 }
 286:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 287:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 288:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 289:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 290:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 291:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             while (Comm_SPI_UART_FIFO_SIZE == Comm_GET_TX_FIFO_ENTRIES)
 374              		.loc 1 291 0
 375 0082 C046     		mov	r8, r8
 376              	.L28:
 377              		.loc 1 291 0 is_stmt 0 discriminator 1
 378 0084 084B     		ldr	r3, .L29+12
 379 0086 1B68     		ldr	r3, [r3]
 380 0088 0F22     		mov	r2, #15
 381 008a 1340     		and	r3, r2
 382 008c 082B     		cmp	r3, #8
 383 008e F9D0     		beq	.L28
 292:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 293:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 294:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 295:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_TX_FIFO_WR_REG = txData;
 384              		.loc 1 295 0 is_stmt 1
 385 0090 064B     		ldr	r3, .L29+16
 386 0092 7A68     		ldr	r2, [r7, #4]
 387 0094 1A60     		str	r2, [r3]
 388              	.L21:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 13


 296:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 297:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         
 298:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 389              		.loc 1 298 0
 390 0096 BD46     		mov	sp, r7
 391 0098 04B0     		add	sp, sp, #16
 392              		@ sp needed
 393 009a 80BD     		pop	{r7, pc}
 394              	.L30:
 395              		.align	2
 396              	.L29:
 397 009c 00000000 		.word	Comm_txBuffer
 398 00a0 00000000 		.word	Comm_txBufferHead
 399 00a4 00000000 		.word	Comm_txBufferTail
 400 00a8 08020640 		.word	1074135560
 401 00ac 40020640 		.word	1074135616
 402 00b0 00000000 		.word	Comm_txBufferSize
 403 00b4 800F0640 		.word	1074139008
 404 00b8 880F0640 		.word	1074139016
 405              		.cfi_endproc
 406              	.LFE3:
 407              		.size	Comm_SpiUartWriteTxData, .-Comm_SpiUartWriteTxData
 408              		.section	.text.Comm_SpiUartPutArray,"ax",%progbits
 409              		.align	2
 410              		.global	Comm_SpiUartPutArray
 411              		.code	16
 412              		.thumb_func
 413              		.type	Comm_SpiUartPutArray, %function
 414              	Comm_SpiUartPutArray:
 415              	.LFB4:
 299:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 300:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 301:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 302:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartPutArray
 303:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 304:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 305:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 306:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 307:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 308:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 309:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  than transmit buffer size.
 310:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 311:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 312:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 313:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 314:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 315:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 316:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 317:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 318:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 319:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     void Comm_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 320:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 416              		.loc 1 320 0
 417              		.cfi_startproc
 418 0000 80B5     		push	{r7, lr}
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 7, -8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 14


 421              		.cfi_offset 14, -4
 422 0002 84B0     		sub	sp, sp, #16
 423              		.cfi_def_cfa_offset 24
 424 0004 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 426 0006 7860     		str	r0, [r7, #4]
 427 0008 3960     		str	r1, [r7]
 321:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 i;
 322:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 323:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         for (i=0u; i < count; i++)
 428              		.loc 1 323 0
 429 000a 0023     		mov	r3, #0
 430 000c FB60     		str	r3, [r7, #12]
 431 000e 09E0     		b	.L32
 432              	.L33:
 324:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 325:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_SpiUartWriteTxData((uint32) wrBuf[i]);
 433              		.loc 1 325 0 discriminator 3
 434 0010 7A68     		ldr	r2, [r7, #4]
 435 0012 FB68     		ldr	r3, [r7, #12]
 436 0014 D318     		add	r3, r2, r3
 437 0016 1B78     		ldrb	r3, [r3]
 438 0018 181C     		mov	r0, r3
 439 001a FFF7FEFF 		bl	Comm_SpiUartWriteTxData
 323:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 440              		.loc 1 323 0 discriminator 3
 441 001e FB68     		ldr	r3, [r7, #12]
 442 0020 0133     		add	r3, r3, #1
 443 0022 FB60     		str	r3, [r7, #12]
 444              	.L32:
 323:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 445              		.loc 1 323 0 is_stmt 0 discriminator 1
 446 0024 FA68     		ldr	r2, [r7, #12]
 447 0026 3B68     		ldr	r3, [r7]
 448 0028 9A42     		cmp	r2, r3
 449 002a F1D3     		bcc	.L33
 326:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 327:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 450              		.loc 1 327 0 is_stmt 1
 451 002c BD46     		mov	sp, r7
 452 002e 04B0     		add	sp, sp, #16
 453              		@ sp needed
 454 0030 80BD     		pop	{r7, pc}
 455              		.cfi_endproc
 456              	.LFE4:
 457              		.size	Comm_SpiUartPutArray, .-Comm_SpiUartPutArray
 458 0032 C046     		.section	.text.Comm_SpiUartGetTxBufferSize,"ax",%progbits
 459              		.align	2
 460              		.global	Comm_SpiUartGetTxBufferSize
 461              		.code	16
 462              		.thumb_func
 463              		.type	Comm_SpiUartGetTxBufferSize, %function
 464              	Comm_SpiUartGetTxBufferSize:
 465              	.LFB5:
 328:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 329:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 330:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 15


 331:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartGetTxBufferSize
 332:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 334:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 335:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 336:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 337:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *    TX FIFO.
 338:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 339:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 340:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 341:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *    not full.
 342:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 343:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 344:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 345:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 346:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 347:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Number of data elements ready to transmit.
 348:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 349:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 350:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 Comm_SpiUartGetTxBufferSize(void)
 351:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 466              		.loc 1 351 0
 467              		.cfi_startproc
 468 0000 80B5     		push	{r7, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 7, -8
 471              		.cfi_offset 14, -4
 472 0002 82B0     		sub	sp, sp, #8
 473              		.cfi_def_cfa_offset 16
 474 0004 00AF     		add	r7, sp, #0
 475              		.cfi_def_cfa_register 7
 352:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 size;
 353:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #if (Comm_INTERNAL_TX_SW_BUFFER_CONST)
 354:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 locTail;
 355:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     #endif /* (Comm_INTERNAL_TX_SW_BUFFER_CONST) */
 356:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_CHECK_TX_SW_BUFFER)
 476              		.loc 1 357 0
 477 0006 124B     		ldr	r3, .L40
 478 0008 1B68     		ldr	r3, [r3]
 479 000a 002B     		cmp	r3, #0
 480 000c 16D0     		beq	.L35
 358:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 359:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Get current Tail index */
 360:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             locTail = Comm_txBufferTail;
 481              		.loc 1 360 0
 482 000e 114B     		ldr	r3, .L40+4
 483 0010 1B68     		ldr	r3, [r3]
 484 0012 3B60     		str	r3, [r7]
 361:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 362:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             if (Comm_txBufferHead >= locTail)
 485              		.loc 1 362 0
 486 0014 104B     		ldr	r3, .L40+8
 487 0016 1A68     		ldr	r2, [r3]
 488 0018 3B68     		ldr	r3, [r7]
 489 001a 9A42     		cmp	r2, r3
 490 001c 05D3     		bcc	.L36
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 16


 363:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 364:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 size = (Comm_txBufferHead - locTail);
 491              		.loc 1 364 0
 492 001e 0E4B     		ldr	r3, .L40+8
 493 0020 1A68     		ldr	r2, [r3]
 494 0022 3B68     		ldr	r3, [r7]
 495 0024 D31A     		sub	r3, r2, r3
 496 0026 7B60     		str	r3, [r7, #4]
 497 0028 0DE0     		b	.L38
 498              	.L36:
 365:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 366:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             else
 367:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             {
 368:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****                 size = (Comm_txBufferHead + (Comm_TX_BUFFER_SIZE - locTail));
 499              		.loc 1 368 0
 500 002a 0C4B     		ldr	r3, .L40+12
 501 002c 1A68     		ldr	r2, [r3]
 502 002e 3B68     		ldr	r3, [r7]
 503 0030 D21A     		sub	r2, r2, r3
 504 0032 094B     		ldr	r3, .L40+8
 505 0034 1B68     		ldr	r3, [r3]
 506 0036 D318     		add	r3, r2, r3
 507 0038 7B60     		str	r3, [r7, #4]
 508 003a 04E0     		b	.L38
 509              	.L35:
 369:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             }
 370:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 371:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 372:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 373:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             size = Comm_GET_TX_FIFO_ENTRIES;
 510              		.loc 1 373 0
 511 003c 084B     		ldr	r3, .L40+16
 512 003e 1B68     		ldr	r3, [r3]
 513 0040 0F22     		mov	r2, #15
 514 0042 1340     		and	r3, r2
 515 0044 7B60     		str	r3, [r7, #4]
 516              	.L38:
 374:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 375:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         
 376:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 377:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         return (size);
 517              		.loc 1 377 0
 518 0046 7B68     		ldr	r3, [r7, #4]
 378:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 519              		.loc 1 378 0
 520 0048 181C     		mov	r0, r3
 521 004a BD46     		mov	sp, r7
 522 004c 02B0     		add	sp, sp, #8
 523              		@ sp needed
 524 004e 80BD     		pop	{r7, pc}
 525              	.L41:
 526              		.align	2
 527              	.L40:
 528 0050 00000000 		.word	Comm_txBuffer
 529 0054 00000000 		.word	Comm_txBufferTail
 530 0058 00000000 		.word	Comm_txBufferHead
 531 005c 00000000 		.word	Comm_txBufferSize
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 17


 532 0060 08020640 		.word	1074135560
 533              		.cfi_endproc
 534              	.LFE5:
 535              		.size	Comm_SpiUartGetTxBufferSize, .-Comm_SpiUartGetTxBufferSize
 536              		.section	.text.Comm_SpiUartClearTxBuffer,"ax",%progbits
 537              		.align	2
 538              		.global	Comm_SpiUartClearTxBuffer
 539              		.code	16
 540              		.thumb_func
 541              		.type	Comm_SpiUartClearTxBuffer, %function
 542              	Comm_SpiUartClearTxBuffer:
 543              	.LFB6:
 379:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 382:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_SpiUartClearTxBuffer
 383:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 384:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 385:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 386:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 387:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 388:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 389:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 390:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 391:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 392:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 393:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 394:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 395:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     void Comm_SpiUartClearTxBuffer(void)
 396:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 544              		.loc 1 396 0
 545              		.cfi_startproc
 546 0000 80B5     		push	{r7, lr}
 547              		.cfi_def_cfa_offset 8
 548              		.cfi_offset 7, -8
 549              		.cfi_offset 14, -4
 550 0002 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 397:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_CHECK_TX_SW_BUFFER)
 552              		.loc 1 397 0
 553 0004 194B     		ldr	r3, .L45
 554 0006 1B68     		ldr	r3, [r3]
 555 0008 002B     		cmp	r3, #0
 556 000a 20D0     		beq	.L43
 398:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 399:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Lock from component interruption */
 400:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_DisableInt();
 557              		.loc 1 400 0
 558 000c 0A20     		mov	r0, #10
 559 000e FFF7FEFF 		bl	CyIntDisable
 401:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Flush TX software buffer */
 403:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_txBufferHead = Comm_txBufferTail;
 560              		.loc 1 403 0
 561 0012 174B     		ldr	r3, .L45+4
 562 0014 1A68     		ldr	r2, [r3]
 563 0016 174B     		ldr	r3, .L45+8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 18


 564 0018 1A60     		str	r2, [r3]
 404:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_INTR_TX_MASK_REG &= (uint32) ~Comm_INTR_TX_NOT_FULL;
 565              		.loc 1 405 0
 566 001a 174B     		ldr	r3, .L45+12
 567 001c 164A     		ldr	r2, .L45+12
 568 001e 1268     		ldr	r2, [r2]
 569 0020 0221     		mov	r1, #2
 570 0022 8A43     		bic	r2, r1
 571 0024 1A60     		str	r2, [r3]
 406:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_CLEAR_TX_FIFO;
 572              		.loc 1 406 0
 573 0026 154B     		ldr	r3, .L45+16
 574 0028 144A     		ldr	r2, .L45+16
 575 002a 1268     		ldr	r2, [r2]
 576 002c 8021     		mov	r1, #128
 577 002e 4902     		lsl	r1, r1, #9
 578 0030 0A43     		orr	r2, r1
 579 0032 1A60     		str	r2, [r3]
 580 0034 114B     		ldr	r3, .L45+16
 581 0036 114A     		ldr	r2, .L45+16
 582 0038 1268     		ldr	r2, [r2]
 583 003a 1149     		ldr	r1, .L45+20
 584 003c 0A40     		and	r2, r1
 585 003e 1A60     		str	r2, [r3]
 407:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_ClearTxInterruptSource(Comm_INTR_TX_ALL);
 586              		.loc 1 407 0
 587 0040 104B     		ldr	r3, .L45+24
 588 0042 114A     		ldr	r2, .L45+28
 589 0044 1A60     		str	r2, [r3]
 408:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 409:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             /* Release lock */
 410:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_EnableInt();
 590              		.loc 1 410 0
 591 0046 0A20     		mov	r0, #10
 592 0048 FFF7FEFF 		bl	CyIntEnable
 593 004c 0CE0     		b	.L42
 594              	.L43:
 411:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 412:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 413:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 414:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_CLEAR_TX_FIFO;
 595              		.loc 1 414 0
 596 004e 0B4B     		ldr	r3, .L45+16
 597 0050 0A4A     		ldr	r2, .L45+16
 598 0052 1268     		ldr	r2, [r2]
 599 0054 8021     		mov	r1, #128
 600 0056 4902     		lsl	r1, r1, #9
 601 0058 0A43     		orr	r2, r1
 602 005a 1A60     		str	r2, [r3]
 603 005c 074B     		ldr	r3, .L45+16
 604 005e 074A     		ldr	r2, .L45+16
 605 0060 1268     		ldr	r2, [r2]
 606 0062 0749     		ldr	r1, .L45+20
 607 0064 0A40     		and	r2, r1
 608 0066 1A60     		str	r2, [r3]
 609              	.L42:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 19


 415:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 416:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         
 417:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 610              		.loc 1 417 0
 611 0068 BD46     		mov	sp, r7
 612              		@ sp needed
 613 006a 80BD     		pop	{r7, pc}
 614              	.L46:
 615              		.align	2
 616              	.L45:
 617 006c 00000000 		.word	Comm_txBuffer
 618 0070 00000000 		.word	Comm_txBufferTail
 619 0074 00000000 		.word	Comm_txBufferHead
 620 0078 880F0640 		.word	1074139016
 621 007c 04020640 		.word	1074135556
 622 0080 FFFFFEFF 		.word	-65537
 623 0084 800F0640 		.word	1074139008
 624 0088 F3070000 		.word	2035
 625              		.cfi_endproc
 626              	.LFE6:
 627              		.size	Comm_SpiUartClearTxBuffer, .-Comm_SpiUartClearTxBuffer
 628              		.section	.text.Comm_SpiUartDisableIntRx,"ax",%progbits
 629              		.align	2
 630              		.global	Comm_SpiUartDisableIntRx
 631              		.code	16
 632              		.thumb_func
 633              		.type	Comm_SpiUartDisableIntRx, %function
 634              	Comm_SpiUartDisableIntRx:
 635              	.LFB7:
 418:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 419:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #endif /* (Comm_TX_DIRECTION) */
 420:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 421:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 422:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Function Name: Comm_SpiUartDisableIntRx
 424:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 426:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  Disables the RX interrupt sources.
 428:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 429:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  None
 431:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 432:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Return:
 433:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 434:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** uint32 Comm_SpiUartDisableIntRx(void)
 437:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** {
 636              		.loc 1 437 0
 637              		.cfi_startproc
 638 0000 80B5     		push	{r7, lr}
 639              		.cfi_def_cfa_offset 8
 640              		.cfi_offset 7, -8
 641              		.cfi_offset 14, -4
 642 0002 82B0     		sub	sp, sp, #8
 643              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 20


 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 438:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 intSource;
 439:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 440:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     intSource = Comm_GetRxInterruptMode();
 646              		.loc 1 440 0
 647 0006 054B     		ldr	r3, .L49
 648 0008 1B68     		ldr	r3, [r3]
 649 000a 7B60     		str	r3, [r7, #4]
 441:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 442:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     Comm_SetRxInterruptMode(Comm_NO_INTR_SOURCES);
 650              		.loc 1 442 0
 651 000c 034B     		ldr	r3, .L49
 652 000e 0022     		mov	r2, #0
 653 0010 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     return (intSource);
 654              		.loc 1 444 0
 655 0012 7B68     		ldr	r3, [r7, #4]
 445:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** }
 656              		.loc 1 445 0
 657 0014 181C     		mov	r0, r3
 658 0016 BD46     		mov	sp, r7
 659 0018 02B0     		add	sp, sp, #8
 660              		@ sp needed
 661 001a 80BD     		pop	{r7, pc}
 662              	.L50:
 663              		.align	2
 664              	.L49:
 665 001c C80F0640 		.word	1074139080
 666              		.cfi_endproc
 667              	.LFE7:
 668              		.size	Comm_SpiUartDisableIntRx, .-Comm_SpiUartDisableIntRx
 669              		.section	.text.Comm_SpiUartDisableIntTx,"ax",%progbits
 670              		.align	2
 671              		.global	Comm_SpiUartDisableIntTx
 672              		.code	16
 673              		.thumb_func
 674              		.type	Comm_SpiUartDisableIntTx, %function
 675              	Comm_SpiUartDisableIntTx:
 676              	.LFB8:
 446:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 447:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 448:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Function Name: Comm_SpiUartDisableIntTx
 450:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** ********************************************************************************
 451:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 452:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Summary:
 453:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  Disables TX interrupt sources.
 454:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 455:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Parameters:
 456:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  None
 457:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 458:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** * Return:
 459:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 460:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *
 461:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** *******************************************************************************/
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 21


 462:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** uint32 Comm_SpiUartDisableIntTx(void)
 463:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** {
 677              		.loc 1 463 0
 678              		.cfi_startproc
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 82B0     		sub	sp, sp, #8
 684              		.cfi_def_cfa_offset 16
 685 0004 00AF     		add	r7, sp, #0
 686              		.cfi_def_cfa_register 7
 464:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 intSourceMask;
 465:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     intSourceMask = Comm_GetTxInterruptMode();
 687              		.loc 1 466 0
 688 0006 054B     		ldr	r3, .L53
 689 0008 1B68     		ldr	r3, [r3]
 690 000a 7B60     		str	r3, [r7, #4]
 467:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 468:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     Comm_SetTxInterruptMode(Comm_NO_INTR_SOURCES);
 691              		.loc 1 468 0
 692 000c 034B     		ldr	r3, .L53
 693 000e 0022     		mov	r2, #0
 694 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 470:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     return (intSourceMask);
 695              		.loc 1 470 0
 696 0012 7B68     		ldr	r3, [r7, #4]
 471:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** }
 697              		.loc 1 471 0
 698 0014 181C     		mov	r0, r3
 699 0016 BD46     		mov	sp, r7
 700 0018 02B0     		add	sp, sp, #8
 701              		@ sp needed
 702 001a 80BD     		pop	{r7, pc}
 703              	.L54:
 704              		.align	2
 705              	.L53:
 706 001c 880F0640 		.word	1074139016
 707              		.cfi_endproc
 708              	.LFE8:
 709              		.size	Comm_SpiUartDisableIntTx, .-Comm_SpiUartDisableIntTx
 710              		.section	.text.Comm_PutWordInRxBuffer,"ax",%progbits
 711              		.align	2
 712              		.global	Comm_PutWordInRxBuffer
 713              		.code	16
 714              		.thumb_func
 715              		.type	Comm_PutWordInRxBuffer, %function
 716              	Comm_PutWordInRxBuffer:
 717              	.LFB9:
 472:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 473:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 474:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** #if(Comm_SCB_MODE_UNCONFIG_CONST_CFG)
 475:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 476:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_PutWordInRxBuffer
 477:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 22


 478:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 479:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 480:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Stores a byte/word into the RX buffer.
 481:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Only available in the Unconfigured operation mode.
 482:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 483:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 484:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  index:      index to store data byte/word in the RX buffer.
 485:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  rxDataByte: byte/word to store.
 486:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 487:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 488:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 489:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 490:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 491:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     void Comm_PutWordInRxBuffer(uint32 idx, uint32 rxDataByte)
 492:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 718              		.loc 1 492 0
 719              		.cfi_startproc
 720 0000 80B5     		push	{r7, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 82B0     		sub	sp, sp, #8
 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
 729 0008 3960     		str	r1, [r7]
 493:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         /* Put data in buffer */
 494:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_ONE_BYTE_WIDTH == Comm_rxDataBits)
 730              		.loc 1 494 0
 731 000a 114B     		ldr	r3, .L58
 732 000c 1B78     		ldrb	r3, [r3]
 733 000e 082B     		cmp	r3, #8
 734 0010 07D1     		bne	.L56
 495:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 496:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_rxBuffer[idx] = ((uint8) rxDataByte);
 735              		.loc 1 496 0
 736 0012 104B     		ldr	r3, .L58+4
 737 0014 1A68     		ldr	r2, [r3]
 738 0016 7B68     		ldr	r3, [r7, #4]
 739 0018 D318     		add	r3, r2, r3
 740 001a 3A68     		ldr	r2, [r7]
 741 001c D2B2     		uxtb	r2, r2
 742 001e 1A70     		strb	r2, [r3]
 743 0020 13E0     		b	.L55
 744              	.L56:
 497:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 498:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 499:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 500:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_rxBuffer[(uint32)(idx << 1u)]      = LO8(LO16(rxDataByte));
 745              		.loc 1 500 0
 746 0022 0C4B     		ldr	r3, .L58+4
 747 0024 1A68     		ldr	r2, [r3]
 748 0026 7B68     		ldr	r3, [r7, #4]
 749 0028 5B00     		lsl	r3, r3, #1
 750 002a D318     		add	r3, r2, r3
 751 002c 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 23


 752 002e D2B2     		uxtb	r2, r2
 753 0030 1A70     		strb	r2, [r3]
 501:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_rxBuffer[(uint32)(idx << 1u) + 1u] = HI8(LO16(rxDataByte));
 754              		.loc 1 501 0
 755 0032 084B     		ldr	r3, .L58+4
 756 0034 1A68     		ldr	r2, [r3]
 757 0036 7B68     		ldr	r3, [r7, #4]
 758 0038 5B00     		lsl	r3, r3, #1
 759 003a 0133     		add	r3, r3, #1
 760 003c D318     		add	r3, r2, r3
 761 003e 3A68     		ldr	r2, [r7]
 762 0040 92B2     		uxth	r2, r2
 763 0042 120A     		lsr	r2, r2, #8
 764 0044 92B2     		uxth	r2, r2
 765 0046 D2B2     		uxtb	r2, r2
 766 0048 1A70     		strb	r2, [r3]
 767              	.L55:
 502:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 503:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 768              		.loc 1 503 0
 769 004a BD46     		mov	sp, r7
 770 004c 02B0     		add	sp, sp, #8
 771              		@ sp needed
 772 004e 80BD     		pop	{r7, pc}
 773              	.L59:
 774              		.align	2
 775              	.L58:
 776 0050 00000000 		.word	Comm_rxDataBits
 777 0054 00000000 		.word	Comm_rxBuffer
 778              		.cfi_endproc
 779              	.LFE9:
 780              		.size	Comm_PutWordInRxBuffer, .-Comm_PutWordInRxBuffer
 781              		.section	.text.Comm_GetWordFromRxBuffer,"ax",%progbits
 782              		.align	2
 783              		.global	Comm_GetWordFromRxBuffer
 784              		.code	16
 785              		.thumb_func
 786              		.type	Comm_GetWordFromRxBuffer, %function
 787              	Comm_GetWordFromRxBuffer:
 788              	.LFB10:
 504:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 505:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 506:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 507:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_GetWordFromRxBuffer
 508:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 509:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 510:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 511:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Reads byte/word from RX buffer.
 512:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Only available in the Unconfigured operation mode.
 513:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 514:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 515:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 516:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 517:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 518:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Returns byte/word read from RX buffer.
 519:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 520:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 24


 521:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 Comm_GetWordFromRxBuffer(uint32 idx)
 522:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 789              		.loc 1 522 0
 790              		.cfi_startproc
 791 0000 80B5     		push	{r7, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 84B0     		sub	sp, sp, #16
 796              		.cfi_def_cfa_offset 24
 797 0004 00AF     		add	r7, sp, #0
 798              		.cfi_def_cfa_register 7
 799 0006 7860     		str	r0, [r7, #4]
 523:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 value;
 524:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 525:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_ONE_BYTE_WIDTH == Comm_rxDataBits)
 800              		.loc 1 525 0
 801 0008 124B     		ldr	r3, .L64
 802 000a 1B78     		ldrb	r3, [r3]
 803 000c 082B     		cmp	r3, #8
 804 000e 07D1     		bne	.L61
 526:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 527:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             value = Comm_rxBuffer[idx];
 805              		.loc 1 527 0
 806 0010 114B     		ldr	r3, .L64+4
 807 0012 1A68     		ldr	r2, [r3]
 808 0014 7B68     		ldr	r3, [r7, #4]
 809 0016 D318     		add	r3, r2, r3
 810 0018 1B78     		ldrb	r3, [r3]
 811 001a DBB2     		uxtb	r3, r3
 812 001c FB60     		str	r3, [r7, #12]
 813 001e 13E0     		b	.L62
 814              	.L61:
 528:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 529:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 530:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 531:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             value  = (uint32) Comm_rxBuffer[(uint32)(idx << 1u)];
 815              		.loc 1 531 0
 816 0020 0D4B     		ldr	r3, .L64+4
 817 0022 1A68     		ldr	r2, [r3]
 818 0024 7B68     		ldr	r3, [r7, #4]
 819 0026 5B00     		lsl	r3, r3, #1
 820 0028 D318     		add	r3, r2, r3
 821 002a 1B78     		ldrb	r3, [r3]
 822 002c DBB2     		uxtb	r3, r3
 823 002e FB60     		str	r3, [r7, #12]
 532:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             value |= (uint32) ((uint32)Comm_rxBuffer[(uint32)(idx << 1u) + 1u] << 8u);
 824              		.loc 1 532 0
 825 0030 094B     		ldr	r3, .L64+4
 826 0032 1A68     		ldr	r2, [r3]
 827 0034 7B68     		ldr	r3, [r7, #4]
 828 0036 5B00     		lsl	r3, r3, #1
 829 0038 0133     		add	r3, r3, #1
 830 003a D318     		add	r3, r2, r3
 831 003c 1B78     		ldrb	r3, [r3]
 832 003e DBB2     		uxtb	r3, r3
 833 0040 1B02     		lsl	r3, r3, #8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 25


 834 0042 FA68     		ldr	r2, [r7, #12]
 835 0044 1343     		orr	r3, r2
 836 0046 FB60     		str	r3, [r7, #12]
 837              	.L62:
 533:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 534:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 535:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         return (value);
 838              		.loc 1 535 0
 839 0048 FB68     		ldr	r3, [r7, #12]
 536:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 840              		.loc 1 536 0
 841 004a 181C     		mov	r0, r3
 842 004c BD46     		mov	sp, r7
 843 004e 04B0     		add	sp, sp, #16
 844              		@ sp needed
 845 0050 80BD     		pop	{r7, pc}
 846              	.L65:
 847 0052 C046     		.align	2
 848              	.L64:
 849 0054 00000000 		.word	Comm_rxDataBits
 850 0058 00000000 		.word	Comm_rxBuffer
 851              		.cfi_endproc
 852              	.LFE10:
 853              		.size	Comm_GetWordFromRxBuffer, .-Comm_GetWordFromRxBuffer
 854              		.section	.text.Comm_PutWordInTxBuffer,"ax",%progbits
 855              		.align	2
 856              		.global	Comm_PutWordInTxBuffer
 857              		.code	16
 858              		.thumb_func
 859              		.type	Comm_PutWordInTxBuffer, %function
 860              	Comm_PutWordInTxBuffer:
 861              	.LFB11:
 537:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 538:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 539:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 540:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_PutWordInTxBuffer
 541:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 542:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 543:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 544:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Stores byte/word into the TX buffer.
 545:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Only available in the Unconfigured operation mode.
 546:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 547:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 548:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  idx:        index to store data byte/word in the TX buffer.
 549:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  txDataByte: byte/word to store.
 550:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 551:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 552:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  None
 553:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 554:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     void Comm_PutWordInTxBuffer(uint32 idx, uint32 txDataByte)
 556:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 862              		.loc 1 556 0
 863              		.cfi_startproc
 864 0000 80B5     		push	{r7, lr}
 865              		.cfi_def_cfa_offset 8
 866              		.cfi_offset 7, -8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 26


 867              		.cfi_offset 14, -4
 868 0002 82B0     		sub	sp, sp, #8
 869              		.cfi_def_cfa_offset 16
 870 0004 00AF     		add	r7, sp, #0
 871              		.cfi_def_cfa_register 7
 872 0006 7860     		str	r0, [r7, #4]
 873 0008 3960     		str	r1, [r7]
 557:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         /* Put data in buffer */
 558:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_ONE_BYTE_WIDTH == Comm_txDataBits)
 874              		.loc 1 558 0
 875 000a 114B     		ldr	r3, .L69
 876 000c 1B78     		ldrb	r3, [r3]
 877 000e 082B     		cmp	r3, #8
 878 0010 07D1     		bne	.L67
 559:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 560:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_txBuffer[idx] = ((uint8) txDataByte);
 879              		.loc 1 560 0
 880 0012 104B     		ldr	r3, .L69+4
 881 0014 1A68     		ldr	r2, [r3]
 882 0016 7B68     		ldr	r3, [r7, #4]
 883 0018 D318     		add	r3, r2, r3
 884 001a 3A68     		ldr	r2, [r7]
 885 001c D2B2     		uxtb	r2, r2
 886 001e 1A70     		strb	r2, [r3]
 887 0020 13E0     		b	.L66
 888              	.L67:
 561:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 562:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 563:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 564:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_txBuffer[(uint32)(idx << 1u)]      = LO8(LO16(txDataByte));
 889              		.loc 1 564 0
 890 0022 0C4B     		ldr	r3, .L69+4
 891 0024 1A68     		ldr	r2, [r3]
 892 0026 7B68     		ldr	r3, [r7, #4]
 893 0028 5B00     		lsl	r3, r3, #1
 894 002a D318     		add	r3, r2, r3
 895 002c 3A68     		ldr	r2, [r7]
 896 002e D2B2     		uxtb	r2, r2
 897 0030 1A70     		strb	r2, [r3]
 565:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             Comm_txBuffer[(uint32)(idx << 1u) + 1u] = HI8(LO16(txDataByte));
 898              		.loc 1 565 0
 899 0032 084B     		ldr	r3, .L69+4
 900 0034 1A68     		ldr	r2, [r3]
 901 0036 7B68     		ldr	r3, [r7, #4]
 902 0038 5B00     		lsl	r3, r3, #1
 903 003a 0133     		add	r3, r3, #1
 904 003c D318     		add	r3, r2, r3
 905 003e 3A68     		ldr	r2, [r7]
 906 0040 92B2     		uxth	r2, r2
 907 0042 120A     		lsr	r2, r2, #8
 908 0044 92B2     		uxth	r2, r2
 909 0046 D2B2     		uxtb	r2, r2
 910 0048 1A70     		strb	r2, [r3]
 911              	.L66:
 566:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 567:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 912              		.loc 1 567 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 27


 913 004a BD46     		mov	sp, r7
 914 004c 02B0     		add	sp, sp, #8
 915              		@ sp needed
 916 004e 80BD     		pop	{r7, pc}
 917              	.L70:
 918              		.align	2
 919              	.L69:
 920 0050 00000000 		.word	Comm_txDataBits
 921 0054 00000000 		.word	Comm_txBuffer
 922              		.cfi_endproc
 923              	.LFE11:
 924              		.size	Comm_PutWordInTxBuffer, .-Comm_PutWordInTxBuffer
 925              		.section	.text.Comm_GetWordFromTxBuffer,"ax",%progbits
 926              		.align	2
 927              		.global	Comm_GetWordFromTxBuffer
 928              		.code	16
 929              		.thumb_func
 930              		.type	Comm_GetWordFromTxBuffer, %function
 931              	Comm_GetWordFromTxBuffer:
 932              	.LFB12:
 568:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 569:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 570:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     /*******************************************************************************
 571:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Function Name: Comm_GetWordFromTxBuffer
 572:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     ********************************************************************************
 573:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 574:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Summary:
 575:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Reads byte/word from the TX buffer.
 576:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Only available in the Unconfigured operation mode.
 577:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 578:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Parameters:
 579:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  idx: index to get data byte/word from the TX buffer.
 580:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 581:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     * Return:
 582:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *  Returns byte/word read from the TX buffer.
 583:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *
 584:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     *******************************************************************************/
 585:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     uint32 Comm_GetWordFromTxBuffer(uint32 idx)
 586:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     {
 933              		.loc 1 586 0
 934              		.cfi_startproc
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 84B0     		sub	sp, sp, #16
 940              		.cfi_def_cfa_offset 24
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 7860     		str	r0, [r7, #4]
 587:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         uint32 value;
 588:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 589:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         if (Comm_ONE_BYTE_WIDTH == Comm_txDataBits)
 944              		.loc 1 589 0
 945 0008 124B     		ldr	r3, .L75
 946 000a 1B78     		ldrb	r3, [r3]
 947 000c 082B     		cmp	r3, #8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 28


 948 000e 07D1     		bne	.L72
 590:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 591:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             value = (uint32) Comm_txBuffer[idx];
 949              		.loc 1 591 0
 950 0010 114B     		ldr	r3, .L75+4
 951 0012 1A68     		ldr	r2, [r3]
 952 0014 7B68     		ldr	r3, [r7, #4]
 953 0016 D318     		add	r3, r2, r3
 954 0018 1B78     		ldrb	r3, [r3]
 955 001a DBB2     		uxtb	r3, r3
 956 001c FB60     		str	r3, [r7, #12]
 957 001e 13E0     		b	.L73
 958              	.L72:
 592:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 593:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         else
 594:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         {
 595:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             value  = (uint32) Comm_txBuffer[(uint32)(idx << 1u)];
 959              		.loc 1 595 0
 960 0020 0D4B     		ldr	r3, .L75+4
 961 0022 1A68     		ldr	r2, [r3]
 962 0024 7B68     		ldr	r3, [r7, #4]
 963 0026 5B00     		lsl	r3, r3, #1
 964 0028 D318     		add	r3, r2, r3
 965 002a 1B78     		ldrb	r3, [r3]
 966 002c DBB2     		uxtb	r3, r3
 967 002e FB60     		str	r3, [r7, #12]
 596:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****             value |= (uint32) ((uint32) Comm_txBuffer[(uint32)(idx << 1u) + 1u] << 8u);
 968              		.loc 1 596 0
 969 0030 094B     		ldr	r3, .L75+4
 970 0032 1A68     		ldr	r2, [r3]
 971 0034 7B68     		ldr	r3, [r7, #4]
 972 0036 5B00     		lsl	r3, r3, #1
 973 0038 0133     		add	r3, r3, #1
 974 003a D318     		add	r3, r2, r3
 975 003c 1B78     		ldrb	r3, [r3]
 976 003e DBB2     		uxtb	r3, r3
 977 0040 1B02     		lsl	r3, r3, #8
 978 0042 FA68     		ldr	r2, [r7, #12]
 979 0044 1343     		orr	r3, r2
 980 0046 FB60     		str	r3, [r7, #12]
 981              	.L73:
 597:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         }
 598:.\Generated_Source\PSoC4/Comm_SPI_UART.c **** 
 599:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****         return (value);
 982              		.loc 1 599 0
 983 0048 FB68     		ldr	r3, [r7, #12]
 600:.\Generated_Source\PSoC4/Comm_SPI_UART.c ****     }
 984              		.loc 1 600 0
 985 004a 181C     		mov	r0, r3
 986 004c BD46     		mov	sp, r7
 987 004e 04B0     		add	sp, sp, #16
 988              		@ sp needed
 989 0050 80BD     		pop	{r7, pc}
 990              	.L76:
 991 0052 C046     		.align	2
 992              	.L75:
 993 0054 00000000 		.word	Comm_txDataBits
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 29


 994 0058 00000000 		.word	Comm_txBuffer
 995              		.cfi_endproc
 996              	.LFE12:
 997              		.size	Comm_GetWordFromTxBuffer, .-Comm_GetWordFromTxBuffer
 998              		.text
 999              	.Letext0:
 1000              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1001              		.file 3 ".\\Generated_Source\\PSoC4\\Comm_PVT.h"
 1002              		.section	.debug_info,"",%progbits
 1003              	.Ldebug_info0:
 1004 0000 D2030000 		.4byte	0x3d2
 1005 0004 0400     		.2byte	0x4
 1006 0006 00000000 		.4byte	.Ldebug_abbrev0
 1007 000a 04       		.byte	0x4
 1008 000b 01       		.uleb128 0x1
 1009 000c 97010000 		.4byte	.LASF53
 1010 0010 01       		.byte	0x1
 1011 0011 A4030000 		.4byte	.LASF54
 1012 0015 79020000 		.4byte	.LASF55
 1013 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1014 001d 00000000 		.4byte	0
 1015 0021 00000000 		.4byte	.Ldebug_line0
 1016 0025 02       		.uleb128 0x2
 1017 0026 01       		.byte	0x1
 1018 0027 06       		.byte	0x6
 1019 0028 1A040000 		.4byte	.LASF0
 1020 002c 02       		.uleb128 0x2
 1021 002d 01       		.byte	0x1
 1022 002e 08       		.byte	0x8
 1023 002f 6A010000 		.4byte	.LASF1
 1024 0033 02       		.uleb128 0x2
 1025 0034 02       		.byte	0x2
 1026 0035 05       		.byte	0x5
 1027 0036 8D010000 		.4byte	.LASF2
 1028 003a 02       		.uleb128 0x2
 1029 003b 02       		.byte	0x2
 1030 003c 07       		.byte	0x7
 1031 003d 5F000000 		.4byte	.LASF3
 1032 0041 02       		.uleb128 0x2
 1033 0042 04       		.byte	0x4
 1034 0043 05       		.byte	0x5
 1035 0044 E4030000 		.4byte	.LASF4
 1036 0048 02       		.uleb128 0x2
 1037 0049 04       		.byte	0x4
 1038 004a 07       		.byte	0x7
 1039 004b 35010000 		.4byte	.LASF5
 1040 004f 02       		.uleb128 0x2
 1041 0050 08       		.byte	0x8
 1042 0051 05       		.byte	0x5
 1043 0052 00000000 		.4byte	.LASF6
 1044 0056 02       		.uleb128 0x2
 1045 0057 08       		.byte	0x8
 1046 0058 07       		.byte	0x7
 1047 0059 DA020000 		.4byte	.LASF7
 1048 005d 03       		.uleb128 0x3
 1049 005e 04       		.byte	0x4
 1050 005f 05       		.byte	0x5
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 30


 1051 0060 696E7400 		.ascii	"int\000"
 1052 0064 02       		.uleb128 0x2
 1053 0065 04       		.byte	0x4
 1054 0066 07       		.byte	0x7
 1055 0067 72000000 		.4byte	.LASF8
 1056 006b 04       		.uleb128 0x4
 1057 006c 47010000 		.4byte	.LASF9
 1058 0070 02       		.byte	0x2
 1059 0071 3801     		.2byte	0x138
 1060 0073 2C000000 		.4byte	0x2c
 1061 0077 04       		.uleb128 0x4
 1062 0078 25020000 		.4byte	.LASF10
 1063 007c 02       		.byte	0x2
 1064 007d 3901     		.2byte	0x139
 1065 007f 3A000000 		.4byte	0x3a
 1066 0083 04       		.uleb128 0x4
 1067 0084 2C020000 		.4byte	.LASF11
 1068 0088 02       		.byte	0x2
 1069 0089 3A01     		.2byte	0x13a
 1070 008b 48000000 		.4byte	0x48
 1071 008f 02       		.uleb128 0x2
 1072 0090 04       		.byte	0x4
 1073 0091 04       		.byte	0x4
 1074 0092 18010000 		.4byte	.LASF12
 1075 0096 02       		.uleb128 0x2
 1076 0097 08       		.byte	0x8
 1077 0098 04       		.byte	0x4
 1078 0099 78010000 		.4byte	.LASF13
 1079 009d 02       		.uleb128 0x2
 1080 009e 01       		.byte	0x1
 1081 009f 08       		.byte	0x8
 1082 00a0 9F030000 		.4byte	.LASF14
 1083 00a4 05       		.uleb128 0x5
 1084 00a5 6B000000 		.4byte	0x6b
 1085 00a9 04       		.uleb128 0x4
 1086 00aa 19000000 		.4byte	.LASF15
 1087 00ae 02       		.byte	0x2
 1088 00af E401     		.2byte	0x1e4
 1089 00b1 B5000000 		.4byte	0xb5
 1090 00b5 05       		.uleb128 0x5
 1091 00b6 83000000 		.4byte	0x83
 1092 00ba 02       		.uleb128 0x2
 1093 00bb 04       		.byte	0x4
 1094 00bc 07       		.byte	0x7
 1095 00bd 79030000 		.4byte	.LASF16
 1096 00c1 06       		.uleb128 0x6
 1097 00c2 3E030000 		.4byte	.LASF19
 1098 00c6 01       		.byte	0x1
 1099 00c7 45       		.byte	0x45
 1100 00c8 83000000 		.4byte	0x83
 1101 00cc 00000000 		.4byte	.LFB0
 1102 00d0 70000000 		.4byte	.LFE0-.LFB0
 1103 00d4 01       		.uleb128 0x1
 1104 00d5 9C       		.byte	0x9c
 1105 00d6 F7000000 		.4byte	0xf7
 1106 00da 07       		.uleb128 0x7
 1107 00db 4D010000 		.4byte	.LASF17
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 31


 1108 00df 01       		.byte	0x1
 1109 00e0 47       		.byte	0x47
 1110 00e1 83000000 		.4byte	0x83
 1111 00e5 02       		.uleb128 0x2
 1112 00e6 91       		.byte	0x91
 1113 00e7 74       		.sleb128 -12
 1114 00e8 07       		.uleb128 0x7
 1115 00e9 55030000 		.4byte	.LASF18
 1116 00ed 01       		.byte	0x1
 1117 00ee 4A       		.byte	0x4a
 1118 00ef 83000000 		.4byte	0x83
 1119 00f3 02       		.uleb128 0x2
 1120 00f4 91       		.byte	0x91
 1121 00f5 70       		.sleb128 -16
 1122 00f6 00       		.byte	0
 1123 00f7 08       		.uleb128 0x8
 1124 00f8 5D030000 		.4byte	.LASF20
 1125 00fc 01       		.byte	0x1
 1126 00fd 8D       		.byte	0x8d
 1127 00fe 83000000 		.4byte	0x83
 1128 0102 00000000 		.4byte	.LFB1
 1129 0106 68000000 		.4byte	.LFE1-.LFB1
 1130 010a 01       		.uleb128 0x1
 1131 010b 9C       		.byte	0x9c
 1132 010c 2D010000 		.4byte	0x12d
 1133 0110 07       		.uleb128 0x7
 1134 0111 30010000 		.4byte	.LASF21
 1135 0115 01       		.byte	0x1
 1136 0116 8F       		.byte	0x8f
 1137 0117 83000000 		.4byte	0x83
 1138 011b 02       		.uleb128 0x2
 1139 011c 91       		.byte	0x91
 1140 011d 74       		.sleb128 -12
 1141 011e 07       		.uleb128 0x7
 1142 011f E5000000 		.4byte	.LASF22
 1143 0123 01       		.byte	0x1
 1144 0124 91       		.byte	0x91
 1145 0125 83000000 		.4byte	0x83
 1146 0129 02       		.uleb128 0x2
 1147 012a 91       		.byte	0x91
 1148 012b 70       		.sleb128 -16
 1149 012c 00       		.byte	0
 1150 012d 09       		.uleb128 0x9
 1151 012e B2000000 		.4byte	.LASF29
 1152 0132 01       		.byte	0x1
 1153 0133 B9       		.byte	0xb9
 1154 0134 00000000 		.4byte	.LFB2
 1155 0138 88000000 		.4byte	.LFE2-.LFB2
 1156 013c 01       		.uleb128 0x1
 1157 013d 9C       		.byte	0x9c
 1158 013e 0A       		.uleb128 0xa
 1159 013f 03030000 		.4byte	.LASF23
 1160 0143 01       		.byte	0x1
 1161 0144 EF       		.byte	0xef
 1162 0145 00000000 		.4byte	.LFB3
 1163 0149 BC000000 		.4byte	.LFE3-.LFB3
 1164 014d 01       		.uleb128 0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 32


 1165 014e 9C       		.byte	0x9c
 1166 014f 70010000 		.4byte	0x170
 1167 0153 0B       		.uleb128 0xb
 1168 0154 37030000 		.4byte	.LASF25
 1169 0158 01       		.byte	0x1
 1170 0159 EF       		.byte	0xef
 1171 015a 83000000 		.4byte	0x83
 1172 015e 02       		.uleb128 0x2
 1173 015f 91       		.byte	0x91
 1174 0160 6C       		.sleb128 -20
 1175 0161 07       		.uleb128 0x7
 1176 0162 E5000000 		.4byte	.LASF22
 1177 0166 01       		.byte	0x1
 1178 0167 F2       		.byte	0xf2
 1179 0168 83000000 		.4byte	0x83
 1180 016c 02       		.uleb128 0x2
 1181 016d 91       		.byte	0x91
 1182 016e 74       		.sleb128 -12
 1183 016f 00       		.byte	0
 1184 0170 0C       		.uleb128 0xc
 1185 0171 64020000 		.4byte	.LASF24
 1186 0175 01       		.byte	0x1
 1187 0176 3F01     		.2byte	0x13f
 1188 0178 00000000 		.4byte	.LFB4
 1189 017c 32000000 		.4byte	.LFE4-.LFB4
 1190 0180 01       		.uleb128 0x1
 1191 0181 9C       		.byte	0x9c
 1192 0182 B2010000 		.4byte	0x1b2
 1193 0186 0D       		.uleb128 0xd
 1194 0187 54010000 		.4byte	.LASF26
 1195 018b 01       		.byte	0x1
 1196 018c 3F01     		.2byte	0x13f
 1197 018e B2010000 		.4byte	0x1b2
 1198 0192 02       		.uleb128 0x2
 1199 0193 91       		.byte	0x91
 1200 0194 6C       		.sleb128 -20
 1201 0195 0D       		.uleb128 0xd
 1202 0196 37000000 		.4byte	.LASF27
 1203 019a 01       		.byte	0x1
 1204 019b 3F01     		.2byte	0x13f
 1205 019d 83000000 		.4byte	0x83
 1206 01a1 02       		.uleb128 0x2
 1207 01a2 91       		.byte	0x91
 1208 01a3 68       		.sleb128 -24
 1209 01a4 0E       		.uleb128 0xe
 1210 01a5 6900     		.ascii	"i\000"
 1211 01a7 01       		.byte	0x1
 1212 01a8 4101     		.2byte	0x141
 1213 01aa 83000000 		.4byte	0x83
 1214 01ae 02       		.uleb128 0x2
 1215 01af 91       		.byte	0x91
 1216 01b0 74       		.sleb128 -12
 1217 01b1 00       		.byte	0
 1218 01b2 0F       		.uleb128 0xf
 1219 01b3 04       		.byte	0x4
 1220 01b4 B8010000 		.4byte	0x1b8
 1221 01b8 10       		.uleb128 0x10
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 33


 1222 01b9 6B000000 		.4byte	0x6b
 1223 01bd 11       		.uleb128 0x11
 1224 01be 1B030000 		.4byte	.LASF28
 1225 01c2 01       		.byte	0x1
 1226 01c3 5E01     		.2byte	0x15e
 1227 01c5 83000000 		.4byte	0x83
 1228 01c9 00000000 		.4byte	.LFB5
 1229 01cd 64000000 		.4byte	.LFE5-.LFB5
 1230 01d1 01       		.uleb128 0x1
 1231 01d2 9C       		.byte	0x9c
 1232 01d3 F6010000 		.4byte	0x1f6
 1233 01d7 12       		.uleb128 0x12
 1234 01d8 30010000 		.4byte	.LASF21
 1235 01dc 01       		.byte	0x1
 1236 01dd 6001     		.2byte	0x160
 1237 01df 83000000 		.4byte	0x83
 1238 01e3 02       		.uleb128 0x2
 1239 01e4 91       		.byte	0x91
 1240 01e5 74       		.sleb128 -12
 1241 01e6 12       		.uleb128 0x12
 1242 01e7 55030000 		.4byte	.LASF18
 1243 01eb 01       		.byte	0x1
 1244 01ec 6201     		.2byte	0x162
 1245 01ee 83000000 		.4byte	0x83
 1246 01f2 02       		.uleb128 0x2
 1247 01f3 91       		.byte	0x91
 1248 01f4 70       		.sleb128 -16
 1249 01f5 00       		.byte	0
 1250 01f6 13       		.uleb128 0x13
 1251 01f7 7F000000 		.4byte	.LASF30
 1252 01fb 01       		.byte	0x1
 1253 01fc 8B01     		.2byte	0x18b
 1254 01fe 00000000 		.4byte	.LFB6
 1255 0202 8C000000 		.4byte	.LFE6-.LFB6
 1256 0206 01       		.uleb128 0x1
 1257 0207 9C       		.byte	0x9c
 1258 0208 11       		.uleb128 0x11
 1259 0209 99000000 		.4byte	.LASF31
 1260 020d 01       		.byte	0x1
 1261 020e B401     		.2byte	0x1b4
 1262 0210 83000000 		.4byte	0x83
 1263 0214 00000000 		.4byte	.LFB7
 1264 0218 20000000 		.4byte	.LFE7-.LFB7
 1265 021c 01       		.uleb128 0x1
 1266 021d 9C       		.byte	0x9c
 1267 021e 32020000 		.4byte	0x232
 1268 0222 12       		.uleb128 0x12
 1269 0223 5A020000 		.4byte	.LASF32
 1270 0227 01       		.byte	0x1
 1271 0228 B601     		.2byte	0x1b6
 1272 022a 83000000 		.4byte	0x83
 1273 022e 02       		.uleb128 0x2
 1274 022f 91       		.byte	0x91
 1275 0230 74       		.sleb128 -12
 1276 0231 00       		.byte	0
 1277 0232 11       		.uleb128 0x11
 1278 0233 ED000000 		.4byte	.LASF33
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 34


 1279 0237 01       		.byte	0x1
 1280 0238 CE01     		.2byte	0x1ce
 1281 023a 83000000 		.4byte	0x83
 1282 023e 00000000 		.4byte	.LFB8
 1283 0242 20000000 		.4byte	.LFE8-.LFB8
 1284 0246 01       		.uleb128 0x1
 1285 0247 9C       		.byte	0x9c
 1286 0248 5C020000 		.4byte	0x25c
 1287 024c 12       		.uleb128 0x12
 1288 024d 4C020000 		.4byte	.LASF34
 1289 0251 01       		.byte	0x1
 1290 0252 D001     		.2byte	0x1d0
 1291 0254 83000000 		.4byte	0x83
 1292 0258 02       		.uleb128 0x2
 1293 0259 91       		.byte	0x91
 1294 025a 74       		.sleb128 -12
 1295 025b 00       		.byte	0
 1296 025c 14       		.uleb128 0x14
 1297 025d CD030000 		.4byte	.LASF35
 1298 0261 01       		.byte	0x1
 1299 0262 EB01     		.2byte	0x1eb
 1300 0264 00000000 		.4byte	.LFB9
 1301 0268 58000000 		.4byte	.LFE9-.LFB9
 1302 026c 01       		.uleb128 0x1
 1303 026d 9C       		.byte	0x9c
 1304 026e 91020000 		.4byte	0x291
 1305 0272 15       		.uleb128 0x15
 1306 0273 69647800 		.ascii	"idx\000"
 1307 0277 01       		.byte	0x1
 1308 0278 EB01     		.2byte	0x1eb
 1309 027a 83000000 		.4byte	0x83
 1310 027e 02       		.uleb128 0x2
 1311 027f 91       		.byte	0x91
 1312 0280 74       		.sleb128 -12
 1313 0281 0D       		.uleb128 0xd
 1314 0282 0E000000 		.4byte	.LASF36
 1315 0286 01       		.byte	0x1
 1316 0287 EB01     		.2byte	0x1eb
 1317 0289 83000000 		.4byte	0x83
 1318 028d 02       		.uleb128 0x2
 1319 028e 91       		.byte	0x91
 1320 028f 70       		.sleb128 -16
 1321 0290 00       		.byte	0
 1322 0291 11       		.uleb128 0x11
 1323 0292 33020000 		.4byte	.LASF37
 1324 0296 01       		.byte	0x1
 1325 0297 0902     		.2byte	0x209
 1326 0299 83000000 		.4byte	0x83
 1327 029d 00000000 		.4byte	.LFB10
 1328 02a1 5C000000 		.4byte	.LFE10-.LFB10
 1329 02a5 01       		.uleb128 0x1
 1330 02a6 9C       		.byte	0x9c
 1331 02a7 CA020000 		.4byte	0x2ca
 1332 02ab 15       		.uleb128 0x15
 1333 02ac 69647800 		.ascii	"idx\000"
 1334 02b0 01       		.byte	0x1
 1335 02b1 0902     		.2byte	0x209
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 35


 1336 02b3 83000000 		.4byte	0x83
 1337 02b7 02       		.uleb128 0x2
 1338 02b8 91       		.byte	0x91
 1339 02b9 6C       		.sleb128 -20
 1340 02ba 12       		.uleb128 0x12
 1341 02bb 31000000 		.4byte	.LASF38
 1342 02bf 01       		.byte	0x1
 1343 02c0 0B02     		.2byte	0x20b
 1344 02c2 83000000 		.4byte	0x83
 1345 02c6 02       		.uleb128 0x2
 1346 02c7 91       		.byte	0x91
 1347 02c8 74       		.sleb128 -12
 1348 02c9 00       		.byte	0
 1349 02ca 14       		.uleb128 0x14
 1350 02cb ED030000 		.4byte	.LASF39
 1351 02cf 01       		.byte	0x1
 1352 02d0 2B02     		.2byte	0x22b
 1353 02d2 00000000 		.4byte	.LFB11
 1354 02d6 58000000 		.4byte	.LFE11-.LFB11
 1355 02da 01       		.uleb128 0x1
 1356 02db 9C       		.byte	0x9c
 1357 02dc FF020000 		.4byte	0x2ff
 1358 02e0 15       		.uleb128 0x15
 1359 02e1 69647800 		.ascii	"idx\000"
 1360 02e5 01       		.byte	0x1
 1361 02e6 2B02     		.2byte	0x22b
 1362 02e8 83000000 		.4byte	0x83
 1363 02ec 02       		.uleb128 0x2
 1364 02ed 91       		.byte	0x91
 1365 02ee 74       		.sleb128 -12
 1366 02ef 0D       		.uleb128 0xd
 1367 02f0 82030000 		.4byte	.LASF40
 1368 02f4 01       		.byte	0x1
 1369 02f5 2B02     		.2byte	0x22b
 1370 02f7 83000000 		.4byte	0x83
 1371 02fb 02       		.uleb128 0x2
 1372 02fc 91       		.byte	0x91
 1373 02fd 70       		.sleb128 -16
 1374 02fe 00       		.byte	0
 1375 02ff 11       		.uleb128 0x11
 1376 0300 CC000000 		.4byte	.LASF41
 1377 0304 01       		.byte	0x1
 1378 0305 4902     		.2byte	0x249
 1379 0307 83000000 		.4byte	0x83
 1380 030b 00000000 		.4byte	.LFB12
 1381 030f 5C000000 		.4byte	.LFE12-.LFB12
 1382 0313 01       		.uleb128 0x1
 1383 0314 9C       		.byte	0x9c
 1384 0315 38030000 		.4byte	0x338
 1385 0319 15       		.uleb128 0x15
 1386 031a 69647800 		.ascii	"idx\000"
 1387 031e 01       		.byte	0x1
 1388 031f 4902     		.2byte	0x249
 1389 0321 83000000 		.4byte	0x83
 1390 0325 02       		.uleb128 0x2
 1391 0326 91       		.byte	0x91
 1392 0327 6C       		.sleb128 -20
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 36


 1393 0328 12       		.uleb128 0x12
 1394 0329 31000000 		.4byte	.LASF38
 1395 032d 01       		.byte	0x1
 1396 032e 4B02     		.2byte	0x24b
 1397 0330 83000000 		.4byte	0x83
 1398 0334 02       		.uleb128 0x2
 1399 0335 91       		.byte	0x91
 1400 0336 74       		.sleb128 -12
 1401 0337 00       		.byte	0
 1402 0338 16       		.uleb128 0x16
 1403 0339 26040000 		.4byte	.LASF42
 1404 033d 03       		.byte	0x3
 1405 033e 4B       		.byte	0x4b
 1406 033f 43030000 		.4byte	0x343
 1407 0343 0F       		.uleb128 0xf
 1408 0344 04       		.byte	0x4
 1409 0345 A4000000 		.4byte	0xa4
 1410 0349 16       		.uleb128 0x16
 1411 034a 5A010000 		.4byte	.LASF43
 1412 034e 03       		.byte	0x3
 1413 034f 4C       		.byte	0x4c
 1414 0350 6B000000 		.4byte	0x6b
 1415 0354 16       		.uleb128 0x16
 1416 0355 F1020000 		.4byte	.LASF44
 1417 0359 03       		.byte	0x3
 1418 035a 4D       		.byte	0x4d
 1419 035b 83000000 		.4byte	0x83
 1420 035f 16       		.uleb128 0x16
 1421 0360 7F010000 		.4byte	.LASF45
 1422 0364 03       		.byte	0x3
 1423 0365 4F       		.byte	0x4f
 1424 0366 43030000 		.4byte	0x343
 1425 036a 16       		.uleb128 0x16
 1426 036b 4F000000 		.4byte	.LASF46
 1427 036f 03       		.byte	0x3
 1428 0370 50       		.byte	0x50
 1429 0371 6B000000 		.4byte	0x6b
 1430 0375 16       		.uleb128 0x16
 1431 0376 1F000000 		.4byte	.LASF47
 1432 037a 03       		.byte	0x3
 1433 037b 51       		.byte	0x51
 1434 037c 83000000 		.4byte	0x83
 1435 0380 17       		.uleb128 0x17
 1436 0381 1E010000 		.4byte	.LASF48
 1437 0385 01       		.byte	0x1
 1438 0386 1A       		.byte	0x1a
 1439 0387 B5000000 		.4byte	0xb5
 1440 038b 05       		.uleb128 0x5
 1441 038c 03       		.byte	0x3
 1442 038d 00000000 		.4byte	Comm_rxBufferHead
 1443 0391 17       		.uleb128 0x17
 1444 0392 8D030000 		.4byte	.LASF49
 1445 0396 01       		.byte	0x1
 1446 0397 1B       		.byte	0x1b
 1447 0398 B5000000 		.4byte	0xb5
 1448 039c 05       		.uleb128 0x5
 1449 039d 03       		.byte	0x3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 37


 1450 039e 00000000 		.4byte	Comm_rxBufferTail
 1451 03a2 17       		.uleb128 0x17
 1452 03a3 04040000 		.4byte	.LASF50
 1453 03a7 01       		.byte	0x1
 1454 03a8 1C       		.byte	0x1c
 1455 03a9 A4000000 		.4byte	0xa4
 1456 03ad 05       		.uleb128 0x5
 1457 03ae 03       		.byte	0x3
 1458 03af 00000000 		.4byte	Comm_rxBufferOverflow
 1459 03b3 17       		.uleb128 0x17
 1460 03b4 3D000000 		.4byte	.LASF51
 1461 03b8 01       		.byte	0x1
 1462 03b9 20       		.byte	0x20
 1463 03ba B5000000 		.4byte	0xb5
 1464 03be 05       		.uleb128 0x5
 1465 03bf 03       		.byte	0x3
 1466 03c0 00000000 		.4byte	Comm_txBufferHead
 1467 03c4 17       		.uleb128 0x17
 1468 03c5 06010000 		.4byte	.LASF52
 1469 03c9 01       		.byte	0x1
 1470 03ca 21       		.byte	0x21
 1471 03cb B5000000 		.4byte	0xb5
 1472 03cf 05       		.uleb128 0x5
 1473 03d0 03       		.byte	0x3
 1474 03d1 00000000 		.4byte	Comm_txBufferTail
 1475 03d5 00       		.byte	0
 1476              		.section	.debug_abbrev,"",%progbits
 1477              	.Ldebug_abbrev0:
 1478 0000 01       		.uleb128 0x1
 1479 0001 11       		.uleb128 0x11
 1480 0002 01       		.byte	0x1
 1481 0003 25       		.uleb128 0x25
 1482 0004 0E       		.uleb128 0xe
 1483 0005 13       		.uleb128 0x13
 1484 0006 0B       		.uleb128 0xb
 1485 0007 03       		.uleb128 0x3
 1486 0008 0E       		.uleb128 0xe
 1487 0009 1B       		.uleb128 0x1b
 1488 000a 0E       		.uleb128 0xe
 1489 000b 55       		.uleb128 0x55
 1490 000c 17       		.uleb128 0x17
 1491 000d 11       		.uleb128 0x11
 1492 000e 01       		.uleb128 0x1
 1493 000f 10       		.uleb128 0x10
 1494 0010 17       		.uleb128 0x17
 1495 0011 00       		.byte	0
 1496 0012 00       		.byte	0
 1497 0013 02       		.uleb128 0x2
 1498 0014 24       		.uleb128 0x24
 1499 0015 00       		.byte	0
 1500 0016 0B       		.uleb128 0xb
 1501 0017 0B       		.uleb128 0xb
 1502 0018 3E       		.uleb128 0x3e
 1503 0019 0B       		.uleb128 0xb
 1504 001a 03       		.uleb128 0x3
 1505 001b 0E       		.uleb128 0xe
 1506 001c 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 38


 1507 001d 00       		.byte	0
 1508 001e 03       		.uleb128 0x3
 1509 001f 24       		.uleb128 0x24
 1510 0020 00       		.byte	0
 1511 0021 0B       		.uleb128 0xb
 1512 0022 0B       		.uleb128 0xb
 1513 0023 3E       		.uleb128 0x3e
 1514 0024 0B       		.uleb128 0xb
 1515 0025 03       		.uleb128 0x3
 1516 0026 08       		.uleb128 0x8
 1517 0027 00       		.byte	0
 1518 0028 00       		.byte	0
 1519 0029 04       		.uleb128 0x4
 1520 002a 16       		.uleb128 0x16
 1521 002b 00       		.byte	0
 1522 002c 03       		.uleb128 0x3
 1523 002d 0E       		.uleb128 0xe
 1524 002e 3A       		.uleb128 0x3a
 1525 002f 0B       		.uleb128 0xb
 1526 0030 3B       		.uleb128 0x3b
 1527 0031 05       		.uleb128 0x5
 1528 0032 49       		.uleb128 0x49
 1529 0033 13       		.uleb128 0x13
 1530 0034 00       		.byte	0
 1531 0035 00       		.byte	0
 1532 0036 05       		.uleb128 0x5
 1533 0037 35       		.uleb128 0x35
 1534 0038 00       		.byte	0
 1535 0039 49       		.uleb128 0x49
 1536 003a 13       		.uleb128 0x13
 1537 003b 00       		.byte	0
 1538 003c 00       		.byte	0
 1539 003d 06       		.uleb128 0x6
 1540 003e 2E       		.uleb128 0x2e
 1541 003f 01       		.byte	0x1
 1542 0040 3F       		.uleb128 0x3f
 1543 0041 19       		.uleb128 0x19
 1544 0042 03       		.uleb128 0x3
 1545 0043 0E       		.uleb128 0xe
 1546 0044 3A       		.uleb128 0x3a
 1547 0045 0B       		.uleb128 0xb
 1548 0046 3B       		.uleb128 0x3b
 1549 0047 0B       		.uleb128 0xb
 1550 0048 27       		.uleb128 0x27
 1551 0049 19       		.uleb128 0x19
 1552 004a 49       		.uleb128 0x49
 1553 004b 13       		.uleb128 0x13
 1554 004c 11       		.uleb128 0x11
 1555 004d 01       		.uleb128 0x1
 1556 004e 12       		.uleb128 0x12
 1557 004f 06       		.uleb128 0x6
 1558 0050 40       		.uleb128 0x40
 1559 0051 18       		.uleb128 0x18
 1560 0052 9642     		.uleb128 0x2116
 1561 0054 19       		.uleb128 0x19
 1562 0055 01       		.uleb128 0x1
 1563 0056 13       		.uleb128 0x13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 39


 1564 0057 00       		.byte	0
 1565 0058 00       		.byte	0
 1566 0059 07       		.uleb128 0x7
 1567 005a 34       		.uleb128 0x34
 1568 005b 00       		.byte	0
 1569 005c 03       		.uleb128 0x3
 1570 005d 0E       		.uleb128 0xe
 1571 005e 3A       		.uleb128 0x3a
 1572 005f 0B       		.uleb128 0xb
 1573 0060 3B       		.uleb128 0x3b
 1574 0061 0B       		.uleb128 0xb
 1575 0062 49       		.uleb128 0x49
 1576 0063 13       		.uleb128 0x13
 1577 0064 02       		.uleb128 0x2
 1578 0065 18       		.uleb128 0x18
 1579 0066 00       		.byte	0
 1580 0067 00       		.byte	0
 1581 0068 08       		.uleb128 0x8
 1582 0069 2E       		.uleb128 0x2e
 1583 006a 01       		.byte	0x1
 1584 006b 3F       		.uleb128 0x3f
 1585 006c 19       		.uleb128 0x19
 1586 006d 03       		.uleb128 0x3
 1587 006e 0E       		.uleb128 0xe
 1588 006f 3A       		.uleb128 0x3a
 1589 0070 0B       		.uleb128 0xb
 1590 0071 3B       		.uleb128 0x3b
 1591 0072 0B       		.uleb128 0xb
 1592 0073 27       		.uleb128 0x27
 1593 0074 19       		.uleb128 0x19
 1594 0075 49       		.uleb128 0x49
 1595 0076 13       		.uleb128 0x13
 1596 0077 11       		.uleb128 0x11
 1597 0078 01       		.uleb128 0x1
 1598 0079 12       		.uleb128 0x12
 1599 007a 06       		.uleb128 0x6
 1600 007b 40       		.uleb128 0x40
 1601 007c 18       		.uleb128 0x18
 1602 007d 9742     		.uleb128 0x2117
 1603 007f 19       		.uleb128 0x19
 1604 0080 01       		.uleb128 0x1
 1605 0081 13       		.uleb128 0x13
 1606 0082 00       		.byte	0
 1607 0083 00       		.byte	0
 1608 0084 09       		.uleb128 0x9
 1609 0085 2E       		.uleb128 0x2e
 1610 0086 00       		.byte	0
 1611 0087 3F       		.uleb128 0x3f
 1612 0088 19       		.uleb128 0x19
 1613 0089 03       		.uleb128 0x3
 1614 008a 0E       		.uleb128 0xe
 1615 008b 3A       		.uleb128 0x3a
 1616 008c 0B       		.uleb128 0xb
 1617 008d 3B       		.uleb128 0x3b
 1618 008e 0B       		.uleb128 0xb
 1619 008f 27       		.uleb128 0x27
 1620 0090 19       		.uleb128 0x19
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 40


 1621 0091 11       		.uleb128 0x11
 1622 0092 01       		.uleb128 0x1
 1623 0093 12       		.uleb128 0x12
 1624 0094 06       		.uleb128 0x6
 1625 0095 40       		.uleb128 0x40
 1626 0096 18       		.uleb128 0x18
 1627 0097 9642     		.uleb128 0x2116
 1628 0099 19       		.uleb128 0x19
 1629 009a 00       		.byte	0
 1630 009b 00       		.byte	0
 1631 009c 0A       		.uleb128 0xa
 1632 009d 2E       		.uleb128 0x2e
 1633 009e 01       		.byte	0x1
 1634 009f 3F       		.uleb128 0x3f
 1635 00a0 19       		.uleb128 0x19
 1636 00a1 03       		.uleb128 0x3
 1637 00a2 0E       		.uleb128 0xe
 1638 00a3 3A       		.uleb128 0x3a
 1639 00a4 0B       		.uleb128 0xb
 1640 00a5 3B       		.uleb128 0x3b
 1641 00a6 0B       		.uleb128 0xb
 1642 00a7 27       		.uleb128 0x27
 1643 00a8 19       		.uleb128 0x19
 1644 00a9 11       		.uleb128 0x11
 1645 00aa 01       		.uleb128 0x1
 1646 00ab 12       		.uleb128 0x12
 1647 00ac 06       		.uleb128 0x6
 1648 00ad 40       		.uleb128 0x40
 1649 00ae 18       		.uleb128 0x18
 1650 00af 9642     		.uleb128 0x2116
 1651 00b1 19       		.uleb128 0x19
 1652 00b2 01       		.uleb128 0x1
 1653 00b3 13       		.uleb128 0x13
 1654 00b4 00       		.byte	0
 1655 00b5 00       		.byte	0
 1656 00b6 0B       		.uleb128 0xb
 1657 00b7 05       		.uleb128 0x5
 1658 00b8 00       		.byte	0
 1659 00b9 03       		.uleb128 0x3
 1660 00ba 0E       		.uleb128 0xe
 1661 00bb 3A       		.uleb128 0x3a
 1662 00bc 0B       		.uleb128 0xb
 1663 00bd 3B       		.uleb128 0x3b
 1664 00be 0B       		.uleb128 0xb
 1665 00bf 49       		.uleb128 0x49
 1666 00c0 13       		.uleb128 0x13
 1667 00c1 02       		.uleb128 0x2
 1668 00c2 18       		.uleb128 0x18
 1669 00c3 00       		.byte	0
 1670 00c4 00       		.byte	0
 1671 00c5 0C       		.uleb128 0xc
 1672 00c6 2E       		.uleb128 0x2e
 1673 00c7 01       		.byte	0x1
 1674 00c8 3F       		.uleb128 0x3f
 1675 00c9 19       		.uleb128 0x19
 1676 00ca 03       		.uleb128 0x3
 1677 00cb 0E       		.uleb128 0xe
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 41


 1678 00cc 3A       		.uleb128 0x3a
 1679 00cd 0B       		.uleb128 0xb
 1680 00ce 3B       		.uleb128 0x3b
 1681 00cf 05       		.uleb128 0x5
 1682 00d0 27       		.uleb128 0x27
 1683 00d1 19       		.uleb128 0x19
 1684 00d2 11       		.uleb128 0x11
 1685 00d3 01       		.uleb128 0x1
 1686 00d4 12       		.uleb128 0x12
 1687 00d5 06       		.uleb128 0x6
 1688 00d6 40       		.uleb128 0x40
 1689 00d7 18       		.uleb128 0x18
 1690 00d8 9642     		.uleb128 0x2116
 1691 00da 19       		.uleb128 0x19
 1692 00db 01       		.uleb128 0x1
 1693 00dc 13       		.uleb128 0x13
 1694 00dd 00       		.byte	0
 1695 00de 00       		.byte	0
 1696 00df 0D       		.uleb128 0xd
 1697 00e0 05       		.uleb128 0x5
 1698 00e1 00       		.byte	0
 1699 00e2 03       		.uleb128 0x3
 1700 00e3 0E       		.uleb128 0xe
 1701 00e4 3A       		.uleb128 0x3a
 1702 00e5 0B       		.uleb128 0xb
 1703 00e6 3B       		.uleb128 0x3b
 1704 00e7 05       		.uleb128 0x5
 1705 00e8 49       		.uleb128 0x49
 1706 00e9 13       		.uleb128 0x13
 1707 00ea 02       		.uleb128 0x2
 1708 00eb 18       		.uleb128 0x18
 1709 00ec 00       		.byte	0
 1710 00ed 00       		.byte	0
 1711 00ee 0E       		.uleb128 0xe
 1712 00ef 34       		.uleb128 0x34
 1713 00f0 00       		.byte	0
 1714 00f1 03       		.uleb128 0x3
 1715 00f2 08       		.uleb128 0x8
 1716 00f3 3A       		.uleb128 0x3a
 1717 00f4 0B       		.uleb128 0xb
 1718 00f5 3B       		.uleb128 0x3b
 1719 00f6 05       		.uleb128 0x5
 1720 00f7 49       		.uleb128 0x49
 1721 00f8 13       		.uleb128 0x13
 1722 00f9 02       		.uleb128 0x2
 1723 00fa 18       		.uleb128 0x18
 1724 00fb 00       		.byte	0
 1725 00fc 00       		.byte	0
 1726 00fd 0F       		.uleb128 0xf
 1727 00fe 0F       		.uleb128 0xf
 1728 00ff 00       		.byte	0
 1729 0100 0B       		.uleb128 0xb
 1730 0101 0B       		.uleb128 0xb
 1731 0102 49       		.uleb128 0x49
 1732 0103 13       		.uleb128 0x13
 1733 0104 00       		.byte	0
 1734 0105 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 42


 1735 0106 10       		.uleb128 0x10
 1736 0107 26       		.uleb128 0x26
 1737 0108 00       		.byte	0
 1738 0109 49       		.uleb128 0x49
 1739 010a 13       		.uleb128 0x13
 1740 010b 00       		.byte	0
 1741 010c 00       		.byte	0
 1742 010d 11       		.uleb128 0x11
 1743 010e 2E       		.uleb128 0x2e
 1744 010f 01       		.byte	0x1
 1745 0110 3F       		.uleb128 0x3f
 1746 0111 19       		.uleb128 0x19
 1747 0112 03       		.uleb128 0x3
 1748 0113 0E       		.uleb128 0xe
 1749 0114 3A       		.uleb128 0x3a
 1750 0115 0B       		.uleb128 0xb
 1751 0116 3B       		.uleb128 0x3b
 1752 0117 05       		.uleb128 0x5
 1753 0118 27       		.uleb128 0x27
 1754 0119 19       		.uleb128 0x19
 1755 011a 49       		.uleb128 0x49
 1756 011b 13       		.uleb128 0x13
 1757 011c 11       		.uleb128 0x11
 1758 011d 01       		.uleb128 0x1
 1759 011e 12       		.uleb128 0x12
 1760 011f 06       		.uleb128 0x6
 1761 0120 40       		.uleb128 0x40
 1762 0121 18       		.uleb128 0x18
 1763 0122 9742     		.uleb128 0x2117
 1764 0124 19       		.uleb128 0x19
 1765 0125 01       		.uleb128 0x1
 1766 0126 13       		.uleb128 0x13
 1767 0127 00       		.byte	0
 1768 0128 00       		.byte	0
 1769 0129 12       		.uleb128 0x12
 1770 012a 34       		.uleb128 0x34
 1771 012b 00       		.byte	0
 1772 012c 03       		.uleb128 0x3
 1773 012d 0E       		.uleb128 0xe
 1774 012e 3A       		.uleb128 0x3a
 1775 012f 0B       		.uleb128 0xb
 1776 0130 3B       		.uleb128 0x3b
 1777 0131 05       		.uleb128 0x5
 1778 0132 49       		.uleb128 0x49
 1779 0133 13       		.uleb128 0x13
 1780 0134 02       		.uleb128 0x2
 1781 0135 18       		.uleb128 0x18
 1782 0136 00       		.byte	0
 1783 0137 00       		.byte	0
 1784 0138 13       		.uleb128 0x13
 1785 0139 2E       		.uleb128 0x2e
 1786 013a 00       		.byte	0
 1787 013b 3F       		.uleb128 0x3f
 1788 013c 19       		.uleb128 0x19
 1789 013d 03       		.uleb128 0x3
 1790 013e 0E       		.uleb128 0xe
 1791 013f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 43


 1792 0140 0B       		.uleb128 0xb
 1793 0141 3B       		.uleb128 0x3b
 1794 0142 05       		.uleb128 0x5
 1795 0143 27       		.uleb128 0x27
 1796 0144 19       		.uleb128 0x19
 1797 0145 11       		.uleb128 0x11
 1798 0146 01       		.uleb128 0x1
 1799 0147 12       		.uleb128 0x12
 1800 0148 06       		.uleb128 0x6
 1801 0149 40       		.uleb128 0x40
 1802 014a 18       		.uleb128 0x18
 1803 014b 9642     		.uleb128 0x2116
 1804 014d 19       		.uleb128 0x19
 1805 014e 00       		.byte	0
 1806 014f 00       		.byte	0
 1807 0150 14       		.uleb128 0x14
 1808 0151 2E       		.uleb128 0x2e
 1809 0152 01       		.byte	0x1
 1810 0153 3F       		.uleb128 0x3f
 1811 0154 19       		.uleb128 0x19
 1812 0155 03       		.uleb128 0x3
 1813 0156 0E       		.uleb128 0xe
 1814 0157 3A       		.uleb128 0x3a
 1815 0158 0B       		.uleb128 0xb
 1816 0159 3B       		.uleb128 0x3b
 1817 015a 05       		.uleb128 0x5
 1818 015b 27       		.uleb128 0x27
 1819 015c 19       		.uleb128 0x19
 1820 015d 11       		.uleb128 0x11
 1821 015e 01       		.uleb128 0x1
 1822 015f 12       		.uleb128 0x12
 1823 0160 06       		.uleb128 0x6
 1824 0161 40       		.uleb128 0x40
 1825 0162 18       		.uleb128 0x18
 1826 0163 9742     		.uleb128 0x2117
 1827 0165 19       		.uleb128 0x19
 1828 0166 01       		.uleb128 0x1
 1829 0167 13       		.uleb128 0x13
 1830 0168 00       		.byte	0
 1831 0169 00       		.byte	0
 1832 016a 15       		.uleb128 0x15
 1833 016b 05       		.uleb128 0x5
 1834 016c 00       		.byte	0
 1835 016d 03       		.uleb128 0x3
 1836 016e 08       		.uleb128 0x8
 1837 016f 3A       		.uleb128 0x3a
 1838 0170 0B       		.uleb128 0xb
 1839 0171 3B       		.uleb128 0x3b
 1840 0172 05       		.uleb128 0x5
 1841 0173 49       		.uleb128 0x49
 1842 0174 13       		.uleb128 0x13
 1843 0175 02       		.uleb128 0x2
 1844 0176 18       		.uleb128 0x18
 1845 0177 00       		.byte	0
 1846 0178 00       		.byte	0
 1847 0179 16       		.uleb128 0x16
 1848 017a 34       		.uleb128 0x34
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 44


 1849 017b 00       		.byte	0
 1850 017c 03       		.uleb128 0x3
 1851 017d 0E       		.uleb128 0xe
 1852 017e 3A       		.uleb128 0x3a
 1853 017f 0B       		.uleb128 0xb
 1854 0180 3B       		.uleb128 0x3b
 1855 0181 0B       		.uleb128 0xb
 1856 0182 49       		.uleb128 0x49
 1857 0183 13       		.uleb128 0x13
 1858 0184 3F       		.uleb128 0x3f
 1859 0185 19       		.uleb128 0x19
 1860 0186 3C       		.uleb128 0x3c
 1861 0187 19       		.uleb128 0x19
 1862 0188 00       		.byte	0
 1863 0189 00       		.byte	0
 1864 018a 17       		.uleb128 0x17
 1865 018b 34       		.uleb128 0x34
 1866 018c 00       		.byte	0
 1867 018d 03       		.uleb128 0x3
 1868 018e 0E       		.uleb128 0xe
 1869 018f 3A       		.uleb128 0x3a
 1870 0190 0B       		.uleb128 0xb
 1871 0191 3B       		.uleb128 0x3b
 1872 0192 0B       		.uleb128 0xb
 1873 0193 49       		.uleb128 0x49
 1874 0194 13       		.uleb128 0x13
 1875 0195 3F       		.uleb128 0x3f
 1876 0196 19       		.uleb128 0x19
 1877 0197 02       		.uleb128 0x2
 1878 0198 18       		.uleb128 0x18
 1879 0199 00       		.byte	0
 1880 019a 00       		.byte	0
 1881 019b 00       		.byte	0
 1882              		.section	.debug_aranges,"",%progbits
 1883 0000 7C000000 		.4byte	0x7c
 1884 0004 0200     		.2byte	0x2
 1885 0006 00000000 		.4byte	.Ldebug_info0
 1886 000a 04       		.byte	0x4
 1887 000b 00       		.byte	0
 1888 000c 0000     		.2byte	0
 1889 000e 0000     		.2byte	0
 1890 0010 00000000 		.4byte	.LFB0
 1891 0014 70000000 		.4byte	.LFE0-.LFB0
 1892 0018 00000000 		.4byte	.LFB1
 1893 001c 68000000 		.4byte	.LFE1-.LFB1
 1894 0020 00000000 		.4byte	.LFB2
 1895 0024 88000000 		.4byte	.LFE2-.LFB2
 1896 0028 00000000 		.4byte	.LFB3
 1897 002c BC000000 		.4byte	.LFE3-.LFB3
 1898 0030 00000000 		.4byte	.LFB4
 1899 0034 32000000 		.4byte	.LFE4-.LFB4
 1900 0038 00000000 		.4byte	.LFB5
 1901 003c 64000000 		.4byte	.LFE5-.LFB5
 1902 0040 00000000 		.4byte	.LFB6
 1903 0044 8C000000 		.4byte	.LFE6-.LFB6
 1904 0048 00000000 		.4byte	.LFB7
 1905 004c 20000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 45


 1906 0050 00000000 		.4byte	.LFB8
 1907 0054 20000000 		.4byte	.LFE8-.LFB8
 1908 0058 00000000 		.4byte	.LFB9
 1909 005c 58000000 		.4byte	.LFE9-.LFB9
 1910 0060 00000000 		.4byte	.LFB10
 1911 0064 5C000000 		.4byte	.LFE10-.LFB10
 1912 0068 00000000 		.4byte	.LFB11
 1913 006c 58000000 		.4byte	.LFE11-.LFB11
 1914 0070 00000000 		.4byte	.LFB12
 1915 0074 5C000000 		.4byte	.LFE12-.LFB12
 1916 0078 00000000 		.4byte	0
 1917 007c 00000000 		.4byte	0
 1918              		.section	.debug_ranges,"",%progbits
 1919              	.Ldebug_ranges0:
 1920 0000 00000000 		.4byte	.LFB0
 1921 0004 70000000 		.4byte	.LFE0
 1922 0008 00000000 		.4byte	.LFB1
 1923 000c 68000000 		.4byte	.LFE1
 1924 0010 00000000 		.4byte	.LFB2
 1925 0014 88000000 		.4byte	.LFE2
 1926 0018 00000000 		.4byte	.LFB3
 1927 001c BC000000 		.4byte	.LFE3
 1928 0020 00000000 		.4byte	.LFB4
 1929 0024 32000000 		.4byte	.LFE4
 1930 0028 00000000 		.4byte	.LFB5
 1931 002c 64000000 		.4byte	.LFE5
 1932 0030 00000000 		.4byte	.LFB6
 1933 0034 8C000000 		.4byte	.LFE6
 1934 0038 00000000 		.4byte	.LFB7
 1935 003c 20000000 		.4byte	.LFE7
 1936 0040 00000000 		.4byte	.LFB8
 1937 0044 20000000 		.4byte	.LFE8
 1938 0048 00000000 		.4byte	.LFB9
 1939 004c 58000000 		.4byte	.LFE9
 1940 0050 00000000 		.4byte	.LFB10
 1941 0054 5C000000 		.4byte	.LFE10
 1942 0058 00000000 		.4byte	.LFB11
 1943 005c 58000000 		.4byte	.LFE11
 1944 0060 00000000 		.4byte	.LFB12
 1945 0064 5C000000 		.4byte	.LFE12
 1946 0068 00000000 		.4byte	0
 1947 006c 00000000 		.4byte	0
 1948              		.section	.debug_line,"",%progbits
 1949              	.Ldebug_line0:
 1950 0000 D0010000 		.section	.debug_str,"MS",%progbits,1
 1950      02007100 
 1950      00000201 
 1950      FB0E0D00 
 1950      01010101 
 1951              	.LASF6:
 1952 0000 6C6F6E67 		.ascii	"long long int\000"
 1952      206C6F6E 
 1952      6720696E 
 1952      7400
 1953              	.LASF36:
 1954 000e 72784461 		.ascii	"rxDataByte\000"
 1954      74614279 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 46


 1954      746500
 1955              	.LASF15:
 1956 0019 72656733 		.ascii	"reg32\000"
 1956      3200
 1957              	.LASF47:
 1958 001f 436F6D6D 		.ascii	"Comm_txBufferSize\000"
 1958      5F747842 
 1958      75666665 
 1958      7253697A 
 1958      6500
 1959              	.LASF38:
 1960 0031 76616C75 		.ascii	"value\000"
 1960      6500
 1961              	.LASF27:
 1962 0037 636F756E 		.ascii	"count\000"
 1962      7400
 1963              	.LASF51:
 1964 003d 436F6D6D 		.ascii	"Comm_txBufferHead\000"
 1964      5F747842 
 1964      75666665 
 1964      72486561 
 1964      6400
 1965              	.LASF46:
 1966 004f 436F6D6D 		.ascii	"Comm_txDataBits\000"
 1966      5F747844 
 1966      61746142 
 1966      69747300 
 1967              	.LASF3:
 1968 005f 73686F72 		.ascii	"short unsigned int\000"
 1968      7420756E 
 1968      7369676E 
 1968      65642069 
 1968      6E7400
 1969              	.LASF8:
 1970 0072 756E7369 		.ascii	"unsigned int\000"
 1970      676E6564 
 1970      20696E74 
 1970      00
 1971              	.LASF30:
 1972 007f 436F6D6D 		.ascii	"Comm_SpiUartClearTxBuffer\000"
 1972      5F537069 
 1972      55617274 
 1972      436C6561 
 1972      72547842 
 1973              	.LASF31:
 1974 0099 436F6D6D 		.ascii	"Comm_SpiUartDisableIntRx\000"
 1974      5F537069 
 1974      55617274 
 1974      44697361 
 1974      626C6549 
 1975              	.LASF29:
 1976 00b2 436F6D6D 		.ascii	"Comm_SpiUartClearRxBuffer\000"
 1976      5F537069 
 1976      55617274 
 1976      436C6561 
 1976      72527842 
 1977              	.LASF41:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 47


 1978 00cc 436F6D6D 		.ascii	"Comm_GetWordFromTxBuffer\000"
 1978      5F476574 
 1978      576F7264 
 1978      46726F6D 
 1978      54784275 
 1979              	.LASF22:
 1980 00e5 6C6F6348 		.ascii	"locHead\000"
 1980      65616400 
 1981              	.LASF33:
 1982 00ed 436F6D6D 		.ascii	"Comm_SpiUartDisableIntTx\000"
 1982      5F537069 
 1982      55617274 
 1982      44697361 
 1982      626C6549 
 1983              	.LASF52:
 1984 0106 436F6D6D 		.ascii	"Comm_txBufferTail\000"
 1984      5F747842 
 1984      75666665 
 1984      72546169 
 1984      6C00
 1985              	.LASF12:
 1986 0118 666C6F61 		.ascii	"float\000"
 1986      7400
 1987              	.LASF48:
 1988 011e 436F6D6D 		.ascii	"Comm_rxBufferHead\000"
 1988      5F727842 
 1988      75666665 
 1988      72486561 
 1988      6400
 1989              	.LASF21:
 1990 0130 73697A65 		.ascii	"size\000"
 1990      00
 1991              	.LASF5:
 1992 0135 6C6F6E67 		.ascii	"long unsigned int\000"
 1992      20756E73 
 1992      69676E65 
 1992      6420696E 
 1992      7400
 1993              	.LASF9:
 1994 0147 75696E74 		.ascii	"uint8\000"
 1994      3800
 1995              	.LASF17:
 1996 014d 72784461 		.ascii	"rxData\000"
 1996      746100
 1997              	.LASF26:
 1998 0154 77724275 		.ascii	"wrBuf\000"
 1998      6600
 1999              	.LASF43:
 2000 015a 436F6D6D 		.ascii	"Comm_rxDataBits\000"
 2000      5F727844 
 2000      61746142 
 2000      69747300 
 2001              	.LASF1:
 2002 016a 756E7369 		.ascii	"unsigned char\000"
 2002      676E6564 
 2002      20636861 
 2002      7200
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 48


 2003              	.LASF13:
 2004 0178 646F7562 		.ascii	"double\000"
 2004      6C6500
 2005              	.LASF45:
 2006 017f 436F6D6D 		.ascii	"Comm_txBuffer\000"
 2006      5F747842 
 2006      75666665 
 2006      7200
 2007              	.LASF2:
 2008 018d 73686F72 		.ascii	"short int\000"
 2008      7420696E 
 2008      7400
 2009              	.LASF53:
 2010 0197 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2010      4320342E 
 2010      392E3320 
 2010      32303135 
 2010      30333033 
 2011 01ca 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2011      20726576 
 2011      6973696F 
 2011      6E203232 
 2011      31323230 
 2012 01fd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2012      66756E63 
 2012      74696F6E 
 2012      2D736563 
 2012      74696F6E 
 2013              	.LASF10:
 2014 0225 75696E74 		.ascii	"uint16\000"
 2014      313600
 2015              	.LASF11:
 2016 022c 75696E74 		.ascii	"uint32\000"
 2016      333200
 2017              	.LASF37:
 2018 0233 436F6D6D 		.ascii	"Comm_GetWordFromRxBuffer\000"
 2018      5F476574 
 2018      576F7264 
 2018      46726F6D 
 2018      52784275 
 2019              	.LASF34:
 2020 024c 696E7453 		.ascii	"intSourceMask\000"
 2020      6F757263 
 2020      654D6173 
 2020      6B00
 2021              	.LASF32:
 2022 025a 696E7453 		.ascii	"intSource\000"
 2022      6F757263 
 2022      6500
 2023              	.LASF24:
 2024 0264 436F6D6D 		.ascii	"Comm_SpiUartPutArray\000"
 2024      5F537069 
 2024      55617274 
 2024      50757441 
 2024      72726179 
 2025              	.LASF55:
 2026 0279 433A5C55 		.ascii	"C:\\Users\\Tech Consulting\\Desktop\\PSOC4 projects"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 49


 2026      73657273 
 2026      5C546563 
 2026      6820436F 
 2026      6E73756C 
 2027 02a8 5C537465 		.ascii	"\\StepMotor_PSoC4200\\StepMotor_PSoC4200_Dual.cydsn"
 2027      704D6F74 
 2027      6F725F50 
 2027      536F4334 
 2027      3230305C 
 2028 02d9 00       		.ascii	"\000"
 2029              	.LASF7:
 2030 02da 6C6F6E67 		.ascii	"long long unsigned int\000"
 2030      206C6F6E 
 2030      6720756E 
 2030      7369676E 
 2030      65642069 
 2031              	.LASF44:
 2032 02f1 436F6D6D 		.ascii	"Comm_rxBufferSize\000"
 2032      5F727842 
 2032      75666665 
 2032      7253697A 
 2032      6500
 2033              	.LASF23:
 2034 0303 436F6D6D 		.ascii	"Comm_SpiUartWriteTxData\000"
 2034      5F537069 
 2034      55617274 
 2034      57726974 
 2034      65547844 
 2035              	.LASF28:
 2036 031b 436F6D6D 		.ascii	"Comm_SpiUartGetTxBufferSize\000"
 2036      5F537069 
 2036      55617274 
 2036      47657454 
 2036      78427566 
 2037              	.LASF25:
 2038 0337 74784461 		.ascii	"txData\000"
 2038      746100
 2039              	.LASF19:
 2040 033e 436F6D6D 		.ascii	"Comm_SpiUartReadRxData\000"
 2040      5F537069 
 2040      55617274 
 2040      52656164 
 2040      52784461 
 2041              	.LASF18:
 2042 0355 6C6F6354 		.ascii	"locTail\000"
 2042      61696C00 
 2043              	.LASF20:
 2044 035d 436F6D6D 		.ascii	"Comm_SpiUartGetRxBufferSize\000"
 2044      5F537069 
 2044      55617274 
 2044      47657452 
 2044      78427566 
 2045              	.LASF16:
 2046 0379 73697A65 		.ascii	"sizetype\000"
 2046      74797065 
 2046      00
 2047              	.LASF40:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccr69eYh.s 			page 50


 2048 0382 74784461 		.ascii	"txDataByte\000"
 2048      74614279 
 2048      746500
 2049              	.LASF49:
 2050 038d 436F6D6D 		.ascii	"Comm_rxBufferTail\000"
 2050      5F727842 
 2050      75666665 
 2050      72546169 
 2050      6C00
 2051              	.LASF14:
 2052 039f 63686172 		.ascii	"char\000"
 2052      00
 2053              	.LASF54:
 2054 03a4 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Comm_SPI_UART.c\000"
 2054      6E657261 
 2054      7465645F 
 2054      536F7572 
 2054      63655C50 
 2055              	.LASF35:
 2056 03cd 436F6D6D 		.ascii	"Comm_PutWordInRxBuffer\000"
 2056      5F507574 
 2056      576F7264 
 2056      496E5278 
 2056      42756666 
 2057              	.LASF4:
 2058 03e4 6C6F6E67 		.ascii	"long int\000"
 2058      20696E74 
 2058      00
 2059              	.LASF39:
 2060 03ed 436F6D6D 		.ascii	"Comm_PutWordInTxBuffer\000"
 2060      5F507574 
 2060      576F7264 
 2060      496E5478 
 2060      42756666 
 2061              	.LASF50:
 2062 0404 436F6D6D 		.ascii	"Comm_rxBufferOverflow\000"
 2062      5F727842 
 2062      75666665 
 2062      724F7665 
 2062      72666C6F 
 2063              	.LASF0:
 2064 041a 7369676E 		.ascii	"signed char\000"
 2064      65642063 
 2064      68617200 
 2065              	.LASF42:
 2066 0426 436F6D6D 		.ascii	"Comm_rxBuffer\000"
 2066      5F727842 
 2066      75666665 
 2066      7200
 2067              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
