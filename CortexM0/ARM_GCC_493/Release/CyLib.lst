ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 124 0
  34              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  35              		.loc 1 109 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 124 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 08010B40 		.word	1074462984
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 4


  47              		.section	.text.CySysClkImoStop,"ax",%progbits
  48              		.align	1
  49              		.global	CySysClkImoStop
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkImoStop, %function
  53              	CySysClkImoStop:
  54              	.LFB1:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  55              		.loc 1 140 0
  56              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  57              		.loc 1 149 0
  58 0000 024A     		ldr	r2, .L5
 150:Generated_Source\PSoC4/CyLib.c **** }
  59              		.loc 1 150 0
  60              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 149 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 150 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 08010B40 		.word	1074462984
  72              		.cfi_endproc
  73              	.LFE1:
  74              		.size	CySysClkImoStop, .-CySysClkImoStop
  75              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  76              		.align	1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 5


  77              		.global	CySysClkWriteHfclkDirect
  78              		.code	16
  79              		.thumb_func
  80              		.type	CySysClkWriteHfclkDirect, %function
  81              	CySysClkWriteHfclkDirect:
  82              	.LFB2:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 6


 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 7


 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 8


 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 9


 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 10


 430:Generated_Source\PSoC4/CyLib.c **** {
  83              		.loc 1 430 0
  84              		.cfi_startproc
  85              	.LVL0:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90              		.loc 1 430 0
  91 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  92              		.loc 1 434 0
  93 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  95              		.loc 1 437 0
  96 0008 0723     		mov	r3, #7
  97 000a 0449     		ldr	r1, .L8
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
  98              		.loc 1 454 0
  99              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 100              		.loc 1 437 0
 101 000c 0A68     		ldr	r2, [r1]
 102 000e 9A43     		bic	r2, r3
 103              	.LVL2:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 104              		.loc 1 448 0
 105 0010 2340     		and	r3, r4
 106 0012 1343     		orr	r3, r2
 107              	.LVL3:
 451:Generated_Source\PSoC4/CyLib.c **** 
 108              		.loc 1 451 0
 109 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 110              		.loc 1 453 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 11


 111 0016 FFF7FEFF 		bl	CyExitCriticalSection
 112              	.LVL4:
 113              	.LVL5:
 114              		.loc 1 454 0
 115 001a 10BD     		pop	{r4, pc}
 116              	.L9:
 117              		.align	2
 118              	.L8:
 119 001c 00010B40 		.word	1074462976
 120              		.cfi_endproc
 121              	.LFE2:
 122              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 123              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 124              		.align	1
 125              		.global	CySysEnablePumpClock
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysEnablePumpClock, %function
 129              	CySysEnablePumpClock:
 130              	.LFB3:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 131              		.loc 1 474 0
 132              		.cfi_startproc
 133              	.LVL6:
 134 0000 10B5     		push	{r4, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0002 094B     		ldr	r3, .L15
 139 0004 094C     		ldr	r4, .L15+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 140              		.loc 1 476 0
 141 0006 C207     		lsl	r2, r0, #31
 142 0008 04D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 143              		.loc 1 478 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 12


 144 000a 2268     		ldr	r2, [r4]
 145 000c 1968     		ldr	r1, [r3]
 146 000e 5206     		lsl	r2, r2, #25
 147 0010 0A43     		orr	r2, r1
 148 0012 06E0     		b	.L13
 149              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 150              		.loc 1 482 0
 151 0014 1A68     		ldr	r2, [r3]
 152 0016 1201     		lsl	r2, r2, #4
 153 0018 520F     		lsr	r2, r2, #29
 154 001a 2260     		str	r2, [r4]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 155              		.loc 1 484 0
 156 001c 1968     		ldr	r1, [r3]
 157 001e 044A     		ldr	r2, .L15+8
 158 0020 0A40     		and	r2, r1
 159              	.L13:
 160 0022 1A60     		str	r2, [r3]
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 161              		.loc 1 498 0
 162              		@ sp needed
 163 0024 10BD     		pop	{r4, pc}
 164              	.L16:
 165 0026 C046     		.align	2
 166              	.L15:
 167 0028 08010B40 		.word	1074462984
 168 002c 00000000 		.word	.LANCHOR0
 169 0030 FFFFFFF1 		.word	-234881025
 170              		.cfi_endproc
 171              	.LFE3:
 172              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 173              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 174              		.align	1
 175              		.global	CySysClkGetSysclkSource
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkGetSysclkSource, %function
 179              	CySysClkGetSysclkSource:
 180              	.LFB4:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 13


 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 511 0
 182              		.cfi_startproc
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 187              		.loc 1 515 0
 188 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 189              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 190              		.loc 1 525 0
 191 0006 034B     		ldr	r3, .L18
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 192              		.loc 1 531 0
 193              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 194              		.loc 1 525 0
 195 0008 1C68     		ldr	r4, [r3]
 196              	.LVL8:
 528:Generated_Source\PSoC4/CyLib.c **** 
 197              		.loc 1 528 0
 198 000a FFF7FEFF 		bl	CyExitCriticalSection
 199              	.LVL9:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 200              		.loc 1 525 0
 201 000e 0720     		mov	r0, #7
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 14


 202 0010 2040     		and	r0, r4
 203              	.LVL10:
 204              		.loc 1 531 0
 205 0012 10BD     		pop	{r4, pc}
 206              	.L19:
 207              		.align	2
 208              	.L18:
 209 0014 00010B40 		.word	1074462976
 210              		.cfi_endproc
 211              	.LFE4:
 212              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 213              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 214              		.align	1
 215              		.global	CySysClkWriteSysclkDiv
 216              		.code	16
 217              		.thumb_func
 218              		.type	CySysClkWriteSysclkDiv, %function
 219              	CySysClkWriteSysclkDiv:
 220              	.LFB5:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 221              		.loc 1 566 0
 222              		.cfi_startproc
 223              	.LVL11:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 15


 224 0000 38B5     		push	{r3, r4, r5, lr}
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 3, -16
 227              		.cfi_offset 4, -12
 228              		.cfi_offset 5, -8
 229              		.cfi_offset 14, -4
 230              		.loc 1 566 0
 231 0002 051C     		mov	r5, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 232              		.loc 1 569 0
 233 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 234              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 235              		.loc 1 571 0
 236 0008 0721     		mov	r1, #7
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 237              		.loc 1 573 0
 238 000a 054C     		ldr	r4, .L21
 239 000c 054A     		ldr	r2, .L21+4
 240 000e 2368     		ldr	r3, [r4]
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 241              		.loc 1 571 0
 242 0010 2940     		and	r1, r5
 243 0012 C904     		lsl	r1, r1, #19
 244              		.loc 1 573 0
 245 0014 1340     		and	r3, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 246              		.loc 1 572 0
 247 0016 0B43     		orr	r3, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 248              		.loc 1 571 0
 249 0018 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 250              		.loc 1 576 0
 251 001a FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL13:
 577:Generated_Source\PSoC4/CyLib.c **** }
 253              		.loc 1 577 0
 254              		@ sp needed
 255              	.LVL14:
 256 001e 38BD     		pop	{r3, r4, r5, pc}
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 0020 00010B40 		.word	1074462976
 261 0024 FFFFC7FF 		.word	-3670017
 262              		.cfi_endproc
 263              	.LFE5:
 264              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 265              		.section	.text.CySysLvdDisable,"ax",%progbits
 266              		.align	1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 16


 267              		.global	CySysLvdDisable
 268              		.code	16
 269              		.thumb_func
 270              		.type	CySysLvdDisable, %function
 271              	CySysLvdDisable:
 272              	.LFB8:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 17


 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 18


 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 19


 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 20


 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 21


 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 22


 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 23


 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 24


1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 25


1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 26


1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 27


1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1255:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 28


1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 29


1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 30


1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 31


1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 32


1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 33


1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 34


1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 35


1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 36


1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 37


1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 38


1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 39


1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 40


1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 41


1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 42


2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 43


2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
 273              		.loc 1 2149 0
 274              		.cfi_startproc
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 275              		.loc 1 2150 0
 276 0000 0221     		mov	r1, #2
 277 0002 054A     		ldr	r2, .L24
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
 278              		.loc 1 2152 0
 279              		@ sp needed
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 280              		.loc 1 2150 0
 281 0004 1368     		ldr	r3, [r2]
 282 0006 8B43     		bic	r3, r1
 283 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 284              		.loc 1 2151 0
 285 000a 044A     		ldr	r2, .L24+4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 44


 286 000c 0139     		sub	r1, r1, #1
 287 000e 1368     		ldr	r3, [r2]
 288 0010 8B43     		bic	r3, r1
 289 0012 1360     		str	r3, [r2]
 290              		.loc 1 2152 0
 291 0014 7047     		bx	lr
 292              	.L25:
 293 0016 C046     		.align	2
 294              	.L24:
 295 0018 08000B40 		.word	1074462728
 296 001c 18000B40 		.word	1074462744
 297              		.cfi_endproc
 298              	.LFE8:
 299              		.size	CySysLvdDisable, .-CySysLvdDisable
 300              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 301              		.align	1
 302              		.global	CySysLvdGetInterruptSource
 303              		.code	16
 304              		.thumb_func
 305              		.type	CySysLvdGetInterruptSource, %function
 306              	CySysLvdGetInterruptSource:
 307              	.LFB9:
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
 308              		.loc 1 2167 0
 309              		.cfi_startproc
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 310              		.loc 1 2168 0
 311 0000 024B     		ldr	r3, .L27
2169:Generated_Source\PSoC4/CyLib.c ****     }
 312              		.loc 1 2169 0
 313              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 314              		.loc 1 2168 0
 315 0002 1868     		ldr	r0, [r3]
 316 0004 0223     		mov	r3, #2
 317 0006 1840     		and	r0, r3
 318              		.loc 1 2169 0
 319 0008 7047     		bx	lr
 320              	.L28:
 321 000a C046     		.align	2
 322              	.L27:
 323 000c 04000B40 		.word	1074462724
 324              		.cfi_endproc
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 45


 325              	.LFE9:
 326              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 327              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 328              		.align	1
 329              		.global	CySysLvdClearInterrupt
 330              		.code	16
 331              		.thumb_func
 332              		.type	CySysLvdClearInterrupt, %function
 333              	CySysLvdClearInterrupt:
 334              	.LFB10:
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
 335              		.loc 1 2183 0
 336              		.cfi_startproc
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 337              		.loc 1 2184 0
 338 0000 0222     		mov	r2, #2
 339 0002 014B     		ldr	r3, .L30
2185:Generated_Source\PSoC4/CyLib.c ****     }
 340              		.loc 1 2185 0
 341              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 342              		.loc 1 2184 0
 343 0004 1A60     		str	r2, [r3]
 344              		.loc 1 2185 0
 345 0006 7047     		bx	lr
 346              	.L31:
 347              		.align	2
 348              	.L30:
 349 0008 04000B40 		.word	1074462724
 350              		.cfi_endproc
 351              	.LFE10:
 352              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 353              		.section	.text.CySysGetResetReason,"ax",%progbits
 354              		.align	1
 355              		.global	CySysGetResetReason
 356              		.code	16
 357              		.thumb_func
 358              		.type	CySysGetResetReason, %function
 359              	CySysGetResetReason:
 360              	.LFB11:
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 46


2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
 361              		.loc 1 2209 0
 362              		.cfi_startproc
 363              	.LVL15:
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 364              		.loc 1 2212 0
 365 0000 1923     		mov	r3, #25
 366 0002 021C     		mov	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 367              		.loc 1 2213 0
 368 0004 0249     		ldr	r1, .L33
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 369              		.loc 1 2212 0
 370 0006 1A40     		and	r2, r3
 371              	.LVL16:
 372              		.loc 1 2213 0
 373 0008 0868     		ldr	r0, [r1]
 374              	.LVL17:
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
 375              		.loc 1 2218 0
 376              		@ sp needed
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 377              		.loc 1 2213 0
 378 000a 1840     		and	r0, r3
 379              	.LVL18:
2215:Generated_Source\PSoC4/CyLib.c **** 
 380              		.loc 1 2215 0
 381 000c 0A60     		str	r2, [r1]
 382              		.loc 1 2218 0
 383 000e 7047     		bx	lr
 384              	.L34:
 385              		.align	2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 47


 386              	.L33:
 387 0010 00030B40 		.word	1074463488
 388              		.cfi_endproc
 389              	.LFE11:
 390              		.size	CySysGetResetReason, .-CySysGetResetReason
 391              		.section	.text.CyDisableInts,"ax",%progbits
 392              		.align	1
 393              		.global	CyDisableInts
 394              		.code	16
 395              		.thumb_func
 396              		.type	CyDisableInts, %function
 397              	CyDisableInts:
 398              	.LFB12:
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
 399              		.loc 1 2232 0
 400              		.cfi_startproc
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 401              		.loc 1 2239 0
 402 0000 0122     		mov	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 403              		.loc 1 2236 0
 404 0002 024B     		ldr	r3, .L36
 405              		.loc 1 2239 0
 406 0004 5242     		neg	r2, r2
2236:Generated_Source\PSoC4/CyLib.c **** 
 407              		.loc 1 2236 0
 408 0006 1868     		ldr	r0, [r3]
 409              	.LVL19:
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
 410              		.loc 1 2242 0
 411              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 412              		.loc 1 2239 0
 413 0008 1A60     		str	r2, [r3]
 414              		.loc 1 2242 0
 415 000a 7047     		bx	lr
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 48


 416              	.L37:
 417              		.align	2
 418              	.L36:
 419 000c 80E100E0 		.word	-536813184
 420              		.cfi_endproc
 421              	.LFE12:
 422              		.size	CyDisableInts, .-CyDisableInts
 423              		.section	.text.CyEnableInts,"ax",%progbits
 424              		.align	1
 425              		.global	CyEnableInts
 426              		.code	16
 427              		.thumb_func
 428              		.type	CyEnableInts, %function
 429              	CyEnableInts:
 430              	.LFB13:
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
 431              		.loc 1 2255 0
 432              		.cfi_startproc
 433              	.LVL20:
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 434              		.loc 1 2256 0
 435 0000 014B     		ldr	r3, .L39
2257:Generated_Source\PSoC4/CyLib.c **** }
 436              		.loc 1 2257 0
 437              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 438              		.loc 1 2256 0
 439 0002 1860     		str	r0, [r3]
 440              		.loc 1 2257 0
 441 0004 7047     		bx	lr
 442              	.L40:
 443 0006 C046     		.align	2
 444              	.L39:
 445 0008 00E100E0 		.word	-536813312
 446              		.cfi_endproc
 447              	.LFE13:
 448              		.size	CyEnableInts, .-CyEnableInts
 449              		.section	.text.CyIntSetSysVector,"ax",%progbits
 450              		.align	1
 451              		.global	CyIntSetSysVector
 452              		.code	16
 453              		.thumb_func
 454              		.type	CyIntSetSysVector, %function
 455              	CyIntSetSysVector:
 456              	.LFB14:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 49


2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2280:Generated_Source\PSoC4/CyLib.c **** {
 457              		.loc 1 2280 0
 458              		.cfi_startproc
 459              	.LVL21:
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 460              		.loc 1 2287 0
 461 0000 8023     		mov	r3, #128
 462 0002 8000     		lsl	r0, r0, #2
 463              	.LVL22:
 464 0004 9B05     		lsl	r3, r3, #22
 465 0006 C318     		add	r3, r0, r3
 466 0008 1868     		ldr	r0, [r3]
 467              	.LVL23:
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
 468              		.loc 1 2293 0
 469              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 470              		.loc 1 2290 0
 471 000a 1960     		str	r1, [r3]
 472              		.loc 1 2293 0
 473 000c 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE14:
 476              		.size	CyIntSetSysVector, .-CyIntSetSysVector
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 50


 477              		.section	.text.CyIntGetSysVector,"ax",%progbits
 478              		.align	1
 479              		.global	CyIntGetSysVector
 480              		.code	16
 481              		.thumb_func
 482              		.type	CyIntGetSysVector, %function
 483              	CyIntGetSysVector:
 484              	.LFB15:
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
 485              		.loc 1 2314 0
 486              		.cfi_startproc
 487              	.LVL24:
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 488              		.loc 1 2319 0
 489 0000 8023     		mov	r3, #128
 490 0002 8000     		lsl	r0, r0, #2
 491              	.LVL25:
 492 0004 9B05     		lsl	r3, r3, #22
 493 0006 C018     		add	r0, r0, r3
 494 0008 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** }
 495              		.loc 1 2320 0
 496              		@ sp needed
 497 000a 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE15:
 500              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 501              		.section	.text.CyIntSetVector,"ax",%progbits
 502              		.align	1
 503              		.global	CyIntSetVector
 504              		.code	16
 505              		.thumb_func
 506              		.type	CyIntSetVector, %function
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 51


 507              	CyIntSetVector:
 508              	.LFB16:
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
 509              		.loc 1 2336 0
 510              		.cfi_startproc
 511              	.LVL26:
2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 512              		.loc 1 2343 0
 513 0000 024B     		ldr	r3, .L44
 514 0002 8000     		lsl	r0, r0, #2
 515              	.LVL27:
 516 0004 C318     		add	r3, r0, r3
 517 0006 1868     		ldr	r0, [r3]
 518              	.LVL28:
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
 519              		.loc 1 2349 0
 520              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 521              		.loc 1 2346 0
 522 0008 1960     		str	r1, [r3]
 523              		.loc 1 2349 0
 524 000a 7047     		bx	lr
 525              	.L45:
 526              		.align	2
 527              	.L44:
 528 000c 40000020 		.word	536870976
 529              		.cfi_endproc
 530              	.LFE16:
 531              		.size	CyIntSetVector, .-CyIntSetVector
 532              		.section	.text.CyIntGetVector,"ax",%progbits
 533              		.align	1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 52


 534              		.global	CyIntGetVector
 535              		.code	16
 536              		.thumb_func
 537              		.type	CyIntGetVector, %function
 538              	CyIntGetVector:
 539              	.LFB17:
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
 540              		.loc 1 2364 0
 541              		.cfi_startproc
 542              	.LVL29:
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 543              		.loc 1 2369 0
 544 0000 024B     		ldr	r3, .L47
 545 0002 8000     		lsl	r0, r0, #2
 546              	.LVL30:
 547 0004 C018     		add	r0, r0, r3
 548 0006 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** }
 549              		.loc 1 2370 0
 550              		@ sp needed
 551 0008 7047     		bx	lr
 552              	.L48:
 553 000a C046     		.align	2
 554              	.L47:
 555 000c 40000020 		.word	536870976
 556              		.cfi_endproc
 557              	.LFE17:
 558              		.size	CyIntGetVector, .-CyIntGetVector
 559              		.section	.text.CyIntSetPriority,"ax",%progbits
 560              		.align	1
 561              		.global	CyIntSetPriority
 562              		.code	16
 563              		.thumb_func
 564              		.type	CyIntSetPriority, %function
 565              	CyIntSetPriority:
 566              	.LFB18:
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 53


2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
 567              		.loc 1 2383 0
 568              		.cfi_startproc
 569              	.LVL31:
 570 0000 38B5     		push	{r3, r4, r5, lr}
 571              		.cfi_def_cfa_offset 16
 572              		.cfi_offset 3, -16
 573              		.cfi_offset 4, -12
 574              		.cfi_offset 5, -8
 575              		.cfi_offset 14, -4
 576              		.loc 1 2383 0
 577 0002 041C     		mov	r4, r0
 578              	.LVL32:
 579 0004 0D1C     		mov	r5, r1
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 580              		.loc 1 2393 0
 581 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 582              	.LVL33:
2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 583              		.loc 1 2395 0
 584 000a A308     		lsr	r3, r4, #2
 585 000c 074A     		ldr	r2, .L50
 586 000e 9B00     		lsl	r3, r3, #2
 587 0010 9B18     		add	r3, r3, r2
2391:Generated_Source\PSoC4/CyLib.c **** 
 588              		.loc 1 2391 0
 589 0012 0322     		mov	r2, #3
 590 0014 1440     		and	r4, r2
 591              	.LVL34:
 592 0016 9440     		lsl	r4, r4, r2
 593 0018 0634     		add	r4, r4, #6
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 594              		.loc 1 2396 0
 595 001a A240     		lsl	r2, r2, r4
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 596              		.loc 1 2397 0
 597 001c A540     		lsl	r5, r5, r4
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 54


 598              		.loc 1 2395 0
 599 001e 1968     		ldr	r1, [r3]
 600              	.LVL35:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
 601              		.loc 1 2401 0
 602              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 603              		.loc 1 2396 0
 604 0020 9143     		bic	r1, r2
 605              	.LVL36:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 606              		.loc 1 2397 0
 607 0022 2943     		orr	r1, r5
 608              	.LVL37:
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 609              		.loc 1 2398 0
 610 0024 1960     		str	r1, [r3]
2400:Generated_Source\PSoC4/CyLib.c **** }
 611              		.loc 1 2400 0
 612 0026 FFF7FEFF 		bl	CyExitCriticalSection
 613              	.LVL38:
 614              		.loc 1 2401 0
 615 002a 38BD     		pop	{r3, r4, r5, pc}
 616              	.L51:
 617              		.align	2
 618              	.L50:
 619 002c 00E400E0 		.word	-536812544
 620              		.cfi_endproc
 621              	.LFE18:
 622              		.size	CyIntSetPriority, .-CyIntSetPriority
 623              		.section	.text.CyIntGetPriority,"ax",%progbits
 624              		.align	1
 625              		.global	CyIntGetPriority
 626              		.code	16
 627              		.thumb_func
 628              		.type	CyIntGetPriority, %function
 629              	CyIntGetPriority:
 630              	.LFB19:
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 55


 631              		.loc 1 2417 0
 632              		.cfi_startproc
 633              	.LVL39:
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
 634              		.loc 1 2422 0
 635 0000 8308     		lsr	r3, r0, #2
 636 0002 064A     		ldr	r2, .L53
 637 0004 9B00     		lsl	r3, r3, #2
 638 0006 9B18     		add	r3, r3, r2
 639 0008 1968     		ldr	r1, [r3]
 640              	.LVL40:
 641 000a 0322     		mov	r2, #3
 642 000c 031C     		mov	r3, r0
 643 000e 1340     		and	r3, r2
 644 0010 9340     		lsl	r3, r3, r2
 645 0012 0633     		add	r3, r3, #6
 646 0014 D940     		lsr	r1, r1, r3
 647              	.LVL41:
 648 0016 081C     		mov	r0, r1
 649              	.LVL42:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
 650              		.loc 1 2425 0
 651              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 652              		.loc 1 2424 0
 653 0018 1040     		and	r0, r2
 654              		.loc 1 2425 0
 655 001a 7047     		bx	lr
 656              	.L54:
 657              		.align	2
 658              	.L53:
 659 001c 00E400E0 		.word	-536812544
 660              		.cfi_endproc
 661              	.LFE19:
 662              		.size	CyIntGetPriority, .-CyIntGetPriority
 663              		.section	.text.CyIntEnable,"ax",%progbits
 664              		.align	1
 665              		.global	CyIntEnable
 666              		.code	16
 667              		.thumb_func
 668              		.type	CyIntEnable, %function
 669              	CyIntEnable:
 670              	.LFB20:
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 56


2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
 671              		.loc 1 2438 0
 672              		.cfi_startproc
 673              	.LVL43:
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 674              		.loc 1 2439 0
 675 0000 1F23     		mov	r3, #31
 676 0002 1840     		and	r0, r3
 677              	.LVL44:
 678 0004 1E3B     		sub	r3, r3, #30
 679 0006 8340     		lsl	r3, r3, r0
 680 0008 181C     		mov	r0, r3
 681 000a 014B     		ldr	r3, .L56
2440:Generated_Source\PSoC4/CyLib.c **** }
 682              		.loc 1 2440 0
 683              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 684              		.loc 1 2439 0
 685 000c 1860     		str	r0, [r3]
 686              		.loc 1 2440 0
 687 000e 7047     		bx	lr
 688              	.L57:
 689              		.align	2
 690              	.L56:
 691 0010 00E100E0 		.word	-536813312
 692              		.cfi_endproc
 693              	.LFE20:
 694              		.size	CyIntEnable, .-CyIntEnable
 695              		.section	.text.CyIntGetState,"ax",%progbits
 696              		.align	1
 697              		.global	CyIntGetState
 698              		.code	16
 699              		.thumb_func
 700              		.type	CyIntGetState, %function
 701              	CyIntGetState:
 702              	.LFB21:
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
 703              		.loc 1 2456 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 57


 704              		.cfi_startproc
 705              	.LVL45:
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 706              		.loc 1 2458 0
 707 0000 1F22     		mov	r2, #31
 708 0002 044B     		ldr	r3, .L59
 709 0004 1040     		and	r0, r2
 710              	.LVL46:
 711 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** }
 712              		.loc 1 2459 0
 713              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 714              		.loc 1 2458 0
 715 0008 C340     		lsr	r3, r3, r0
 716 000a 181C     		mov	r0, r3
 717 000c 0123     		mov	r3, #1
 718 000e 1840     		and	r0, r3
 719              		.loc 1 2459 0
 720 0010 7047     		bx	lr
 721              	.L60:
 722 0012 C046     		.align	2
 723              	.L59:
 724 0014 00E100E0 		.word	-536813312
 725              		.cfi_endproc
 726              	.LFE21:
 727              		.size	CyIntGetState, .-CyIntGetState
 728              		.section	.text.CyIntDisable,"ax",%progbits
 729              		.align	1
 730              		.global	CyIntDisable
 731              		.code	16
 732              		.thumb_func
 733              		.type	CyIntDisable, %function
 734              	CyIntDisable:
 735              	.LFB22:
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
 736              		.loc 1 2472 0
 737              		.cfi_startproc
 738              	.LVL47:
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 739              		.loc 1 2473 0
 740 0000 1F23     		mov	r3, #31
 741 0002 1840     		and	r0, r3
 742              	.LVL48:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 58


 743 0004 1E3B     		sub	r3, r3, #30
 744 0006 8340     		lsl	r3, r3, r0
 745 0008 181C     		mov	r0, r3
 746 000a 014B     		ldr	r3, .L62
2474:Generated_Source\PSoC4/CyLib.c **** }
 747              		.loc 1 2474 0
 748              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 749              		.loc 1 2473 0
 750 000c 1860     		str	r0, [r3]
 751              		.loc 1 2474 0
 752 000e 7047     		bx	lr
 753              	.L63:
 754              		.align	2
 755              	.L62:
 756 0010 80E100E0 		.word	-536813184
 757              		.cfi_endproc
 758              	.LFE22:
 759              		.size	CyIntDisable, .-CyIntDisable
 760              		.section	.text.CyIntSetPending,"ax",%progbits
 761              		.align	1
 762              		.global	CyIntSetPending
 763              		.code	16
 764              		.thumb_func
 765              		.type	CyIntSetPending, %function
 766              	CyIntSetPending:
 767              	.LFB23:
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 768              		.loc 1 2486 0
 769              		.cfi_startproc
 770              	.LVL49:
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 771              		.loc 1 2487 0
 772 0000 1F23     		mov	r3, #31
 773 0002 1840     		and	r0, r3
 774              	.LVL50:
 775 0004 1E3B     		sub	r3, r3, #30
 776 0006 8340     		lsl	r3, r3, r0
 777 0008 181C     		mov	r0, r3
 778 000a 014B     		ldr	r3, .L65
2488:Generated_Source\PSoC4/CyLib.c **** }
 779              		.loc 1 2488 0
 780              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 781              		.loc 1 2487 0
 782 000c 1860     		str	r0, [r3]
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 59


 783              		.loc 1 2488 0
 784 000e 7047     		bx	lr
 785              	.L66:
 786              		.align	2
 787              	.L65:
 788 0010 00E200E0 		.word	-536813056
 789              		.cfi_endproc
 790              	.LFE23:
 791              		.size	CyIntSetPending, .-CyIntSetPending
 792              		.section	.text.CyIntClearPending,"ax",%progbits
 793              		.align	1
 794              		.global	CyIntClearPending
 795              		.code	16
 796              		.thumb_func
 797              		.type	CyIntClearPending, %function
 798              	CyIntClearPending:
 799              	.LFB24:
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
 800              		.loc 1 2501 0
 801              		.cfi_startproc
 802              	.LVL51:
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 803              		.loc 1 2502 0
 804 0000 1F23     		mov	r3, #31
 805 0002 1840     		and	r0, r3
 806              	.LVL52:
 807 0004 1E3B     		sub	r3, r3, #30
 808 0006 8340     		lsl	r3, r3, r0
 809 0008 181C     		mov	r0, r3
 810 000a 014B     		ldr	r3, .L68
2503:Generated_Source\PSoC4/CyLib.c **** }
 811              		.loc 1 2503 0
 812              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 813              		.loc 1 2502 0
 814 000c 1860     		str	r0, [r3]
 815              		.loc 1 2503 0
 816 000e 7047     		bx	lr
 817              	.L69:
 818              		.align	2
 819              	.L68:
 820 0010 80E200E0 		.word	-536812928
 821              		.cfi_endproc
 822              	.LFE24:
 823              		.size	CyIntClearPending, .-CyIntClearPending
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 60


 824              		.section	.text.CyHalt,"ax",%progbits
 825              		.align	1
 826              		.global	CyHalt
 827              		.code	16
 828              		.thumb_func
 829              		.type	CyHalt, %function
 830              	CyHalt:
 831              	.LFB25:
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
 832              		.loc 1 2516 0
 833              		.cfi_startproc
 834              	.LVL53:
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 835              		.loc 1 2525 0
 836              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 837 0000 01BE     		    bkpt    1
 838              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 839              		.loc 1 2529 0
 840              		.code	16
 841              		@ sp needed
 842 0002 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE25:
 845              		.size	CyHalt, .-CyHalt
 846              		.section	.text.CySoftwareReset,"ax",%progbits
 847              		.align	1
 848              		.global	CySoftwareReset
 849              		.code	16
 850              		.thumb_func
 851              		.type	CySoftwareReset, %function
 852              	CySoftwareReset:
 853              	.LFB26:
2530:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 61


2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 854              		.loc 1 2540 0
 855              		.cfi_startproc
2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 856              		.loc 1 2545 0
 857 0000 034A     		ldr	r2, .L72
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 858              		.loc 1 2546 0
 859 0002 0449     		ldr	r1, .L72+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 860              		.loc 1 2545 0
 861 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 862              		.loc 1 2547 0
 863              		@ sp needed
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 864              		.loc 1 2545 0
 865 0006 9BB2     		uxth	r3, r3
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 866              		.loc 1 2546 0
 867 0008 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 868              		.loc 1 2545 0
 869 000a 1360     		str	r3, [r2]
 870              		.loc 1 2547 0
 871 000c 7047     		bx	lr
 872              	.L73:
 873 000e C046     		.align	2
 874              	.L72:
 875 0010 0CED00E0 		.word	-536810228
 876 0014 0400FA05 		.word	100270084
 877              		.cfi_endproc
 878              	.LFE26:
 879              		.size	CySoftwareReset, .-CySoftwareReset
 880              		.section	.text.CyDelay,"ax",%progbits
 881              		.align	1
 882              		.global	CyDelay
 883              		.code	16
 884              		.thumb_func
 885              		.type	CyDelay, %function
 886              	CyDelay:
 887              	.LFB27:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 62


2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 888              		.loc 1 2560 0
 889              		.cfi_startproc
 890              	.LVL54:
 891 0000 10B5     		push	{r4, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 4, -8
 894              		.cfi_offset 14, -4
 895 0002 041C     		mov	r4, r0
 896              	.LVL55:
 897              	.L75:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 898              		.loc 1 2561 0
 899 0004 8022     		mov	r2, #128
 900 0006 074B     		ldr	r3, .L78
 901 0008 1202     		lsl	r2, r2, #8
 902 000a 9442     		cmp	r4, r2
 903 000c 05D9     		bls	.L77
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 904              		.loc 1 2566 0
 905 000e 5868     		ldr	r0, [r3, #4]
 906 0010 FFF7FEFF 		bl	CyDelayCycles
 907              	.LVL56:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 908              		.loc 1 2567 0
 909 0014 044B     		ldr	r3, .L78+4
 910 0016 E418     		add	r4, r4, r3
 911              	.LVL57:
 912 0018 F4E7     		b	.L75
 913              	.L77:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 914              		.loc 1 2570 0
 915 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 916              		.loc 1 2571 0
 917              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 918              		.loc 1 2570 0
 919 001c 6043     		mul	r0, r4
 920 001e FFF7FEFF 		bl	CyDelayCycles
 921              	.LVL58:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 63


 922              	.LVL59:
 923              		.loc 1 2571 0
 924 0022 10BD     		pop	{r4, pc}
 925              	.L79:
 926              		.align	2
 927              	.L78:
 928 0024 00000000 		.word	.LANCHOR0
 929 0028 0080FFFF 		.word	-32768
 930              		.cfi_endproc
 931              	.LFE27:
 932              		.size	CyDelay, .-CyDelay
 933              		.section	.text.CyDelayUs,"ax",%progbits
 934              		.align	1
 935              		.global	CyDelayUs
 936              		.code	16
 937              		.thumb_func
 938              		.type	CyDelayUs, %function
 939              	CyDelayUs:
 940              	.LFB28:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 941              		.loc 1 2583 0
 942              		.cfi_startproc
 943              	.LVL60:
 944 0000 08B5     		push	{r3, lr}
 945              		.cfi_def_cfa_offset 8
 946              		.cfi_offset 3, -8
 947              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 948              		.loc 1 2584 0
 949 0002 034B     		ldr	r3, .L81
2585:Generated_Source\PSoC4/CyLib.c **** }
 950              		.loc 1 2585 0
 951              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 952              		.loc 1 2584 0
 953 0004 1B7B     		ldrb	r3, [r3, #12]
 954 0006 5843     		mul	r0, r3
 955              	.LVL61:
 956 0008 FFF7FEFF 		bl	CyDelayCycles
 957              	.LVL62:
 958              		.loc 1 2585 0
 959 000c 08BD     		pop	{r3, pc}
 960              	.L82:
 961 000e C046     		.align	2
 962              	.L81:
 963 0010 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 64


 964              		.cfi_endproc
 965              	.LFE28:
 966              		.size	CyDelayUs, .-CyDelayUs
 967              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 968              		.align	1
 969              		.global	CySysClkWriteImoFreq
 970              		.code	16
 971              		.thumb_func
 972              		.type	CySysClkWriteImoFreq, %function
 973              	CySysClkWriteImoFreq:
 974              	.LFB6:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 975              		.loc 1 624 0
 976              		.cfi_startproc
 977              	.LVL63:
 978 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 979              		.cfi_def_cfa_offset 20
 980              		.cfi_offset 4, -20
 981              		.cfi_offset 5, -16
 982              		.cfi_offset 6, -12
 983              		.cfi_offset 7, -8
 984              		.cfi_offset 14, -4
 985 0002 051C     		mov	r5, r0
 986 0004 87B0     		sub	sp, sp, #28
 987              		.cfi_def_cfa_offset 48
 647:Generated_Source\PSoC4/CyLib.c **** 
 988              		.loc 1 647 0
 989 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 990              	.LVL64:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 991              		.loc 1 697 0
 992 000a EB1E     		sub	r3, r5, #3
 647:Generated_Source\PSoC4/CyLib.c **** 
 993              		.loc 1 647 0
 994 000c 0490     		str	r0, [sp, #16]
 995              	.LVL65:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 996              		.loc 1 697 0
 997 000e 0393     		str	r3, [sp, #12]
 998 0010 2D2B     		cmp	r3, #45
 999 0012 5BD8     		bhi	.L85
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1000              		.loc 1 699 0
 1001 0014 304B     		ldr	r3, .L96
 1002 0016 1B78     		ldrb	r3, [r3]
 1003 0018 9D42     		cmp	r5, r3
 1004 001a 04D8     		bhi	.L86
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1005              		.loc 1 701 0
 1006 001c 2F4B     		ldr	r3, .L96+4
 1007 001e 1C78     		ldrb	r4, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1008              		.loc 1 702 0
 1009 0020 2F4B     		ldr	r3, .L96+8
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1010              		.loc 1 701 0
 1011 0022 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 65


 1012              	.LVL66:
 1013 0024 1EE0     		b	.L94
 1014              	.LVL67:
 1015              	.L86:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1016              		.loc 1 704 0
 1017 0026 2F4B     		ldr	r3, .L96+12
 1018 0028 1B78     		ldrb	r3, [r3]
 1019 002a 9D42     		cmp	r5, r3
 1020 002c 04D8     		bhi	.L88
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1021              		.loc 1 706 0
 1022 002e 2E4B     		ldr	r3, .L96+16
 1023 0030 1C78     		ldrb	r4, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1024              		.loc 1 707 0
 1025 0032 2E4B     		ldr	r3, .L96+20
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1026              		.loc 1 706 0
 1027 0034 E4B2     		uxtb	r4, r4
 1028              	.LVL68:
 1029 0036 15E0     		b	.L94
 1030              	.LVL69:
 1031              	.L88:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1032              		.loc 1 709 0
 1033 0038 2D4B     		ldr	r3, .L96+24
 1034 003a 1B78     		ldrb	r3, [r3]
 1035 003c 9D42     		cmp	r5, r3
 1036 003e 04D8     		bhi	.L89
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1037              		.loc 1 711 0
 1038 0040 2C4B     		ldr	r3, .L96+28
 1039 0042 1C78     		ldrb	r4, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1040              		.loc 1 712 0
 1041 0044 2C4B     		ldr	r3, .L96+32
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1042              		.loc 1 711 0
 1043 0046 E4B2     		uxtb	r4, r4
 1044              	.LVL70:
 1045 0048 0CE0     		b	.L94
 1046              	.LVL71:
 1047              	.L89:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1048              		.loc 1 714 0
 1049 004a 2C4B     		ldr	r3, .L96+36
 1050 004c 1B78     		ldrb	r3, [r3]
 1051 004e 9D42     		cmp	r5, r3
 1052 0050 04D8     		bhi	.L90
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1053              		.loc 1 716 0
 1054 0052 2B4B     		ldr	r3, .L96+40
 1055 0054 1C78     		ldrb	r4, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1056              		.loc 1 717 0
 1057 0056 2B4B     		ldr	r3, .L96+44
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 66


 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1058              		.loc 1 716 0
 1059 0058 E4B2     		uxtb	r4, r4
 1060              	.LVL72:
 1061 005a 03E0     		b	.L94
 1062              	.LVL73:
 1063              	.L90:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1064              		.loc 1 721 0
 1065 005c 2A4B     		ldr	r3, .L96+48
 1066 005e 1C78     		ldrb	r4, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1067              		.loc 1 722 0
 1068 0060 2A4B     		ldr	r3, .L96+52
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1069              		.loc 1 721 0
 1070 0062 E4B2     		uxtb	r4, r4
 1071              	.LVL74:
 1072              	.L94:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1073              		.loc 1 722 0
 1074 0064 1B78     		ldrb	r3, [r3]
 726:Generated_Source\PSoC4/CyLib.c **** 
 1075              		.loc 1 726 0
 1076 0066 039A     		ldr	r2, [sp, #12]
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1077              		.loc 1 722 0
 1078 0068 DBB2     		uxtb	r3, r3
 1079 006a 0193     		str	r3, [sp, #4]
 1080              	.LVL75:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1081              		.loc 1 726 0
 1082 006c 284B     		ldr	r3, .L96+56
 1083 006e 294F     		ldr	r7, .L96+60
 1084 0070 9A5C     		ldrb	r2, [r3, r2]
 1085 0072 0593     		str	r3, [sp, #20]
 1086 0074 0292     		str	r2, [sp, #8]
 1087              	.LVL76:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1088              		.loc 1 738 0
 1089 0076 2F2A     		cmp	r2, #47
 1090 0078 04D9     		bls	.L91
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1091              		.loc 1 738 0 is_stmt 0 discriminator 1
 1092 007a 2A2D     		cmp	r5, #42
 1093 007c 02D9     		bls	.L91
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1094              		.loc 1 741 0 is_stmt 1
 1095 007e 1926     		mov	r6, #25
 1096 0080 3E60     		str	r6, [r7]
 1097 0082 08E0     		b	.L95
 1098              	.L91:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1099              		.loc 1 750 0
 1100 0084 3F23     		mov	r3, #63
 1101 0086 3E68     		ldr	r6, [r7]
 1102 0088 1E40     		and	r6, r3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 67


 1103              	.LVL77:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1104              		.loc 1 762 0
 1105 008a 029B     		ldr	r3, [sp, #8]
 1106 008c B342     		cmp	r3, r6
 1107 008e 05D2     		bcs	.L92
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1108              		.loc 1 765 0
 1109 0090 204B     		ldr	r3, .L96+60
 1110 0092 029A     		ldr	r2, [sp, #8]
 1111 0094 1A60     		str	r2, [r3]
 1112              	.LVL78:
 1113              	.L95:
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1114              		.loc 1 766 0
 1115 0096 0520     		mov	r0, #5
 1116 0098 FFF7FEFF 		bl	CyDelayCycles
 1117              	.LVL79:
 1118              	.L92:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1119              		.loc 1 785 0
 1120 009c 1B4B     		ldr	r3, .L96+52
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1121              		.loc 1 789 0
 1122 009e 1E4A     		ldr	r2, .L96+64
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1123              		.loc 1 785 0
 1124 00a0 ED18     		add	r5, r5, r3
 1125              	.LVL80:
 1126 00a2 2B78     		ldrb	r3, [r5]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1127              		.loc 1 792 0
 1128 00a4 0520     		mov	r0, #5
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1129              		.loc 1 785 0
 1130 00a6 DBB2     		uxtb	r3, r3
 1131              	.LVL81:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1132              		.loc 1 789 0
 1133 00a8 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1134              		.loc 1 790 0
 1135 00aa 1C4B     		ldr	r3, .L96+68
 1136              	.LVL82:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1137              		.loc 1 791 0
 1138 00ac 019A     		ldr	r2, [sp, #4]
 1139              	.LVL83:
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1140              		.loc 1 790 0
 1141 00ae 1C60     		str	r4, [r3]
 1142              	.LVL84:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1143              		.loc 1 791 0
 1144 00b0 1B4B     		ldr	r3, .L96+72
 1145 00b2 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 68


 1146              		.loc 1 792 0
 1147 00b4 FFF7FEFF 		bl	CyDelayUs
 1148              	.LVL85:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1149              		.loc 1 794 0
 1150 00b8 029B     		ldr	r3, [sp, #8]
 1151 00ba B342     		cmp	r3, r6
 1152 00bc 06D9     		bls	.L85
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1153              		.loc 1 797 0
 1154 00be 059B     		ldr	r3, [sp, #20]
 1155 00c0 039A     		ldr	r2, [sp, #12]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1156              		.loc 1 798 0
 1157 00c2 0520     		mov	r0, #5
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1158              		.loc 1 797 0
 1159 00c4 9B5C     		ldrb	r3, [r3, r2]
 1160 00c6 3B60     		str	r3, [r7]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1161              		.loc 1 798 0
 1162 00c8 FFF7FEFF 		bl	CyDelayCycles
 1163              	.LVL86:
 1164              	.L85:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1165              		.loc 1 823 0
 1166 00cc 0498     		ldr	r0, [sp, #16]
 1167 00ce FFF7FEFF 		bl	CyExitCriticalSection
 1168              	.LVL87:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1169              		.loc 1 824 0
 1170 00d2 07B0     		add	sp, sp, #28
 1171              		@ sp needed
 1172 00d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 1173              	.L97:
 1174 00d6 C046     		.align	2
 1175              	.L96:
 1176 00d8 C0F1FF0F 		.word	268431808
 1177 00dc C1F1FF0F 		.word	268431809
 1178 00e0 C2F1FF0F 		.word	268431810
 1179 00e4 C3F1FF0F 		.word	268431811
 1180 00e8 C4F1FF0F 		.word	268431812
 1181 00ec C5F1FF0F 		.word	268431813
 1182 00f0 C6F1FF0F 		.word	268431814
 1183 00f4 C7F1FF0F 		.word	268431815
 1184 00f8 C8F1FF0F 		.word	268431816
 1185 00fc C9F1FF0F 		.word	268431817
 1186 0100 CAF1FF0F 		.word	268431818
 1187 0104 CBF1FF0F 		.word	268431819
 1188 0108 CCF1FF0F 		.word	268431820
 1189 010c CDF1FF0F 		.word	268431821
 1190 0110 00000000 		.word	.LANCHOR1
 1191 0114 2CFF0B40 		.word	1074528044
 1192 0118 28FF0B40 		.word	1074528040
 1193 011c 1CFF0B40 		.word	1074528028
 1194 0120 20FF0B40 		.word	1074528032
 1195              		.cfi_endproc
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 69


 1196              	.LFE6:
 1197              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1198              		.section	.text.CySysLvdEnable,"ax",%progbits
 1199              		.align	1
 1200              		.global	CySysLvdEnable
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CySysLvdEnable, %function
 1204              	CySysLvdEnable:
 1205              	.LFB7:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1206              		.loc 1 2119 0
 1207              		.cfi_startproc
 1208              	.LVL88:
 1209 0000 38B5     		push	{r3, r4, r5, lr}
 1210              		.cfi_def_cfa_offset 16
 1211              		.cfi_offset 3, -16
 1212              		.cfi_offset 4, -12
 1213              		.cfi_offset 5, -8
 1214              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1215              		.loc 1 2121 0
 1216 0002 0225     		mov	r5, #2
2125:Generated_Source\PSoC4/CyLib.c **** 
 1217              		.loc 1 2125 0
 1218 0004 1E21     		mov	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 1219              		.loc 1 2121 0
 1220 0006 0C4C     		ldr	r4, .L99
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1221              		.loc 1 2124 0
 1222 0008 0C4A     		ldr	r2, .L99+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1223              		.loc 1 2121 0
 1224 000a 2368     		ldr	r3, [r4]
2125:Generated_Source\PSoC4/CyLib.c **** 
 1225              		.loc 1 2125 0
 1226 000c 4000     		lsl	r0, r0, #1
 1227              	.LVL89:
2121:Generated_Source\PSoC4/CyLib.c **** 
 1228              		.loc 1 2121 0
 1229 000e AB43     		bic	r3, r5
 1230 0010 2360     		str	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1231              		.loc 1 2124 0
 1232 0012 1368     		ldr	r3, [r2]
2125:Generated_Source\PSoC4/CyLib.c **** 
 1233              		.loc 1 2125 0
 1234 0014 0840     		and	r0, r1
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1235              		.loc 1 2124 0
 1236 0016 8B43     		bic	r3, r1
 1237 0018 1843     		orr	r0, r3
 1238 001a 1060     		str	r0, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1239              		.loc 1 2131 0
 1240 001c FA20     		mov	r0, #250
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 70


2128:Generated_Source\PSoC4/CyLib.c **** 
 1241              		.loc 1 2128 0
 1242 001e 1368     		ldr	r3, [r2]
 1243 0020 1D39     		sub	r1, r1, #29
 1244 0022 0B43     		orr	r3, r1
 1245 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1246              		.loc 1 2131 0
 1247 0026 8000     		lsl	r0, r0, #2
 1248 0028 FFF7FEFF 		bl	CyDelayUs
 1249              	.LVL90:
 1250              	.LBB8:
 1251              	.LBB9:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1252              		.loc 1 2184 0
 1253 002c 044B     		ldr	r3, .L99+8
 1254              	.LBE9:
 1255              	.LBE8:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1256              		.loc 1 2138 0
 1257              		@ sp needed
 1258              	.LBB11:
 1259              	.LBB10:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1260              		.loc 1 2184 0
 1261 002e 1D60     		str	r5, [r3]
 1262              	.LBE10:
 1263              	.LBE11:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1264              		.loc 1 2137 0
 1265 0030 2368     		ldr	r3, [r4]
 1266 0032 1D43     		orr	r5, r3
 1267 0034 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1268              		.loc 1 2138 0
 1269 0036 38BD     		pop	{r3, r4, r5, pc}
 1270              	.L100:
 1271              		.align	2
 1272              	.L99:
 1273 0038 08000B40 		.word	1074462728
 1274 003c 18000B40 		.word	1074462744
 1275 0040 04000B40 		.word	1074462724
 1276              		.cfi_endproc
 1277              	.LFE7:
 1278              		.size	CySysLvdEnable, .-CySysLvdEnable
 1279              		.global	__aeabi_uidiv
 1280              		.section	.text.CyDelayFreq,"ax",%progbits
 1281              		.align	1
 1282              		.global	CyDelayFreq
 1283              		.code	16
 1284              		.thumb_func
 1285              		.type	CyDelayFreq, %function
 1286              	CyDelayFreq:
 1287              	.LFB29:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 71


2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1288              		.loc 1 2597 0
 1289              		.cfi_startproc
 1290              	.LVL91:
 1291 0000 38B5     		push	{r3, r4, r5, lr}
 1292              		.cfi_def_cfa_offset 16
 1293              		.cfi_offset 3, -16
 1294              		.cfi_offset 4, -12
 1295              		.cfi_offset 5, -8
 1296              		.cfi_offset 14, -4
 1297 0002 0C4C     		ldr	r4, .L104
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1298              		.loc 1 2598 0
 1299 0004 0028     		cmp	r0, #0
 1300 0006 01D0     		beq	.L102
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1301              		.loc 1 2600 0
 1302 0008 2061     		str	r0, [r4, #16]
 1303 000a 01E0     		b	.L103
 1304              	.L102:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1305              		.loc 1 2604 0
 1306 000c 0A4B     		ldr	r3, .L104+4
 1307 000e 2361     		str	r3, [r4, #16]
 1308              	.L103:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1309              		.loc 1 2607 0
 1310 0010 2569     		ldr	r5, [r4, #16]
 1311 0012 0A4B     		ldr	r3, .L104+8
 1312 0014 0A49     		ldr	r1, .L104+12
 1313 0016 E818     		add	r0, r5, r3
 1314              	.LVL92:
 1315 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1316              	.LVL93:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1317              		.loc 1 2608 0
 1318 001c FA21     		mov	r1, #250
 1319 001e 094B     		ldr	r3, .L104+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1320              		.loc 1 2607 0
 1321 0020 2073     		strb	r0, [r4, #12]
 1322              		.loc 1 2608 0
 1323 0022 8900     		lsl	r1, r1, #2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 72


 1324 0024 E818     		add	r0, r5, r3
 1325 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1326              	.LVL94:
 1327 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1328              		.loc 1 2609 0
 1329 002c C003     		lsl	r0, r0, #15
 1330 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1331              		.loc 1 2610 0
 1332              		@ sp needed
 1333 0030 38BD     		pop	{r3, r4, r5, pc}
 1334              	.L105:
 1335 0032 C046     		.align	2
 1336              	.L104:
 1337 0034 00000000 		.word	.LANCHOR0
 1338 0038 00366E01 		.word	24000000
 1339 003c 3F420F00 		.word	999999
 1340 0040 40420F00 		.word	1000000
 1341 0044 E7030000 		.word	999
 1342              		.cfi_endproc
 1343              	.LFE29:
 1344              		.size	CyDelayFreq, .-CyDelayFreq
 1345              		.section	.text.CySysTickInit,"ax",%progbits
 1346              		.align	1
 1347              		.global	CySysTickInit
 1348              		.code	16
 1349              		.thumb_func
 1350              		.type	CySysTickInit, %function
 1351              	CySysTickInit:
 1352              	.LFB31:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 73


2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1353              		.loc 1 2658 0
 1354              		.cfi_startproc
 1355              	.LVL95:
 1356 0000 10B5     		push	{r4, lr}
 1357              		.cfi_def_cfa_offset 8
 1358              		.cfi_offset 4, -8
 1359              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1360              		.loc 1 2663 0
 1361 0002 0024     		mov	r4, #0
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 1362              		.loc 1 2672 0
 1363 0004 FA21     		mov	r1, #250
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1364              		.loc 1 2663 0
 1365 0006 0B4B     		ldr	r3, .L107
 1366              	.LBB20:
 1367              	.LBB21:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1368              		.loc 1 2290 0
 1369 0008 0B4A     		ldr	r2, .L107+4
 1370              	.LBE21:
 1371              	.LBE20:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 74


2663:Generated_Source\PSoC4/CyLib.c ****     }
 1372              		.loc 1 2663 0
 1373 000a 1C60     		str	r4, [r3]
 1374              	.LVL96:
 1375 000c 1C61     		str	r4, [r3, #16]
 1376 000e 5C60     		str	r4, [r3, #4]
 1377              	.LVL97:
 1378 0010 9C60     		str	r4, [r3, #8]
 1379              	.LVL98:
 1380 0012 DC60     		str	r4, [r3, #12]
 1381              	.LVL99:
 1382              	.LBB24:
 1383              	.LBB22:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1384              		.loc 1 2290 0
 1385 0014 094B     		ldr	r3, .L107+8
 1386              	.LVL100:
 1387              	.LBE22:
 1388              	.LBE24:
 1389              		.loc 1 2672 0
 1390 0016 8900     		lsl	r1, r1, #2
 1391              	.LBB25:
 1392              	.LBB23:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1393              		.loc 1 2290 0
 1394 0018 1A60     		str	r2, [r3]
 1395              	.LVL101:
 1396              	.LBE23:
 1397              	.LBE25:
 1398              		.loc 1 2672 0
 1399 001a 094B     		ldr	r3, .L107+12
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
 1400              		.loc 1 2675 0
 1401              		@ sp needed
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1402              		.loc 1 2672 0
 1403 001c 1869     		ldr	r0, [r3, #16]
 1404 001e FFF7FEFF 		bl	__aeabi_uidiv
 1405              	.LVL102:
 1406              	.LBB26:
 1407              	.LBB27:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1408              		.loc 1 2439 0
 1409 0022 8022     		mov	r2, #128
 1410              	.LBE27:
 1411              	.LBE26:
 1412              	.LBB30:
 1413              	.LBB31:
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 75


2683:Generated_Source\PSoC4/CyLib.c **** *
2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2708:Generated_Source\PSoC4/CyLib.c **** }
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2724:Generated_Source\PSoC4/CyLib.c **** }
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 76


2740:Generated_Source\PSoC4/CyLib.c **** }
2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1414              		.loc 1 2756 0
 1415 0024 074B     		ldr	r3, .L107+16
 1416              	.LBE31:
 1417              	.LBE30:
 1418              	.LBB33:
 1419              	.LBB28:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1420              		.loc 1 2439 0
 1421 0026 1202     		lsl	r2, r2, #8
 1422              	.LBE28:
 1423              	.LBE33:
 1424              	.LBB34:
 1425              	.LBB32:
 1426              		.loc 1 2756 0
 1427 0028 1860     		str	r0, [r3]
 1428              	.LBE32:
 1429              	.LBE34:
 1430              	.LBB35:
 1431              	.LBB36:
2757:Generated_Source\PSoC4/CyLib.c **** }
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 77


2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2789:Generated_Source\PSoC4/CyLib.c **** }
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 78


2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2869:Generated_Source\PSoC4/CyLib.c **** }
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1432              		.loc 1 2881 0
 1433 002a 074B     		ldr	r3, .L107+20
 1434 002c 1C60     		str	r4, [r3]
 1435              	.LVL103:
 1436              	.LBE36:
 1437              	.LBE35:
 1438              	.LBB37:
 1439              	.LBB29:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1440              		.loc 1 2439 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 79


 1441 002e 074B     		ldr	r3, .L107+24
 1442 0030 1A60     		str	r2, [r3]
 1443              	.LBE29:
 1444              	.LBE37:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1445              		.loc 1 2675 0
 1446 0032 10BD     		pop	{r4, pc}
 1447              	.L108:
 1448              		.align	2
 1449              	.L107:
 1450 0034 00000000 		.word	.LANCHOR2
 1451 0038 00000000 		.word	CySysTickServiceCallbacks
 1452 003c 3C000020 		.word	536870972
 1453 0040 00000000 		.word	.LANCHOR0
 1454 0044 14E000E0 		.word	-536813548
 1455 0048 18E000E0 		.word	-536813544
 1456 004c 00E100E0 		.word	-536813312
 1457              		.cfi_endproc
 1458              	.LFE31:
 1459              		.size	CySysTickInit, .-CySysTickInit
 1460              		.section	.text.CySysTickStop,"ax",%progbits
 1461              		.align	1
 1462              		.global	CySysTickStop
 1463              		.code	16
 1464              		.thumb_func
 1465              		.type	CySysTickStop, %function
 1466              	CySysTickStop:
 1467              	.LFB33:
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1468              		.loc 1 2706 0
 1469              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c **** }
 1470              		.loc 1 2707 0
 1471 0000 0121     		mov	r1, #1
 1472 0002 024A     		ldr	r2, .L110
2708:Generated_Source\PSoC4/CyLib.c **** 
 1473              		.loc 1 2708 0
 1474              		@ sp needed
2707:Generated_Source\PSoC4/CyLib.c **** }
 1475              		.loc 1 2707 0
 1476 0004 1368     		ldr	r3, [r2]
 1477 0006 8B43     		bic	r3, r1
 1478 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** 
 1479              		.loc 1 2708 0
 1480 000a 7047     		bx	lr
 1481              	.L111:
 1482              		.align	2
 1483              	.L110:
 1484 000c 10E000E0 		.word	-536813552
 1485              		.cfi_endproc
 1486              	.LFE33:
 1487              		.size	CySysTickStop, .-CySysTickStop
 1488              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1489              		.align	1
 1490              		.global	CySysTickEnableInterrupt
 1491              		.code	16
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 80


 1492              		.thumb_func
 1493              		.type	CySysTickEnableInterrupt, %function
 1494              	CySysTickEnableInterrupt:
 1495              	.LFB34:
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1496              		.loc 1 2722 0
 1497              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c **** }
 1498              		.loc 1 2723 0
 1499 0000 0221     		mov	r1, #2
 1500 0002 024A     		ldr	r2, .L113
2724:Generated_Source\PSoC4/CyLib.c **** 
 1501              		.loc 1 2724 0
 1502              		@ sp needed
2723:Generated_Source\PSoC4/CyLib.c **** }
 1503              		.loc 1 2723 0
 1504 0004 1368     		ldr	r3, [r2]
 1505 0006 0B43     		orr	r3, r1
 1506 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** 
 1507              		.loc 1 2724 0
 1508 000a 7047     		bx	lr
 1509              	.L114:
 1510              		.align	2
 1511              	.L113:
 1512 000c 10E000E0 		.word	-536813552
 1513              		.cfi_endproc
 1514              	.LFE34:
 1515              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1516              		.section	.text.CySysTickEnable,"ax",%progbits
 1517              		.align	1
 1518              		.global	CySysTickEnable
 1519              		.code	16
 1520              		.thumb_func
 1521              		.type	CySysTickEnable, %function
 1522              	CySysTickEnable:
 1523              	.LFB32:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1524              		.loc 1 2689 0
 1525              		.cfi_startproc
 1526 0000 08B5     		push	{r3, lr}
 1527              		.cfi_def_cfa_offset 8
 1528              		.cfi_offset 3, -8
 1529              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1530              		.loc 1 2690 0
 1531 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1532              	.LVL104:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1533              		.loc 1 2691 0
 1534 0006 0121     		mov	r1, #1
 1535 0008 024A     		ldr	r2, .L116
2692:Generated_Source\PSoC4/CyLib.c **** 
 1536              		.loc 1 2692 0
 1537              		@ sp needed
2691:Generated_Source\PSoC4/CyLib.c **** }
 1538              		.loc 1 2691 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 81


 1539 000a 1368     		ldr	r3, [r2]
 1540 000c 0B43     		orr	r3, r1
 1541 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1542              		.loc 1 2692 0
 1543 0010 08BD     		pop	{r3, pc}
 1544              	.L117:
 1545 0012 C046     		.align	2
 1546              	.L116:
 1547 0014 10E000E0 		.word	-536813552
 1548              		.cfi_endproc
 1549              	.LFE32:
 1550              		.size	CySysTickEnable, .-CySysTickEnable
 1551              		.section	.text.CySysTickStart,"ax",%progbits
 1552              		.align	1
 1553              		.global	CySysTickStart
 1554              		.code	16
 1555              		.thumb_func
 1556              		.type	CySysTickStart, %function
 1557              	CySysTickStart:
 1558              	.LFB30:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1559              		.loc 1 2629 0
 1560              		.cfi_startproc
 1561 0000 10B5     		push	{r4, lr}
 1562              		.cfi_def_cfa_offset 8
 1563              		.cfi_offset 4, -8
 1564              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1565              		.loc 1 2630 0
 1566 0002 054C     		ldr	r4, .L120
 1567 0004 6369     		ldr	r3, [r4, #20]
 1568 0006 002B     		cmp	r3, #0
 1569 0008 03D1     		bne	.L119
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1570              		.loc 1 2632 0
 1571 000a FFF7FEFF 		bl	CySysTickInit
 1572              	.LVL105:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1573              		.loc 1 2633 0
 1574 000e 0123     		mov	r3, #1
 1575 0010 6361     		str	r3, [r4, #20]
 1576              	.L119:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1577              		.loc 1 2636 0
 1578 0012 FFF7FEFF 		bl	CySysTickEnable
 1579              	.LVL106:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1580              		.loc 1 2637 0
 1581              		@ sp needed
 1582 0016 10BD     		pop	{r4, pc}
 1583              	.L121:
 1584              		.align	2
 1585              	.L120:
 1586 0018 00000000 		.word	.LANCHOR2
 1587              		.cfi_endproc
 1588              	.LFE30:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 82


 1589              		.size	CySysTickStart, .-CySysTickStart
 1590              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1591              		.align	1
 1592              		.global	CySysTickDisableInterrupt
 1593              		.code	16
 1594              		.thumb_func
 1595              		.type	CySysTickDisableInterrupt, %function
 1596              	CySysTickDisableInterrupt:
 1597              	.LFB35:
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1598              		.loc 1 2738 0
 1599              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c **** }
 1600              		.loc 1 2739 0
 1601 0000 0221     		mov	r1, #2
 1602 0002 024A     		ldr	r2, .L123
2740:Generated_Source\PSoC4/CyLib.c **** 
 1603              		.loc 1 2740 0
 1604              		@ sp needed
2739:Generated_Source\PSoC4/CyLib.c **** }
 1605              		.loc 1 2739 0
 1606 0004 1368     		ldr	r3, [r2]
 1607 0006 8B43     		bic	r3, r1
 1608 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** 
 1609              		.loc 1 2740 0
 1610 000a 7047     		bx	lr
 1611              	.L124:
 1612              		.align	2
 1613              	.L123:
 1614 000c 10E000E0 		.word	-536813552
 1615              		.cfi_endproc
 1616              	.LFE35:
 1617              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1618              		.section	.text.CySysTickSetReload,"ax",%progbits
 1619              		.align	1
 1620              		.global	CySysTickSetReload
 1621              		.code	16
 1622              		.thumb_func
 1623              		.type	CySysTickSetReload, %function
 1624              	CySysTickSetReload:
 1625              	.LFB36:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1626              		.loc 1 2755 0
 1627              		.cfi_startproc
 1628              	.LVL107:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1629              		.loc 1 2756 0
 1630 0000 024B     		ldr	r3, .L126
 1631 0002 0002     		lsl	r0, r0, #8
 1632              	.LVL108:
 1633 0004 000A     		lsr	r0, r0, #8
 1634 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** 
 1635              		.loc 1 2757 0
 1636              		@ sp needed
 1637 0008 7047     		bx	lr
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 83


 1638              	.L127:
 1639 000a C046     		.align	2
 1640              	.L126:
 1641 000c 14E000E0 		.word	-536813548
 1642              		.cfi_endproc
 1643              	.LFE36:
 1644              		.size	CySysTickSetReload, .-CySysTickSetReload
 1645              		.section	.text.CySysTickGetReload,"ax",%progbits
 1646              		.align	1
 1647              		.global	CySysTickGetReload
 1648              		.code	16
 1649              		.thumb_func
 1650              		.type	CySysTickGetReload, %function
 1651              	CySysTickGetReload:
 1652              	.LFB37:
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1653              		.loc 1 2771 0
 1654              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c **** }
 1655              		.loc 1 2772 0
 1656 0000 024B     		ldr	r3, .L129
2773:Generated_Source\PSoC4/CyLib.c **** 
 1657              		.loc 1 2773 0
 1658              		@ sp needed
2772:Generated_Source\PSoC4/CyLib.c **** }
 1659              		.loc 1 2772 0
 1660 0002 1868     		ldr	r0, [r3]
 1661 0004 0002     		lsl	r0, r0, #8
 1662 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** 
 1663              		.loc 1 2773 0
 1664 0008 7047     		bx	lr
 1665              	.L130:
 1666 000a C046     		.align	2
 1667              	.L129:
 1668 000c 14E000E0 		.word	-536813548
 1669              		.cfi_endproc
 1670              	.LFE37:
 1671              		.size	CySysTickGetReload, .-CySysTickGetReload
 1672              		.section	.text.CySysTickGetValue,"ax",%progbits
 1673              		.align	1
 1674              		.global	CySysTickGetValue
 1675              		.code	16
 1676              		.thumb_func
 1677              		.type	CySysTickGetValue, %function
 1678              	CySysTickGetValue:
 1679              	.LFB38:
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1680              		.loc 1 2787 0
 1681              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c **** }
 1682              		.loc 1 2788 0
 1683 0000 024B     		ldr	r3, .L132
2789:Generated_Source\PSoC4/CyLib.c **** 
 1684              		.loc 1 2789 0
 1685              		@ sp needed
2788:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 84


 1686              		.loc 1 2788 0
 1687 0002 1868     		ldr	r0, [r3]
 1688 0004 0002     		lsl	r0, r0, #8
 1689 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** 
 1690              		.loc 1 2789 0
 1691 0008 7047     		bx	lr
 1692              	.L133:
 1693 000a C046     		.align	2
 1694              	.L132:
 1695 000c 18E000E0 		.word	-536813544
 1696              		.cfi_endproc
 1697              	.LFE38:
 1698              		.size	CySysTickGetValue, .-CySysTickGetValue
 1699              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1700              		.align	1
 1701              		.global	CySysTickGetCountFlag
 1702              		.code	16
 1703              		.thumb_func
 1704              		.type	CySysTickGetCountFlag, %function
 1705              	CySysTickGetCountFlag:
 1706              	.LFB39:
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1707              		.loc 1 2867 0
 1708              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c **** }
 1709              		.loc 1 2868 0
 1710 0000 024B     		ldr	r3, .L135
2869:Generated_Source\PSoC4/CyLib.c **** 
 1711              		.loc 1 2869 0
 1712              		@ sp needed
2868:Generated_Source\PSoC4/CyLib.c **** }
 1713              		.loc 1 2868 0
 1714 0002 1868     		ldr	r0, [r3]
 1715 0004 C003     		lsl	r0, r0, #15
 1716 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** 
 1717              		.loc 1 2869 0
 1718 0008 7047     		bx	lr
 1719              	.L136:
 1720 000a C046     		.align	2
 1721              	.L135:
 1722 000c 10E000E0 		.word	-536813552
 1723              		.cfi_endproc
 1724              	.LFE39:
 1725              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1726              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1727              		.align	1
 1728              		.code	16
 1729              		.thumb_func
 1730              		.type	CySysTickServiceCallbacks, %function
 1731              	CySysTickServiceCallbacks:
 1732              	.LFB43:
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 85


2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 86


2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 1733              		.loc 1 2952 0
 1734              		.cfi_startproc
 1735 0000 10B5     		push	{r4, lr}
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 4, -8
 1738              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1739              		.loc 1 2956 0
 1740 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1741              	.LVL109:
 1742 0006 0128     		cmp	r0, #1
 1743 0008 08D1     		bne	.L137
 1744 000a 0024     		mov	r4, #0
 1745              	.L138:
 1746              	.LBB40:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1747              		.loc 1 2960 0
 1748 000c 044B     		ldr	r3, .L145
 1749 000e E358     		ldr	r3, [r4, r3]
 1750 0010 002B     		cmp	r3, #0
 1751 0012 00D0     		beq	.L139
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1752              		.loc 1 2962 0
 1753 0014 9847     		blx	r3
 1754              	.LVL110:
 1755              	.L139:
 1756 0016 0434     		add	r4, r4, #4
2958:Generated_Source\PSoC4/CyLib.c ****         {
 1757              		.loc 1 2958 0
 1758 0018 142C     		cmp	r4, #20
 1759 001a F7D1     		bne	.L138
 1760              	.L137:
 1761              	.LBE40:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 1762              		.loc 1 2966 0
 1763              		@ sp needed
 1764 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 87


 1765              	.L146:
 1766 001e C046     		.align	2
 1767              	.L145:
 1768 0020 00000000 		.word	.LANCHOR2
 1769              		.cfi_endproc
 1770              	.LFE43:
 1771              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1772              		.section	.text.CySysTickClear,"ax",%progbits
 1773              		.align	1
 1774              		.global	CySysTickClear
 1775              		.code	16
 1776              		.thumb_func
 1777              		.type	CySysTickClear, %function
 1778              	CySysTickClear:
 1779              	.LFB40:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1780              		.loc 1 2880 0
 1781              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 1782              		.loc 1 2881 0
 1783 0000 0022     		mov	r2, #0
 1784 0002 014B     		ldr	r3, .L148
2882:Generated_Source\PSoC4/CyLib.c **** 
 1785              		.loc 1 2882 0
 1786              		@ sp needed
2881:Generated_Source\PSoC4/CyLib.c **** }
 1787              		.loc 1 2881 0
 1788 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 1789              		.loc 1 2882 0
 1790 0006 7047     		bx	lr
 1791              	.L149:
 1792              		.align	2
 1793              	.L148:
 1794 0008 18E000E0 		.word	-536813544
 1795              		.cfi_endproc
 1796              	.LFE40:
 1797              		.size	CySysTickClear, .-CySysTickClear
 1798              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1799              		.align	1
 1800              		.global	CySysTickSetCallback
 1801              		.code	16
 1802              		.thumb_func
 1803              		.type	CySysTickSetCallback, %function
 1804              	CySysTickSetCallback:
 1805              	.LFB41:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 1806              		.loc 1 2915 0
 1807              		.cfi_startproc
 1808              	.LVL111:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 1809              		.loc 1 2918 0
 1810 0000 024A     		ldr	r2, .L151
 1811 0002 8300     		lsl	r3, r0, #2
 1812 0004 9858     		ldr	r0, [r3, r2]
 1813              	.LVL112:
2921:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 88


 1814              		.loc 1 2921 0
 1815              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 1816              		.loc 1 2919 0
 1817 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 1818              		.loc 1 2921 0
 1819 0008 7047     		bx	lr
 1820              	.L152:
 1821 000a C046     		.align	2
 1822              	.L151:
 1823 000c 00000000 		.word	.LANCHOR2
 1824              		.cfi_endproc
 1825              	.LFE41:
 1826              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 1827              		.section	.text.CySysTickGetCallback,"ax",%progbits
 1828              		.align	1
 1829              		.global	CySysTickGetCallback
 1830              		.code	16
 1831              		.thumb_func
 1832              		.type	CySysTickGetCallback, %function
 1833              	CySysTickGetCallback:
 1834              	.LFB42:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 1835              		.loc 1 2939 0
 1836              		.cfi_startproc
 1837              	.LVL113:
2940:Generated_Source\PSoC4/CyLib.c **** }
 1838              		.loc 1 2940 0
 1839 0000 014B     		ldr	r3, .L154
 1840 0002 8000     		lsl	r0, r0, #2
 1841              	.LVL114:
 1842 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 1843              		.loc 1 2941 0
 1844              		@ sp needed
 1845 0006 7047     		bx	lr
 1846              	.L155:
 1847              		.align	2
 1848              	.L154:
 1849 0008 00000000 		.word	.LANCHOR2
 1850              		.cfi_endproc
 1851              	.LFE42:
 1852              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 1853              		.section	.text.CyGetUniqueId,"ax",%progbits
 1854              		.align	1
 1855              		.global	CyGetUniqueId
 1856              		.code	16
 1857              		.thumb_func
 1858              		.type	CyGetUniqueId, %function
 1859              	CyGetUniqueId:
 1860              	.LFB44:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 89


2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 1861              		.loc 1 2984 0
 1862              		.cfi_startproc
 1863              	.LVL115:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 1864              		.loc 1 2986 0
 1865 0000 134B     		ldr	r3, .L157
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 1866              		.loc 1 3006 0
 1867              		@ sp needed
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1868              		.loc 1 2986 0
 1869 0002 1B78     		ldrb	r3, [r3]
 1870 0004 DAB2     		uxtb	r2, r3
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1871              		.loc 1 2987 0
 1872 0006 134B     		ldr	r3, .L157+4
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1873              		.loc 1 2986 0
 1874 0008 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1875              		.loc 1 2987 0
 1876 000a 1B78     		ldrb	r3, [r3]
 1877 000c 1B02     		lsl	r3, r3, #8
 1878 000e 1343     		orr	r3, r2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 90


2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1879              		.loc 1 2988 0
 1880 0010 114A     		ldr	r2, .L157+8
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 1881              		.loc 1 2987 0
 1882 0012 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1883              		.loc 1 2988 0
 1884 0014 1278     		ldrb	r2, [r2]
 1885 0016 1204     		lsl	r2, r2, #16
 1886 0018 1343     		orr	r3, r2
2989:Generated_Source\PSoC4/CyLib.c **** 
 1887              		.loc 1 2989 0
 1888 001a 104A     		ldr	r2, .L157+12
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 1889              		.loc 1 2988 0
 1890 001c 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
 1891              		.loc 1 2989 0
 1892 001e 1278     		ldrb	r2, [r2]
 1893 0020 1206     		lsl	r2, r2, #24
 1894 0022 1343     		orr	r3, r2
 1895 0024 0360     		str	r3, [r0]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1896              		.loc 1 2991 0
 1897 0026 0E4B     		ldr	r3, .L157+16
 1898 0028 1B78     		ldrb	r3, [r3]
 1899 002a DAB2     		uxtb	r2, r3
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1900              		.loc 1 2992 0
 1901 002c 0D4B     		ldr	r3, .L157+20
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 1902              		.loc 1 2991 0
 1903 002e 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1904              		.loc 1 2992 0
 1905 0030 1B78     		ldrb	r3, [r3]
 1906 0032 1B02     		lsl	r3, r3, #8
 1907 0034 1343     		orr	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1908              		.loc 1 2993 0
 1909 0036 0C4A     		ldr	r2, .L157+24
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 1910              		.loc 1 2992 0
 1911 0038 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1912              		.loc 1 2993 0
 1913 003a 1278     		ldrb	r2, [r2]
 1914 003c 1204     		lsl	r2, r2, #16
 1915 003e 1343     		orr	r3, r2
2994:Generated_Source\PSoC4/CyLib.c **** #else
 1916              		.loc 1 2994 0
 1917 0040 0A4A     		ldr	r2, .L157+28
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 1918              		.loc 1 2993 0
 1919 0042 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 91


 1920              		.loc 1 2994 0
 1921 0044 1278     		ldrb	r2, [r2]
 1922 0046 1206     		lsl	r2, r2, #24
 1923 0048 1343     		orr	r3, r2
 1924 004a 4360     		str	r3, [r0, #4]
 1925              		.loc 1 3006 0
 1926 004c 7047     		bx	lr
 1927              	.L158:
 1928 004e C046     		.align	2
 1929              	.L157:
 1930 0050 78F1FF0F 		.word	268431736
 1931 0054 79F1FF0F 		.word	268431737
 1932 0058 7AF1FF0F 		.word	268431738
 1933 005c 7BF1FF0F 		.word	268431739
 1934 0060 7CF1FF0F 		.word	268431740
 1935 0064 7DF1FF0F 		.word	268431741
 1936 0068 7EF1FF0F 		.word	268431742
 1937 006c 7FF1FF0F 		.word	268431743
 1938              		.cfi_endproc
 1939              	.LFE44:
 1940              		.size	CyGetUniqueId, .-CyGetUniqueId
 1941              		.global	CySysClkPumpConfig
 1942              		.global	cyImoFreqMhz2Reg
 1943              		.global	CySysTickInitVar
 1944              		.global	cydelay32kMs
 1945              		.global	cydelayFreqMhz
 1946              		.global	cydelayFreqKhz
 1947              		.global	cydelayFreqHz
 1948              		.section	.rodata
 1949              		.set	.LANCHOR1,. + 0
 1950              		.type	cyImoFreqMhz2Reg, %object
 1951              		.size	cyImoFreqMhz2Reg, 46
 1952              	cyImoFreqMhz2Reg:
 1953 0000 03       		.byte	3
 1954 0001 04       		.byte	4
 1955 0002 05       		.byte	5
 1956 0003 06       		.byte	6
 1957 0004 07       		.byte	7
 1958 0005 08       		.byte	8
 1959 0006 09       		.byte	9
 1960 0007 0A       		.byte	10
 1961 0008 0B       		.byte	11
 1962 0009 0C       		.byte	12
 1963 000a 0E       		.byte	14
 1964 000b 0F       		.byte	15
 1965 000c 10       		.byte	16
 1966 000d 11       		.byte	17
 1967 000e 12       		.byte	18
 1968 000f 13       		.byte	19
 1969 0010 14       		.byte	20
 1970 0011 15       		.byte	21
 1971 0012 16       		.byte	22
 1972 0013 17       		.byte	23
 1973 0014 18       		.byte	24
 1974 0015 19       		.byte	25
 1975 0016 1B       		.byte	27
 1976 0017 1C       		.byte	28
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 92


 1977 0018 1D       		.byte	29
 1978 0019 1E       		.byte	30
 1979 001a 1F       		.byte	31
 1980 001b 20       		.byte	32
 1981 001c 21       		.byte	33
 1982 001d 22       		.byte	34
 1983 001e 23       		.byte	35
 1984 001f 25       		.byte	37
 1985 0020 26       		.byte	38
 1986 0021 27       		.byte	39
 1987 0022 28       		.byte	40
 1988 0023 29       		.byte	41
 1989 0024 2A       		.byte	42
 1990 0025 2B       		.byte	43
 1991 0026 2E       		.byte	46
 1992 0027 2F       		.byte	47
 1993 0028 30       		.byte	48
 1994 0029 31       		.byte	49
 1995 002a 32       		.byte	50
 1996 002b 33       		.byte	51
 1997 002c 34       		.byte	52
 1998 002d 35       		.byte	53
 1999              		.data
 2000              		.align	2
 2001              		.set	.LANCHOR0,. + 0
 2002              		.type	CySysClkPumpConfig, %object
 2003              		.size	CySysClkPumpConfig, 4
 2004              	CySysClkPumpConfig:
 2005 0000 01000000 		.word	1
 2006              		.type	cydelay32kMs, %object
 2007              		.size	cydelay32kMs, 4
 2008              	cydelay32kMs:
 2009 0004 0000E02E 		.word	786432000
 2010              		.type	cydelayFreqKhz, %object
 2011              		.size	cydelayFreqKhz, 4
 2012              	cydelayFreqKhz:
 2013 0008 C05D0000 		.word	24000
 2014              		.type	cydelayFreqMhz, %object
 2015              		.size	cydelayFreqMhz, 1
 2016              	cydelayFreqMhz:
 2017 000c 18       		.byte	24
 2018 000d 000000   		.space	3
 2019              		.type	cydelayFreqHz, %object
 2020              		.size	cydelayFreqHz, 4
 2021              	cydelayFreqHz:
 2022 0010 00366E01 		.word	24000000
 2023              		.bss
 2024              		.align	2
 2025              		.set	.LANCHOR2,. + 0
 2026              		.type	CySysTickCallbacks, %object
 2027              		.size	CySysTickCallbacks, 20
 2028              	CySysTickCallbacks:
 2029 0000 00000000 		.space	20
 2029      00000000 
 2029      00000000 
 2029      00000000 
 2029      00000000 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 93


 2030              		.type	CySysTickInitVar, %object
 2031              		.size	CySysTickInitVar, 4
 2032              	CySysTickInitVar:
 2033 0014 00000000 		.space	4
 2034              		.text
 2035              	.Letext0:
 2036              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2037              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2038              		.section	.debug_info,"",%progbits
 2039              	.Ldebug_info0:
 2040 0000 1F0B0000 		.4byte	0xb1f
 2041 0004 0400     		.2byte	0x4
 2042 0006 00000000 		.4byte	.Ldebug_abbrev0
 2043 000a 04       		.byte	0x4
 2044 000b 01       		.uleb128 0x1
 2045 000c 1E000000 		.4byte	.LASF101
 2046 0010 01       		.byte	0x1
 2047 0011 A8060000 		.4byte	.LASF102
 2048 0015 61050000 		.4byte	.LASF103
 2049 0019 70000000 		.4byte	.Ldebug_ranges0+0x70
 2050 001d 00000000 		.4byte	0
 2051 0021 00000000 		.4byte	.Ldebug_line0
 2052 0025 02       		.uleb128 0x2
 2053 0026 01       		.byte	0x1
 2054 0027 06       		.byte	0x6
 2055 0028 8C010000 		.4byte	.LASF0
 2056 002c 02       		.uleb128 0x2
 2057 002d 01       		.byte	0x1
 2058 002e 08       		.byte	0x8
 2059 002f D4040000 		.4byte	.LASF1
 2060 0033 02       		.uleb128 0x2
 2061 0034 02       		.byte	0x2
 2062 0035 05       		.byte	0x5
 2063 0036 E9040000 		.4byte	.LASF2
 2064 003a 02       		.uleb128 0x2
 2065 003b 02       		.byte	0x2
 2066 003c 07       		.byte	0x7
 2067 003d 44030000 		.4byte	.LASF3
 2068 0041 02       		.uleb128 0x2
 2069 0042 04       		.byte	0x4
 2070 0043 05       		.byte	0x5
 2071 0044 CB010000 		.4byte	.LASF4
 2072 0048 02       		.uleb128 0x2
 2073 0049 04       		.byte	0x4
 2074 004a 07       		.byte	0x7
 2075 004b CC020000 		.4byte	.LASF5
 2076 004f 02       		.uleb128 0x2
 2077 0050 08       		.byte	0x8
 2078 0051 05       		.byte	0x5
 2079 0052 7E010000 		.4byte	.LASF6
 2080 0056 02       		.uleb128 0x2
 2081 0057 08       		.byte	0x8
 2082 0058 07       		.byte	0x7
 2083 0059 12010000 		.4byte	.LASF7
 2084 005d 03       		.uleb128 0x3
 2085 005e 04       		.byte	0x4
 2086 005f 05       		.byte	0x5
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 94


 2087 0060 696E7400 		.ascii	"int\000"
 2088 0064 02       		.uleb128 0x2
 2089 0065 04       		.byte	0x4
 2090 0066 07       		.byte	0x7
 2091 0067 B0020000 		.4byte	.LASF8
 2092 006b 04       		.uleb128 0x4
 2093 006c F6010000 		.4byte	.LASF9
 2094 0070 02       		.byte	0x2
 2095 0071 B901     		.2byte	0x1b9
 2096 0073 2C000000 		.4byte	0x2c
 2097 0077 04       		.uleb128 0x4
 2098 0078 17000000 		.4byte	.LASF10
 2099 007c 02       		.byte	0x2
 2100 007d BA01     		.2byte	0x1ba
 2101 007f 3A000000 		.4byte	0x3a
 2102 0083 04       		.uleb128 0x4
 2103 0084 36020000 		.4byte	.LASF11
 2104 0088 02       		.byte	0x2
 2105 0089 BB01     		.2byte	0x1bb
 2106 008b 48000000 		.4byte	0x48
 2107 008f 02       		.uleb128 0x2
 2108 0090 04       		.byte	0x4
 2109 0091 04       		.byte	0x4
 2110 0092 57040000 		.4byte	.LASF12
 2111 0096 02       		.uleb128 0x2
 2112 0097 08       		.byte	0x8
 2113 0098 04       		.byte	0x4
 2114 0099 12020000 		.4byte	.LASF13
 2115 009d 02       		.uleb128 0x2
 2116 009e 01       		.byte	0x1
 2117 009f 08       		.byte	0x8
 2118 00a0 3F050000 		.4byte	.LASF14
 2119 00a4 04       		.uleb128 0x4
 2120 00a5 BE040000 		.4byte	.LASF15
 2121 00a9 02       		.byte	0x2
 2122 00aa 6302     		.2byte	0x263
 2123 00ac B0000000 		.4byte	0xb0
 2124 00b0 05       		.uleb128 0x5
 2125 00b1 6B000000 		.4byte	0x6b
 2126 00b5 04       		.uleb128 0x4
 2127 00b6 B2030000 		.4byte	.LASF16
 2128 00ba 02       		.byte	0x2
 2129 00bb 6502     		.2byte	0x265
 2130 00bd C1000000 		.4byte	0xc1
 2131 00c1 05       		.uleb128 0x5
 2132 00c2 83000000 		.4byte	0x83
 2133 00c6 04       		.uleb128 0x4
 2134 00c7 44050000 		.4byte	.LASF17
 2135 00cb 02       		.byte	0x2
 2136 00cc 7502     		.2byte	0x275
 2137 00ce D2000000 		.4byte	0xd2
 2138 00d2 06       		.uleb128 0x6
 2139 00d3 04       		.byte	0x4
 2140 00d4 D8000000 		.4byte	0xd8
 2141 00d8 07       		.uleb128 0x7
 2142 00d9 02       		.uleb128 0x2
 2143 00da 04       		.byte	0x4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 95


 2144 00db 07       		.byte	0x7
 2145 00dc D4030000 		.4byte	.LASF18
 2146 00e0 08       		.uleb128 0x8
 2147 00e1 82040000 		.4byte	.LASF19
 2148 00e5 03       		.byte	0x3
 2149 00e6 F5       		.byte	0xf5
 2150 00e7 D2000000 		.4byte	0xd2
 2151 00eb 09       		.uleb128 0x9
 2152 00ec 1F020000 		.4byte	.LASF20
 2153 00f0 01       		.byte	0x1
 2154 00f1 8608     		.2byte	0x886
 2155 00f3 01       		.byte	0x1
 2156 00f4 0A       		.uleb128 0xa
 2157 00f5 25050000 		.4byte	.LASF104
 2158 00f9 01       		.byte	0x1
 2159 00fa 870B     		.2byte	0xb87
 2160 00fc 01       		.byte	0x1
 2161 00fd 0C010000 		.4byte	0x10c
 2162 0101 0B       		.uleb128 0xb
 2163 0102 6900     		.ascii	"i\000"
 2164 0104 01       		.byte	0x1
 2165 0105 890B     		.2byte	0xb89
 2166 0107 83000000 		.4byte	0x83
 2167 010b 00       		.byte	0
 2168 010c 0C       		.uleb128 0xc
 2169 010d DB060000 		.4byte	.LASF54
 2170 0111 01       		.byte	0x1
 2171 0112 C20A     		.2byte	0xac2
 2172 0114 01       		.byte	0x1
 2173 0115 26010000 		.4byte	0x126
 2174 0119 0D       		.uleb128 0xd
 2175 011a 86020000 		.4byte	.LASF42
 2176 011e 01       		.byte	0x1
 2177 011f C20A     		.2byte	0xac2
 2178 0121 83000000 		.4byte	0x83
 2179 0125 00       		.byte	0
 2180 0126 09       		.uleb128 0x9
 2181 0127 BD020000 		.4byte	.LASF21
 2182 012b 01       		.byte	0x1
 2183 012c 3F0B     		.2byte	0xb3f
 2184 012e 01       		.byte	0x1
 2185 012f 0E       		.uleb128 0xe
 2186 0130 86060000 		.4byte	.LASF22
 2187 0134 01       		.byte	0x1
 2188 0135 6B       		.byte	0x6b
 2189 0136 00000000 		.4byte	.LFB0
 2190 013a 14000000 		.4byte	.LFE0-.LFB0
 2191 013e 01       		.uleb128 0x1
 2192 013f 9C       		.byte	0x9c
 2193 0140 0E       		.uleb128 0xe
 2194 0141 F9020000 		.4byte	.LASF23
 2195 0145 01       		.byte	0x1
 2196 0146 8B       		.byte	0x8b
 2197 0147 00000000 		.4byte	.LFB1
 2198 014b 10000000 		.4byte	.LFE1-.LFB1
 2199 014f 01       		.uleb128 0x1
 2200 0150 9C       		.byte	0x9c
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 96


 2201 0151 0F       		.uleb128 0xf
 2202 0152 B5000000 		.4byte	.LASF26
 2203 0156 01       		.byte	0x1
 2204 0157 AD01     		.2byte	0x1ad
 2205 0159 00000000 		.4byte	.LFB2
 2206 015d 20000000 		.4byte	.LFE2-.LFB2
 2207 0161 01       		.uleb128 0x1
 2208 0162 9C       		.byte	0x9c
 2209 0163 AA010000 		.4byte	0x1aa
 2210 0167 10       		.uleb128 0x10
 2211 0168 11050000 		.4byte	.LASF28
 2212 016c 01       		.byte	0x1
 2213 016d AD01     		.2byte	0x1ad
 2214 016f 83000000 		.4byte	0x83
 2215 0173 00000000 		.4byte	.LLST0
 2216 0177 11       		.uleb128 0x11
 2217 0178 A9010000 		.4byte	.LASF24
 2218 017c 01       		.byte	0x1
 2219 017d AF01     		.2byte	0x1af
 2220 017f 6B000000 		.4byte	0x6b
 2221 0183 2C000000 		.4byte	.LLST1
 2222 0187 11       		.uleb128 0x11
 2223 0188 D4060000 		.4byte	.LASF25
 2224 018c 01       		.byte	0x1
 2225 018d B001     		.2byte	0x1b0
 2226 018f 83000000 		.4byte	0x83
 2227 0193 3F000000 		.4byte	.LLST2
 2228 0197 12       		.uleb128 0x12
 2229 0198 08000000 		.4byte	.LVL1
 2230 019c F90A0000 		.4byte	0xaf9
 2231 01a0 12       		.uleb128 0x12
 2232 01a1 1A000000 		.4byte	.LVL4
 2233 01a5 040B0000 		.4byte	0xb04
 2234 01a9 00       		.byte	0
 2235 01aa 0F       		.uleb128 0xf
 2236 01ab 9D030000 		.4byte	.LASF27
 2237 01af 01       		.byte	0x1
 2238 01b0 D901     		.2byte	0x1d9
 2239 01b2 00000000 		.4byte	.LFB3
 2240 01b6 34000000 		.4byte	.LFE3-.LFB3
 2241 01ba 01       		.uleb128 0x1
 2242 01bb 9C       		.byte	0x9c
 2243 01bc CF010000 		.4byte	0x1cf
 2244 01c0 13       		.uleb128 0x13
 2245 01c1 0B020000 		.4byte	.LASF29
 2246 01c5 01       		.byte	0x1
 2247 01c6 D901     		.2byte	0x1d9
 2248 01c8 83000000 		.4byte	0x83
 2249 01cc 01       		.uleb128 0x1
 2250 01cd 50       		.byte	0x50
 2251 01ce 00       		.byte	0
 2252 01cf 14       		.uleb128 0x14
 2253 01d0 42020000 		.4byte	.LASF34
 2254 01d4 01       		.byte	0x1
 2255 01d5 FE01     		.2byte	0x1fe
 2256 01d7 83000000 		.4byte	0x83
 2257 01db 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 97


 2258 01df 18000000 		.4byte	.LFE4-.LFB4
 2259 01e3 01       		.uleb128 0x1
 2260 01e4 9C       		.byte	0x9c
 2261 01e5 1C020000 		.4byte	0x21c
 2262 01e9 11       		.uleb128 0x11
 2263 01ea A9010000 		.4byte	.LASF24
 2264 01ee 01       		.byte	0x1
 2265 01ef 0002     		.2byte	0x200
 2266 01f1 6B000000 		.4byte	0x6b
 2267 01f5 5D000000 		.4byte	.LLST3
 2268 01f9 11       		.uleb128 0x11
 2269 01fa FF030000 		.4byte	.LASF30
 2270 01fe 01       		.byte	0x1
 2271 01ff 0102     		.2byte	0x201
 2272 0201 83000000 		.4byte	0x83
 2273 0205 70000000 		.4byte	.LLST4
 2274 0209 12       		.uleb128 0x12
 2275 020a 06000000 		.4byte	.LVL7
 2276 020e F90A0000 		.4byte	0xaf9
 2277 0212 12       		.uleb128 0x12
 2278 0213 0E000000 		.4byte	.LVL9
 2279 0217 040B0000 		.4byte	0xb04
 2280 021b 00       		.byte	0
 2281 021c 0F       		.uleb128 0xf
 2282 021d D9050000 		.4byte	.LASF31
 2283 0221 01       		.byte	0x1
 2284 0222 3502     		.2byte	0x235
 2285 0224 00000000 		.4byte	.LFB5
 2286 0228 28000000 		.4byte	.LFE5-.LFB5
 2287 022c 01       		.uleb128 0x1
 2288 022d 9C       		.byte	0x9c
 2289 022e 65020000 		.4byte	0x265
 2290 0232 10       		.uleb128 0x10
 2291 0233 7E060000 		.4byte	.LASF32
 2292 0237 01       		.byte	0x1
 2293 0238 3502     		.2byte	0x235
 2294 023a 83000000 		.4byte	0x83
 2295 023e 92000000 		.4byte	.LLST5
 2296 0242 11       		.uleb128 0x11
 2297 0243 A9010000 		.4byte	.LASF24
 2298 0247 01       		.byte	0x1
 2299 0248 3702     		.2byte	0x237
 2300 024a 6B000000 		.4byte	0x6b
 2301 024e BE000000 		.4byte	.LLST6
 2302 0252 12       		.uleb128 0x12
 2303 0253 08000000 		.4byte	.LVL12
 2304 0257 F90A0000 		.4byte	0xaf9
 2305 025b 12       		.uleb128 0x12
 2306 025c 1E000000 		.4byte	.LVL13
 2307 0260 040B0000 		.4byte	0xb04
 2308 0264 00       		.byte	0
 2309 0265 15       		.uleb128 0x15
 2310 0266 51060000 		.4byte	.LASF33
 2311 026a 01       		.byte	0x1
 2312 026b 6408     		.2byte	0x864
 2313 026d 00000000 		.4byte	.LFB8
 2314 0271 20000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 98


 2315 0275 01       		.uleb128 0x1
 2316 0276 9C       		.byte	0x9c
 2317 0277 16       		.uleb128 0x16
 2318 0278 DE020000 		.4byte	.LASF82
 2319 027c 01       		.byte	0x1
 2320 027d 7608     		.2byte	0x876
 2321 027f 83000000 		.4byte	0x83
 2322 0283 00000000 		.4byte	.LFB9
 2323 0287 10000000 		.4byte	.LFE9-.LFB9
 2324 028b 01       		.uleb128 0x1
 2325 028c 9C       		.byte	0x9c
 2326 028d 17       		.uleb128 0x17
 2327 028e EB000000 		.4byte	0xeb
 2328 0292 00000000 		.4byte	.LFB10
 2329 0296 0C000000 		.4byte	.LFE10-.LFB10
 2330 029a 01       		.uleb128 0x1
 2331 029b 9C       		.byte	0x9c
 2332 029c 14       		.uleb128 0x14
 2333 029d 30030000 		.4byte	.LASF35
 2334 02a1 01       		.byte	0x1
 2335 02a2 A008     		.2byte	0x8a0
 2336 02a4 83000000 		.4byte	0x83
 2337 02a8 00000000 		.4byte	.LFB11
 2338 02ac 14000000 		.4byte	.LFE11-.LFB11
 2339 02b0 01       		.uleb128 0x1
 2340 02b1 9C       		.byte	0x9c
 2341 02b2 D7020000 		.4byte	0x2d7
 2342 02b6 10       		.uleb128 0x10
 2343 02b7 E2040000 		.4byte	.LASF36
 2344 02bb 01       		.byte	0x1
 2345 02bc A008     		.2byte	0x8a0
 2346 02be 83000000 		.4byte	0x83
 2347 02c2 D1000000 		.4byte	.LLST7
 2348 02c6 11       		.uleb128 0x11
 2349 02c7 C7030000 		.4byte	.LASF37
 2350 02cb 01       		.byte	0x1
 2351 02cc A208     		.2byte	0x8a2
 2352 02ce 83000000 		.4byte	0x83
 2353 02d2 EF000000 		.4byte	.LLST8
 2354 02d6 00       		.byte	0
 2355 02d7 14       		.uleb128 0x14
 2356 02d8 EF000000 		.4byte	.LASF38
 2357 02dc 01       		.byte	0x1
 2358 02dd B708     		.2byte	0x8b7
 2359 02df 83000000 		.4byte	0x83
 2360 02e3 00000000 		.4byte	.LFB12
 2361 02e7 10000000 		.4byte	.LFE12-.LFB12
 2362 02eb 01       		.uleb128 0x1
 2363 02ec 9C       		.byte	0x9c
 2364 02ed 00030000 		.4byte	0x300
 2365 02f1 18       		.uleb128 0x18
 2366 02f2 AC000000 		.4byte	.LASF39
 2367 02f6 01       		.byte	0x1
 2368 02f7 B908     		.2byte	0x8b9
 2369 02f9 83000000 		.4byte	0x83
 2370 02fd 01       		.uleb128 0x1
 2371 02fe 50       		.byte	0x50
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 99


 2372 02ff 00       		.byte	0
 2373 0300 0F       		.uleb128 0xf
 2374 0301 3A010000 		.4byte	.LASF40
 2375 0305 01       		.byte	0x1
 2376 0306 CE08     		.2byte	0x8ce
 2377 0308 00000000 		.4byte	.LFB13
 2378 030c 0C000000 		.4byte	.LFE13-.LFB13
 2379 0310 01       		.uleb128 0x1
 2380 0311 9C       		.byte	0x9c
 2381 0312 25030000 		.4byte	0x325
 2382 0316 13       		.uleb128 0x13
 2383 0317 3D020000 		.4byte	.LASF41
 2384 031b 01       		.byte	0x1
 2385 031c CE08     		.2byte	0x8ce
 2386 031e 83000000 		.4byte	0x83
 2387 0322 01       		.uleb128 0x1
 2388 0323 50       		.byte	0x50
 2389 0324 00       		.byte	0
 2390 0325 19       		.uleb128 0x19
 2391 0326 8B030000 		.4byte	.LASF105
 2392 032a 01       		.byte	0x1
 2393 032b E708     		.2byte	0x8e7
 2394 032d C6000000 		.4byte	0xc6
 2395 0331 01       		.byte	0x1
 2396 0332 67030000 		.4byte	0x367
 2397 0336 0D       		.uleb128 0xd
 2398 0337 66030000 		.4byte	.LASF43
 2399 033b 01       		.byte	0x1
 2400 033c E708     		.2byte	0x8e7
 2401 033e 6B000000 		.4byte	0x6b
 2402 0342 0D       		.uleb128 0xd
 2403 0343 EF030000 		.4byte	.LASF44
 2404 0347 01       		.byte	0x1
 2405 0348 E708     		.2byte	0x8e7
 2406 034a C6000000 		.4byte	0xc6
 2407 034e 1A       		.uleb128 0x1a
 2408 034f E1000000 		.4byte	.LASF45
 2409 0353 01       		.byte	0x1
 2410 0354 E908     		.2byte	0x8e9
 2411 0356 C6000000 		.4byte	0xc6
 2412 035a 1A       		.uleb128 0x1a
 2413 035b 00000000 		.4byte	.LASF46
 2414 035f 01       		.byte	0x1
 2415 0360 EA08     		.2byte	0x8ea
 2416 0362 67030000 		.4byte	0x367
 2417 0366 00       		.byte	0
 2418 0367 06       		.uleb128 0x6
 2419 0368 04       		.byte	0x4
 2420 0369 C6000000 		.4byte	0xc6
 2421 036d 1B       		.uleb128 0x1b
 2422 036e 25030000 		.4byte	0x325
 2423 0372 00000000 		.4byte	.LFB14
 2424 0376 0E000000 		.4byte	.LFE14-.LFB14
 2425 037a 01       		.uleb128 0x1
 2426 037b 9C       		.byte	0x9c
 2427 037c A1030000 		.4byte	0x3a1
 2428 0380 1C       		.uleb128 0x1c
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 100


 2429 0381 36030000 		.4byte	0x336
 2430 0385 11010000 		.4byte	.LLST9
 2431 0389 1D       		.uleb128 0x1d
 2432 038a 42030000 		.4byte	0x342
 2433 038e 01       		.uleb128 0x1
 2434 038f 51       		.byte	0x51
 2435 0390 1E       		.uleb128 0x1e
 2436 0391 4E030000 		.4byte	0x34e
 2437 0395 01       		.uleb128 0x1
 2438 0396 50       		.byte	0x50
 2439 0397 1F       		.uleb128 0x1f
 2440 0398 5A030000 		.4byte	0x35a
 2441 039c 00000020 		.4byte	0x20000000
 2442 03a0 00       		.byte	0
 2443 03a1 14       		.uleb128 0x14
 2444 03a2 FF040000 		.4byte	.LASF47
 2445 03a6 01       		.byte	0x1
 2446 03a7 0909     		.2byte	0x909
 2447 03a9 C6000000 		.4byte	0xc6
 2448 03ad 00000000 		.4byte	.LFB15
 2449 03b1 0C000000 		.4byte	.LFE15-.LFB15
 2450 03b5 01       		.uleb128 0x1
 2451 03b6 9C       		.byte	0x9c
 2452 03b7 DC030000 		.4byte	0x3dc
 2453 03bb 10       		.uleb128 0x10
 2454 03bc 66030000 		.4byte	.LASF43
 2455 03c0 01       		.byte	0x1
 2456 03c1 0909     		.2byte	0x909
 2457 03c3 6B000000 		.4byte	0x6b
 2458 03c7 32010000 		.4byte	.LLST10
 2459 03cb 20       		.uleb128 0x20
 2460 03cc 00000000 		.4byte	.LASF46
 2461 03d0 01       		.byte	0x1
 2462 03d1 0B09     		.2byte	0x90b
 2463 03d3 67030000 		.4byte	0x367
 2464 03d7 00000020 		.4byte	0x20000000
 2465 03db 00       		.byte	0
 2466 03dc 14       		.uleb128 0x14
 2467 03dd 57030000 		.4byte	.LASF48
 2468 03e1 01       		.byte	0x1
 2469 03e2 1F09     		.2byte	0x91f
 2470 03e4 C6000000 		.4byte	0xc6
 2471 03e8 00000000 		.4byte	.LFB16
 2472 03ec 10000000 		.4byte	.LFE16-.LFB16
 2473 03f0 01       		.uleb128 0x1
 2474 03f1 9C       		.byte	0x9c
 2475 03f2 33040000 		.4byte	0x433
 2476 03f6 10       		.uleb128 0x10
 2477 03f7 66030000 		.4byte	.LASF43
 2478 03fb 01       		.byte	0x1
 2479 03fc 1F09     		.2byte	0x91f
 2480 03fe 6B000000 		.4byte	0x6b
 2481 0402 53010000 		.4byte	.LLST11
 2482 0406 13       		.uleb128 0x13
 2483 0407 EF030000 		.4byte	.LASF44
 2484 040b 01       		.byte	0x1
 2485 040c 1F09     		.2byte	0x91f
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 101


 2486 040e C6000000 		.4byte	0xc6
 2487 0412 01       		.uleb128 0x1
 2488 0413 51       		.byte	0x51
 2489 0414 18       		.uleb128 0x18
 2490 0415 E1000000 		.4byte	.LASF45
 2491 0419 01       		.byte	0x1
 2492 041a 2109     		.2byte	0x921
 2493 041c C6000000 		.4byte	0xc6
 2494 0420 01       		.uleb128 0x1
 2495 0421 50       		.byte	0x50
 2496 0422 20       		.uleb128 0x20
 2497 0423 00000000 		.4byte	.LASF46
 2498 0427 01       		.byte	0x1
 2499 0428 2209     		.2byte	0x922
 2500 042a 67030000 		.4byte	0x367
 2501 042e 00000020 		.4byte	0x20000000
 2502 0432 00       		.byte	0
 2503 0433 14       		.uleb128 0x14
 2504 0434 94040000 		.4byte	.LASF49
 2505 0438 01       		.byte	0x1
 2506 0439 3B09     		.2byte	0x93b
 2507 043b C6000000 		.4byte	0xc6
 2508 043f 00000000 		.4byte	.LFB17
 2509 0443 10000000 		.4byte	.LFE17-.LFB17
 2510 0447 01       		.uleb128 0x1
 2511 0448 9C       		.byte	0x9c
 2512 0449 6E040000 		.4byte	0x46e
 2513 044d 10       		.uleb128 0x10
 2514 044e 66030000 		.4byte	.LASF43
 2515 0452 01       		.byte	0x1
 2516 0453 3B09     		.2byte	0x93b
 2517 0455 6B000000 		.4byte	0x6b
 2518 0459 74010000 		.4byte	.LLST12
 2519 045d 20       		.uleb128 0x20
 2520 045e 00000000 		.4byte	.LASF46
 2521 0462 01       		.byte	0x1
 2522 0463 3D09     		.2byte	0x93d
 2523 0465 67030000 		.4byte	0x367
 2524 0469 00000020 		.4byte	0x20000000
 2525 046d 00       		.byte	0
 2526 046e 0F       		.uleb128 0xf
 2527 046f 46040000 		.4byte	.LASF50
 2528 0473 01       		.byte	0x1
 2529 0474 4E09     		.2byte	0x94e
 2530 0476 00000000 		.4byte	.LFB18
 2531 047a 30000000 		.4byte	.LFE18-.LFB18
 2532 047e 01       		.uleb128 0x1
 2533 047f 9C       		.byte	0x9c
 2534 0480 E7040000 		.4byte	0x4e7
 2535 0484 10       		.uleb128 0x10
 2536 0485 66030000 		.4byte	.LASF43
 2537 0489 01       		.byte	0x1
 2538 048a 4E09     		.2byte	0x94e
 2539 048c 6B000000 		.4byte	0x6b
 2540 0490 95010000 		.4byte	.LLST13
 2541 0494 10       		.uleb128 0x10
 2542 0495 6D030000 		.4byte	.LASF51
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 102


 2543 0499 01       		.byte	0x1
 2544 049a 4E09     		.2byte	0x94e
 2545 049c 6B000000 		.4byte	0x6b
 2546 04a0 B6010000 		.4byte	.LLST14
 2547 04a4 11       		.uleb128 0x11
 2548 04a5 A9010000 		.4byte	.LASF24
 2549 04a9 01       		.byte	0x1
 2550 04aa 5009     		.2byte	0x950
 2551 04ac 6B000000 		.4byte	0x6b
 2552 04b0 D7010000 		.4byte	.LLST15
 2553 04b4 11       		.uleb128 0x11
 2554 04b5 19020000 		.4byte	.LASF52
 2555 04b9 01       		.byte	0x1
 2556 04ba 5109     		.2byte	0x951
 2557 04bc 83000000 		.4byte	0x83
 2558 04c0 EA010000 		.4byte	.LLST16
 2559 04c4 11       		.uleb128 0x11
 2560 04c5 86020000 		.4byte	.LASF42
 2561 04c9 01       		.byte	0x1
 2562 04ca 5209     		.2byte	0x952
 2563 04cc 83000000 		.4byte	0x83
 2564 04d0 08020000 		.4byte	.LLST17
 2565 04d4 12       		.uleb128 0x12
 2566 04d5 0A000000 		.4byte	.LVL33
 2567 04d9 F90A0000 		.4byte	0xaf9
 2568 04dd 12       		.uleb128 0x12
 2569 04de 2A000000 		.4byte	.LVL38
 2570 04e2 040B0000 		.4byte	0xb04
 2571 04e6 00       		.byte	0
 2572 04e7 14       		.uleb128 0x14
 2573 04e8 5A020000 		.4byte	.LASF53
 2574 04ec 01       		.byte	0x1
 2575 04ed 7009     		.2byte	0x970
 2576 04ef 6B000000 		.4byte	0x6b
 2577 04f3 00000000 		.4byte	.LFB19
 2578 04f7 20000000 		.4byte	.LFE19-.LFB19
 2579 04fb 01       		.uleb128 0x1
 2580 04fc 9C       		.byte	0x9c
 2581 04fd 22050000 		.4byte	0x522
 2582 0501 10       		.uleb128 0x10
 2583 0502 66030000 		.4byte	.LASF43
 2584 0506 01       		.byte	0x1
 2585 0507 7009     		.2byte	0x970
 2586 0509 6B000000 		.4byte	0x6b
 2587 050d 1B020000 		.4byte	.LLST18
 2588 0511 11       		.uleb128 0x11
 2589 0512 6D030000 		.4byte	.LASF51
 2590 0516 01       		.byte	0x1
 2591 0517 7209     		.2byte	0x972
 2592 0519 6B000000 		.4byte	0x6b
 2593 051d 3C020000 		.4byte	.LLST19
 2594 0521 00       		.byte	0
 2595 0522 0C       		.uleb128 0xc
 2596 0523 F3040000 		.4byte	.LASF55
 2597 0527 01       		.byte	0x1
 2598 0528 8509     		.2byte	0x985
 2599 052a 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 103


 2600 052b 3C050000 		.4byte	0x53c
 2601 052f 0D       		.uleb128 0xd
 2602 0530 66030000 		.4byte	.LASF43
 2603 0534 01       		.byte	0x1
 2604 0535 8509     		.2byte	0x985
 2605 0537 6B000000 		.4byte	0x6b
 2606 053b 00       		.byte	0
 2607 053c 1B       		.uleb128 0x1b
 2608 053d 22050000 		.4byte	0x522
 2609 0541 00000000 		.4byte	.LFB20
 2610 0545 14000000 		.4byte	.LFE20-.LFB20
 2611 0549 01       		.uleb128 0x1
 2612 054a 9C       		.byte	0x9c
 2613 054b 59050000 		.4byte	0x559
 2614 054f 1C       		.uleb128 0x1c
 2615 0550 2F050000 		.4byte	0x52f
 2616 0554 5D020000 		.4byte	.LLST20
 2617 0558 00       		.byte	0
 2618 0559 14       		.uleb128 0x14
 2619 055a 70010000 		.4byte	.LASF56
 2620 055e 01       		.byte	0x1
 2621 055f 9709     		.2byte	0x997
 2622 0561 6B000000 		.4byte	0x6b
 2623 0565 00000000 		.4byte	.LFB21
 2624 0569 18000000 		.4byte	.LFE21-.LFB21
 2625 056d 01       		.uleb128 0x1
 2626 056e 9C       		.byte	0x9c
 2627 056f 84050000 		.4byte	0x584
 2628 0573 10       		.uleb128 0x10
 2629 0574 66030000 		.4byte	.LASF43
 2630 0578 01       		.byte	0x1
 2631 0579 9709     		.2byte	0x997
 2632 057b 6B000000 		.4byte	0x6b
 2633 057f 7E020000 		.4byte	.LLST21
 2634 0583 00       		.byte	0
 2635 0584 0F       		.uleb128 0xf
 2636 0585 D4010000 		.4byte	.LASF57
 2637 0589 01       		.byte	0x1
 2638 058a A709     		.2byte	0x9a7
 2639 058c 00000000 		.4byte	.LFB22
 2640 0590 14000000 		.4byte	.LFE22-.LFB22
 2641 0594 01       		.uleb128 0x1
 2642 0595 9C       		.byte	0x9c
 2643 0596 AB050000 		.4byte	0x5ab
 2644 059a 10       		.uleb128 0x10
 2645 059b 66030000 		.4byte	.LASF43
 2646 059f 01       		.byte	0x1
 2647 05a0 A709     		.2byte	0x9a7
 2648 05a2 6B000000 		.4byte	0x6b
 2649 05a6 9F020000 		.4byte	.LLST22
 2650 05aa 00       		.byte	0
 2651 05ab 0F       		.uleb128 0xf
 2652 05ac 20030000 		.4byte	.LASF58
 2653 05b0 01       		.byte	0x1
 2654 05b1 B509     		.2byte	0x9b5
 2655 05b3 00000000 		.4byte	.LFB23
 2656 05b7 14000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 104


 2657 05bb 01       		.uleb128 0x1
 2658 05bc 9C       		.byte	0x9c
 2659 05bd D2050000 		.4byte	0x5d2
 2660 05c1 10       		.uleb128 0x10
 2661 05c2 66030000 		.4byte	.LASF43
 2662 05c6 01       		.byte	0x1
 2663 05c7 B509     		.2byte	0x9b5
 2664 05c9 6B000000 		.4byte	0x6b
 2665 05cd C0020000 		.4byte	.LLST23
 2666 05d1 00       		.byte	0
 2667 05d2 0F       		.uleb128 0xf
 2668 05d3 DD030000 		.4byte	.LASF59
 2669 05d7 01       		.byte	0x1
 2670 05d8 C409     		.2byte	0x9c4
 2671 05da 00000000 		.4byte	.LFB24
 2672 05de 14000000 		.4byte	.LFE24-.LFB24
 2673 05e2 01       		.uleb128 0x1
 2674 05e3 9C       		.byte	0x9c
 2675 05e4 F9050000 		.4byte	0x5f9
 2676 05e8 10       		.uleb128 0x10
 2677 05e9 66030000 		.4byte	.LASF43
 2678 05ed 01       		.byte	0x1
 2679 05ee C409     		.2byte	0x9c4
 2680 05f0 6B000000 		.4byte	0x6b
 2681 05f4 E1020000 		.4byte	.LLST24
 2682 05f8 00       		.byte	0
 2683 05f9 0F       		.uleb128 0xf
 2684 05fa CD040000 		.4byte	.LASF60
 2685 05fe 01       		.byte	0x1
 2686 05ff D309     		.2byte	0x9d3
 2687 0601 00000000 		.4byte	.LFB25
 2688 0605 04000000 		.4byte	.LFE25-.LFB25
 2689 0609 01       		.uleb128 0x1
 2690 060a 9C       		.byte	0x9c
 2691 060b 1E060000 		.4byte	0x61e
 2692 060f 13       		.uleb128 0x13
 2693 0610 E2040000 		.4byte	.LASF36
 2694 0614 01       		.byte	0x1
 2695 0615 D309     		.2byte	0x9d3
 2696 0617 6B000000 		.4byte	0x6b
 2697 061b 01       		.uleb128 0x1
 2698 061c 50       		.byte	0x50
 2699 061d 00       		.byte	0
 2700 061e 15       		.uleb128 0x15
 2701 061f 47010000 		.4byte	.LASF61
 2702 0623 01       		.byte	0x1
 2703 0624 EB09     		.2byte	0x9eb
 2704 0626 00000000 		.4byte	.LFB26
 2705 062a 18000000 		.4byte	.LFE26-.LFB26
 2706 062e 01       		.uleb128 0x1
 2707 062f 9C       		.byte	0x9c
 2708 0630 0F       		.uleb128 0xf
 2709 0631 2F060000 		.4byte	.LASF62
 2710 0635 01       		.byte	0x1
 2711 0636 FF09     		.2byte	0x9ff
 2712 0638 00000000 		.4byte	.LFB27
 2713 063c 2C000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 105


 2714 0640 01       		.uleb128 0x1
 2715 0641 9C       		.byte	0x9c
 2716 0642 69060000 		.4byte	0x669
 2717 0646 10       		.uleb128 0x10
 2718 0647 A3040000 		.4byte	.LASF63
 2719 064b 01       		.byte	0x1
 2720 064c FF09     		.2byte	0x9ff
 2721 064e 83000000 		.4byte	0x83
 2722 0652 02030000 		.4byte	.LLST25
 2723 0656 12       		.uleb128 0x12
 2724 0657 14000000 		.4byte	.LVL56
 2725 065b 150B0000 		.4byte	0xb15
 2726 065f 12       		.uleb128 0x12
 2727 0660 22000000 		.4byte	.LVL58
 2728 0664 150B0000 		.4byte	0xb15
 2729 0668 00       		.byte	0
 2730 0669 0F       		.uleb128 0xf
 2731 066a 1B050000 		.4byte	.LASF64
 2732 066e 01       		.byte	0x1
 2733 066f 160A     		.2byte	0xa16
 2734 0671 00000000 		.4byte	.LFB28
 2735 0675 14000000 		.4byte	.LFE28-.LFB28
 2736 0679 01       		.uleb128 0x1
 2737 067a 9C       		.byte	0x9c
 2738 067b 99060000 		.4byte	0x699
 2739 067f 10       		.uleb128 0x10
 2740 0680 C7060000 		.4byte	.LASF65
 2741 0684 01       		.byte	0x1
 2742 0685 160A     		.2byte	0xa16
 2743 0687 77000000 		.4byte	0x77
 2744 068b 20030000 		.4byte	.LLST26
 2745 068f 12       		.uleb128 0x12
 2746 0690 0C000000 		.4byte	.LVL62
 2747 0694 150B0000 		.4byte	0xb15
 2748 0698 00       		.byte	0
 2749 0699 0F       		.uleb128 0xf
 2750 069a 76030000 		.4byte	.LASF66
 2751 069e 01       		.byte	0x1
 2752 069f 6F02     		.2byte	0x26f
 2753 06a1 00000000 		.4byte	.LFB6
 2754 06a5 24010000 		.4byte	.LFE6-.LFB6
 2755 06a9 01       		.uleb128 0x1
 2756 06aa 9C       		.byte	0x9c
 2757 06ab 73070000 		.4byte	0x773
 2758 06af 10       		.uleb128 0x10
 2759 06b0 98010000 		.4byte	.LASF67
 2760 06b4 01       		.byte	0x1
 2761 06b5 6F02     		.2byte	0x26f
 2762 06b7 83000000 		.4byte	0x83
 2763 06bb 41030000 		.4byte	.LLST27
 2764 06bf 11       		.uleb128 0x11
 2765 06c0 0F000000 		.4byte	.LASF68
 2766 06c4 01       		.byte	0x1
 2767 06c5 7502     		.2byte	0x275
 2768 06c7 6B000000 		.4byte	0x6b
 2769 06cb 80030000 		.4byte	.LLST28
 2770 06cf 11       		.uleb128 0x11
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 106


 2771 06d0 F7030000 		.4byte	.LASF69
 2772 06d4 01       		.byte	0x1
 2773 06d5 7602     		.2byte	0x276
 2774 06d7 6B000000 		.4byte	0x6b
 2775 06db BF030000 		.4byte	.LLST29
 2776 06df 11       		.uleb128 0x11
 2777 06e0 97060000 		.4byte	.LASF70
 2778 06e4 01       		.byte	0x1
 2779 06e5 7702     		.2byte	0x277
 2780 06e7 6B000000 		.4byte	0x6b
 2781 06eb D3030000 		.4byte	.LLST30
 2782 06ef 11       		.uleb128 0x11
 2783 06f0 FD000000 		.4byte	.LASF71
 2784 06f4 01       		.byte	0x1
 2785 06f5 7802     		.2byte	0x278
 2786 06f7 6B000000 		.4byte	0x6b
 2787 06fb E7030000 		.4byte	.LLST31
 2788 06ff 11       		.uleb128 0x11
 2789 0700 18060000 		.4byte	.LASF72
 2790 0704 01       		.byte	0x1
 2791 0705 7902     		.2byte	0x279
 2792 0707 6B000000 		.4byte	0x6b
 2793 070b FA030000 		.4byte	.LLST32
 2794 070f 18       		.uleb128 0x18
 2795 0710 A9010000 		.4byte	.LASF24
 2796 0714 01       		.byte	0x1
 2797 0715 8402     		.2byte	0x284
 2798 0717 6B000000 		.4byte	0x6b
 2799 071b 02       		.uleb128 0x2
 2800 071c 91       		.byte	0x91
 2801 071d 60       		.sleb128 -32
 2802 071e 12       		.uleb128 0x12
 2803 071f 0A000000 		.4byte	.LVL64
 2804 0723 F90A0000 		.4byte	0xaf9
 2805 0727 21       		.uleb128 0x21
 2806 0728 9C000000 		.4byte	.LVL79
 2807 072c 150B0000 		.4byte	0xb15
 2808 0730 3A070000 		.4byte	0x73a
 2809 0734 22       		.uleb128 0x22
 2810 0735 01       		.uleb128 0x1
 2811 0736 50       		.byte	0x50
 2812 0737 01       		.uleb128 0x1
 2813 0738 35       		.byte	0x35
 2814 0739 00       		.byte	0
 2815 073a 21       		.uleb128 0x21
 2816 073b B8000000 		.4byte	.LVL85
 2817 073f 69060000 		.4byte	0x669
 2818 0743 4D070000 		.4byte	0x74d
 2819 0747 22       		.uleb128 0x22
 2820 0748 01       		.uleb128 0x1
 2821 0749 50       		.byte	0x50
 2822 074a 01       		.uleb128 0x1
 2823 074b 35       		.byte	0x35
 2824 074c 00       		.byte	0
 2825 074d 21       		.uleb128 0x21
 2826 074e CC000000 		.4byte	.LVL86
 2827 0752 150B0000 		.4byte	0xb15
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 107


 2828 0756 60070000 		.4byte	0x760
 2829 075a 22       		.uleb128 0x22
 2830 075b 01       		.uleb128 0x1
 2831 075c 50       		.byte	0x50
 2832 075d 01       		.uleb128 0x1
 2833 075e 35       		.byte	0x35
 2834 075f 00       		.byte	0
 2835 0760 23       		.uleb128 0x23
 2836 0761 D2000000 		.4byte	.LVL87
 2837 0765 040B0000 		.4byte	0xb04
 2838 0769 22       		.uleb128 0x22
 2839 076a 01       		.uleb128 0x1
 2840 076b 50       		.byte	0x50
 2841 076c 04       		.uleb128 0x4
 2842 076d 91       		.byte	0x91
 2843 076e 60       		.sleb128 -32
 2844 076f 94       		.byte	0x94
 2845 0770 01       		.byte	0x1
 2846 0771 00       		.byte	0
 2847 0772 00       		.byte	0
 2848 0773 0F       		.uleb128 0xf
 2849 0774 73040000 		.4byte	.LASF73
 2850 0778 01       		.byte	0x1
 2851 0779 4608     		.2byte	0x846
 2852 077b 00000000 		.4byte	.LFB7
 2853 077f 44000000 		.4byte	.LFE7-.LFB7
 2854 0783 01       		.uleb128 0x1
 2855 0784 9C       		.byte	0x9c
 2856 0785 BB070000 		.4byte	0x7bb
 2857 0789 10       		.uleb128 0x10
 2858 078a C3040000 		.4byte	.LASF74
 2859 078e 01       		.byte	0x1
 2860 078f 4608     		.2byte	0x846
 2861 0791 83000000 		.4byte	0x83
 2862 0795 2C040000 		.4byte	.LLST33
 2863 0799 24       		.uleb128 0x24
 2864 079a EB000000 		.4byte	0xeb
 2865 079e 2C000000 		.4byte	.LBB8
 2866 07a2 00000000 		.4byte	.Ldebug_ranges0+0
 2867 07a6 01       		.byte	0x1
 2868 07a7 5608     		.2byte	0x856
 2869 07a9 23       		.uleb128 0x23
 2870 07aa 2C000000 		.4byte	.LVL90
 2871 07ae 69060000 		.4byte	0x669
 2872 07b2 22       		.uleb128 0x22
 2873 07b3 01       		.uleb128 0x1
 2874 07b4 50       		.byte	0x50
 2875 07b5 03       		.uleb128 0x3
 2876 07b6 0A       		.byte	0xa
 2877 07b7 E803     		.2byte	0x3e8
 2878 07b9 00       		.byte	0
 2879 07ba 00       		.byte	0
 2880 07bb 25       		.uleb128 0x25
 2881 07bc 9D010000 		.4byte	.LASF75
 2882 07c0 01       		.byte	0x1
 2883 07c1 240A     		.2byte	0xa24
 2884 07c3 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 108


 2885 07c7 48000000 		.4byte	.LFE29-.LFB29
 2886 07cb 01       		.uleb128 0x1
 2887 07cc 9C       		.byte	0x9c
 2888 07cd E2070000 		.4byte	0x7e2
 2889 07d1 10       		.uleb128 0x10
 2890 07d2 98010000 		.4byte	.LASF67
 2891 07d6 01       		.byte	0x1
 2892 07d7 240A     		.2byte	0xa24
 2893 07d9 83000000 		.4byte	0x83
 2894 07dd 4D040000 		.4byte	.LLST34
 2895 07e1 00       		.byte	0
 2896 07e2 25       		.uleb128 0x25
 2897 07e3 78020000 		.4byte	.LASF76
 2898 07e7 01       		.byte	0x1
 2899 07e8 610A     		.2byte	0xa61
 2900 07ea 00000000 		.4byte	.LFB31
 2901 07ee 50000000 		.4byte	.LFE31-.LFB31
 2902 07f2 01       		.uleb128 0x1
 2903 07f3 9C       		.byte	0x9c
 2904 07f4 8D080000 		.4byte	0x88d
 2905 07f8 26       		.uleb128 0x26
 2906 07f9 6900     		.ascii	"i\000"
 2907 07fb 01       		.byte	0x1
 2908 07fc 630A     		.2byte	0xa63
 2909 07fe 83000000 		.4byte	0x83
 2910 0802 6E040000 		.4byte	.LLST35
 2911 0806 27       		.uleb128 0x27
 2912 0807 25030000 		.4byte	0x325
 2913 080b 08000000 		.4byte	.LBB20
 2914 080f 18000000 		.4byte	.Ldebug_ranges0+0x18
 2915 0813 01       		.byte	0x1
 2916 0814 6A0A     		.2byte	0xa6a
 2917 0816 45080000 		.4byte	0x845
 2918 081a 1D       		.uleb128 0x1d
 2919 081b 42030000 		.4byte	0x342
 2920 081f 06       		.uleb128 0x6
 2921 0820 03       		.byte	0x3
 2922 0821 00000000 		.4byte	CySysTickServiceCallbacks
 2923 0825 9F       		.byte	0x9f
 2924 0826 28       		.uleb128 0x28
 2925 0827 36030000 		.4byte	0x336
 2926 082b 0F       		.byte	0xf
 2927 082c 29       		.uleb128 0x29
 2928 082d 18000000 		.4byte	.Ldebug_ranges0+0x18
 2929 0831 2A       		.uleb128 0x2a
 2930 0832 4E030000 		.4byte	0x34e
 2931 0836 B2040000 		.4byte	.LLST36
 2932 083a 1F       		.uleb128 0x1f
 2933 083b 5A030000 		.4byte	0x35a
 2934 083f 00000020 		.4byte	0x20000000
 2935 0843 00       		.byte	0
 2936 0844 00       		.byte	0
 2937 0845 27       		.uleb128 0x27
 2938 0846 22050000 		.4byte	0x522
 2939 084a 22000000 		.4byte	.LBB26
 2940 084e 38000000 		.4byte	.Ldebug_ranges0+0x38
 2941 0852 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 109


 2942 0853 720A     		.2byte	0xa72
 2943 0855 60080000 		.4byte	0x860
 2944 0859 28       		.uleb128 0x28
 2945 085a 2F050000 		.4byte	0x52f
 2946 085e 0F       		.byte	0xf
 2947 085f 00       		.byte	0
 2948 0860 27       		.uleb128 0x27
 2949 0861 0C010000 		.4byte	0x10c
 2950 0865 24000000 		.4byte	.LBB30
 2951 0869 58000000 		.4byte	.Ldebug_ranges0+0x58
 2952 086d 01       		.byte	0x1
 2953 086e 700A     		.2byte	0xa70
 2954 0870 7C080000 		.4byte	0x87c
 2955 0874 1D       		.uleb128 0x1d
 2956 0875 19010000 		.4byte	0x119
 2957 0879 01       		.uleb128 0x1
 2958 087a 50       		.byte	0x50
 2959 087b 00       		.byte	0
 2960 087c 2B       		.uleb128 0x2b
 2961 087d 26010000 		.4byte	0x126
 2962 0881 2A000000 		.4byte	.LBB35
 2963 0885 04000000 		.4byte	.LBE35-.LBB35
 2964 0889 01       		.byte	0x1
 2965 088a 710A     		.2byte	0xa71
 2966 088c 00       		.byte	0
 2967 088d 15       		.uleb128 0x15
 2968 088e 70060000 		.4byte	.LASF77
 2969 0892 01       		.byte	0x1
 2970 0893 910A     		.2byte	0xa91
 2971 0895 00000000 		.4byte	.LFB33
 2972 0899 10000000 		.4byte	.LFE33-.LFB33
 2973 089d 01       		.uleb128 0x1
 2974 089e 9C       		.byte	0x9c
 2975 089f 15       		.uleb128 0x15
 2976 08a0 57010000 		.4byte	.LASF78
 2977 08a4 01       		.byte	0x1
 2978 08a5 A10A     		.2byte	0xaa1
 2979 08a7 00000000 		.4byte	.LFB34
 2980 08ab 10000000 		.4byte	.LFE34-.LFB34
 2981 08af 01       		.uleb128 0x1
 2982 08b0 9C       		.byte	0x9c
 2983 08b1 0F       		.uleb128 0xf
 2984 08b2 51050000 		.4byte	.LASF79
 2985 08b6 01       		.byte	0x1
 2986 08b7 800A     		.2byte	0xa80
 2987 08b9 00000000 		.4byte	.LFB32
 2988 08bd 18000000 		.4byte	.LFE32-.LFB32
 2989 08c1 01       		.uleb128 0x1
 2990 08c2 9C       		.byte	0x9c
 2991 08c3 D1080000 		.4byte	0x8d1
 2992 08c7 12       		.uleb128 0x12
 2993 08c8 06000000 		.4byte	.LVL104
 2994 08cc 9F080000 		.4byte	0x89f
 2995 08d0 00       		.byte	0
 2996 08d1 0F       		.uleb128 0xf
 2997 08d2 B8030000 		.4byte	.LASF80
 2998 08d6 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 110


 2999 08d7 440A     		.2byte	0xa44
 3000 08d9 00000000 		.4byte	.LFB30
 3001 08dd 1C000000 		.4byte	.LFE30-.LFB30
 3002 08e1 01       		.uleb128 0x1
 3003 08e2 9C       		.byte	0x9c
 3004 08e3 FA080000 		.4byte	0x8fa
 3005 08e7 12       		.uleb128 0x12
 3006 08e8 0E000000 		.4byte	.LVL105
 3007 08ec E2070000 		.4byte	0x7e2
 3008 08f0 12       		.uleb128 0x12
 3009 08f1 16000000 		.4byte	.LVL106
 3010 08f5 B1080000 		.4byte	0x8b1
 3011 08f9 00       		.byte	0
 3012 08fa 15       		.uleb128 0x15
 3013 08fb 37060000 		.4byte	.LASF81
 3014 08ff 01       		.byte	0x1
 3015 0900 B10A     		.2byte	0xab1
 3016 0902 00000000 		.4byte	.LFB35
 3017 0906 10000000 		.4byte	.LFE35-.LFB35
 3018 090a 01       		.uleb128 0x1
 3019 090b 9C       		.byte	0x9c
 3020 090c 1B       		.uleb128 0x1b
 3021 090d 0C010000 		.4byte	0x10c
 3022 0911 00000000 		.4byte	.LFB36
 3023 0915 10000000 		.4byte	.LFE36-.LFB36
 3024 0919 01       		.uleb128 0x1
 3025 091a 9C       		.byte	0x9c
 3026 091b 29090000 		.4byte	0x929
 3027 091f 1C       		.uleb128 0x1c
 3028 0920 19010000 		.4byte	0x119
 3029 0924 D5040000 		.4byte	.LLST37
 3030 0928 00       		.byte	0
 3031 0929 16       		.uleb128 0x16
 3032 092a B8010000 		.4byte	.LASF83
 3033 092e 01       		.byte	0x1
 3034 092f D20A     		.2byte	0xad2
 3035 0931 83000000 		.4byte	0x83
 3036 0935 00000000 		.4byte	.LFB37
 3037 0939 10000000 		.4byte	.LFE37-.LFB37
 3038 093d 01       		.uleb128 0x1
 3039 093e 9C       		.byte	0x9c
 3040 093f 16       		.uleb128 0x16
 3041 0940 26040000 		.4byte	.LASF84
 3042 0944 01       		.byte	0x1
 3043 0945 E20A     		.2byte	0xae2
 3044 0947 83000000 		.4byte	0x83
 3045 094b 00000000 		.4byte	.LFB38
 3046 094f 10000000 		.4byte	.LFE38-.LFB38
 3047 0953 01       		.uleb128 0x1
 3048 0954 9C       		.byte	0x9c
 3049 0955 16       		.uleb128 0x16
 3050 0956 9A020000 		.4byte	.LASF85
 3051 095a 01       		.byte	0x1
 3052 095b 320B     		.2byte	0xb32
 3053 095d 83000000 		.4byte	0x83
 3054 0961 00000000 		.4byte	.LFB39
 3055 0965 10000000 		.4byte	.LFE39-.LFB39
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 111


 3056 0969 01       		.uleb128 0x1
 3057 096a 9C       		.byte	0x9c
 3058 096b 2C       		.uleb128 0x2c
 3059 096c F4000000 		.4byte	0xf4
 3060 0970 00000000 		.4byte	.LFB43
 3061 0974 24000000 		.4byte	.LFE43-.LFB43
 3062 0978 01       		.uleb128 0x1
 3063 0979 9C       		.byte	0x9c
 3064 097a A0090000 		.4byte	0x9a0
 3065 097e 2D       		.uleb128 0x2d
 3066 097f 01010000 		.4byte	0x101
 3067 0983 2E       		.uleb128 0x2e
 3068 0984 0C000000 		.4byte	.LBB40
 3069 0988 10000000 		.4byte	.LBE40-.LBB40
 3070 098c 96090000 		.4byte	0x996
 3071 0990 2D       		.uleb128 0x2d
 3072 0991 01010000 		.4byte	0x101
 3073 0995 00       		.byte	0
 3074 0996 12       		.uleb128 0x12
 3075 0997 06000000 		.4byte	.LVL109
 3076 099b 55090000 		.4byte	0x955
 3077 099f 00       		.byte	0
 3078 09a0 17       		.uleb128 0x17
 3079 09a1 26010000 		.4byte	0x126
 3080 09a5 00000000 		.4byte	.LFB40
 3081 09a9 0C000000 		.4byte	.LFE40-.LFB40
 3082 09ad 01       		.uleb128 0x1
 3083 09ae 9C       		.byte	0x9c
 3084 09af 14       		.uleb128 0x14
 3085 09b0 F0050000 		.4byte	.LASF86
 3086 09b4 01       		.byte	0x1
 3087 09b5 620B     		.2byte	0xb62
 3088 09b7 E0000000 		.4byte	0xe0
 3089 09bb 00000000 		.4byte	.LFB41
 3090 09bf 10000000 		.4byte	.LFE41-.LFB41
 3091 09c3 01       		.uleb128 0x1
 3092 09c4 9C       		.byte	0x9c
 3093 09c5 F6090000 		.4byte	0x9f6
 3094 09c9 10       		.uleb128 0x10
 3095 09ca 66030000 		.4byte	.LASF43
 3096 09ce 01       		.byte	0x1
 3097 09cf 620B     		.2byte	0xb62
 3098 09d1 83000000 		.4byte	0x83
 3099 09d5 F6040000 		.4byte	.LLST38
 3100 09d9 13       		.uleb128 0x13
 3101 09da 0C040000 		.4byte	.LASF87
 3102 09de 01       		.byte	0x1
 3103 09df 620B     		.2byte	0xb62
 3104 09e1 E0000000 		.4byte	0xe0
 3105 09e5 01       		.uleb128 0x1
 3106 09e6 51       		.byte	0x51
 3107 09e7 18       		.uleb128 0x18
 3108 09e8 E8000000 		.4byte	.LASF88
 3109 09ec 01       		.byte	0x1
 3110 09ed 640B     		.2byte	0xb64
 3111 09ef E0000000 		.4byte	0xe0
 3112 09f3 01       		.uleb128 0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 112


 3113 09f4 50       		.byte	0x50
 3114 09f5 00       		.byte	0
 3115 09f6 14       		.uleb128 0x14
 3116 09f7 E1010000 		.4byte	.LASF89
 3117 09fb 01       		.byte	0x1
 3118 09fc 7A0B     		.2byte	0xb7a
 3119 09fe E0000000 		.4byte	0xe0
 3120 0a02 00000000 		.4byte	.LFB42
 3121 0a06 0C000000 		.4byte	.LFE42-.LFB42
 3122 0a0a 01       		.uleb128 0x1
 3123 0a0b 9C       		.byte	0x9c
 3124 0a0c 210A0000 		.4byte	0xa21
 3125 0a10 10       		.uleb128 0x10
 3126 0a11 66030000 		.4byte	.LASF43
 3127 0a15 01       		.byte	0x1
 3128 0a16 7A0B     		.2byte	0xb7a
 3129 0a18 83000000 		.4byte	0x83
 3130 0a1c 17050000 		.4byte	.LLST39
 3131 0a20 00       		.byte	0
 3132 0a21 0F       		.uleb128 0xf
 3133 0a22 8C020000 		.4byte	.LASF90
 3134 0a26 01       		.byte	0x1
 3135 0a27 A70B     		.2byte	0xba7
 3136 0a29 00000000 		.4byte	.LFB44
 3137 0a2d 70000000 		.4byte	.LFE44-.LFB44
 3138 0a31 01       		.uleb128 0x1
 3139 0a32 9C       		.byte	0x9c
 3140 0a33 460A0000 		.4byte	0xa46
 3141 0a37 13       		.uleb128 0x13
 3142 0a38 26060000 		.4byte	.LASF91
 3143 0a3c 01       		.byte	0x1
 3144 0a3d A70B     		.2byte	0xba7
 3145 0a3f 460A0000 		.4byte	0xa46
 3146 0a43 01       		.uleb128 0x1
 3147 0a44 50       		.byte	0x50
 3148 0a45 00       		.byte	0
 3149 0a46 06       		.uleb128 0x6
 3150 0a47 04       		.byte	0x4
 3151 0a48 83000000 		.4byte	0x83
 3152 0a4c 2F       		.uleb128 0x2f
 3153 0a4d E0000000 		.4byte	0xe0
 3154 0a51 5C0A0000 		.4byte	0xa5c
 3155 0a55 30       		.uleb128 0x30
 3156 0a56 D9000000 		.4byte	0xd9
 3157 0a5a 04       		.byte	0x4
 3158 0a5b 00       		.byte	0
 3159 0a5c 31       		.uleb128 0x31
 3160 0a5d 05060000 		.4byte	.LASF92
 3161 0a61 01       		.byte	0x1
 3162 0a62 22       		.byte	0x22
 3163 0a63 4C0A0000 		.4byte	0xa4c
 3164 0a67 05       		.uleb128 0x5
 3165 0a68 03       		.byte	0x3
 3166 0a69 00000000 		.4byte	CySysTickCallbacks
 3167 0a6d 32       		.uleb128 0x32
 3168 0a6e 38040000 		.4byte	.LASF93
 3169 0a72 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 113


 3170 0a73 1B       		.byte	0x1b
 3171 0a74 83000000 		.4byte	0x83
 3172 0a78 05       		.uleb128 0x5
 3173 0a79 03       		.byte	0x3
 3174 0a7a 00000000 		.4byte	cydelayFreqHz
 3175 0a7e 32       		.uleb128 0x32
 3176 0a7f FC010000 		.4byte	.LASF94
 3177 0a83 01       		.byte	0x1
 3178 0a84 1C       		.byte	0x1c
 3179 0a85 83000000 		.4byte	0x83
 3180 0a89 05       		.uleb128 0x5
 3181 0a8a 03       		.byte	0x3
 3182 0a8b 00000000 		.4byte	cydelayFreqKhz
 3183 0a8f 32       		.uleb128 0x32
 3184 0a90 61060000 		.4byte	.LASF95
 3185 0a94 01       		.byte	0x1
 3186 0a95 1D       		.byte	0x1d
 3187 0a96 6B000000 		.4byte	0x6b
 3188 0a9a 05       		.uleb128 0x5
 3189 0a9b 03       		.byte	0x3
 3190 0a9c 00000000 		.4byte	cydelayFreqMhz
 3191 0aa0 32       		.uleb128 0x32
 3192 0aa1 6B020000 		.4byte	.LASF96
 3193 0aa5 01       		.byte	0x1
 3194 0aa6 1E       		.byte	0x1e
 3195 0aa7 83000000 		.4byte	0x83
 3196 0aab 05       		.uleb128 0x5
 3197 0aac 03       		.byte	0x3
 3198 0aad 00000000 		.4byte	cydelay32kMs
 3199 0ab1 32       		.uleb128 0x32
 3200 0ab2 29010000 		.4byte	.LASF97
 3201 0ab6 01       		.byte	0x1
 3202 0ab7 36       		.byte	0x36
 3203 0ab8 83000000 		.4byte	0x83
 3204 0abc 05       		.uleb128 0x5
 3205 0abd 03       		.byte	0x3
 3206 0abe 00000000 		.4byte	CySysTickInitVar
 3207 0ac2 2F       		.uleb128 0x2f
 3208 0ac3 6B000000 		.4byte	0x6b
 3209 0ac7 D20A0000 		.4byte	0xad2
 3210 0acb 30       		.uleb128 0x30
 3211 0acc D9000000 		.4byte	0xd9
 3212 0ad0 2D       		.byte	0x2d
 3213 0ad1 00       		.byte	0
 3214 0ad2 32       		.uleb128 0x32
 3215 0ad3 15040000 		.4byte	.LASF98
 3216 0ad7 01       		.byte	0x1
 3217 0ad8 3B       		.byte	0x3b
 3218 0ad9 E30A0000 		.4byte	0xae3
 3219 0add 05       		.uleb128 0x5
 3220 0ade 03       		.byte	0x3
 3221 0adf 00000000 		.4byte	cyImoFreqMhz2Reg
 3222 0ae3 33       		.uleb128 0x33
 3223 0ae4 C20A0000 		.4byte	0xac2
 3224 0ae8 32       		.uleb128 0x32
 3225 0ae9 CE000000 		.4byte	.LASF99
 3226 0aed 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 114


 3227 0aee 5B       		.byte	0x5b
 3228 0aef 83000000 		.4byte	0x83
 3229 0af3 05       		.uleb128 0x5
 3230 0af4 03       		.byte	0x3
 3231 0af5 00000000 		.4byte	CySysClkPumpConfig
 3232 0af9 34       		.uleb128 0x34
 3233 0afa 09030000 		.4byte	.LASF106
 3234 0afe 03       		.byte	0x3
 3235 0aff E5       		.byte	0xe5
 3236 0b00 6B000000 		.4byte	0x6b
 3237 0b04 35       		.uleb128 0x35
 3238 0b05 5D040000 		.4byte	.LASF100
 3239 0b09 03       		.byte	0x3
 3240 0b0a E6       		.byte	0xe6
 3241 0b0b 150B0000 		.4byte	0xb15
 3242 0b0f 36       		.uleb128 0x36
 3243 0b10 6B000000 		.4byte	0x6b
 3244 0b14 00       		.byte	0
 3245 0b15 37       		.uleb128 0x37
 3246 0b16 B0040000 		.4byte	.LASF107
 3247 0b1a 03       		.byte	0x3
 3248 0b1b DC       		.byte	0xdc
 3249 0b1c 36       		.uleb128 0x36
 3250 0b1d 83000000 		.4byte	0x83
 3251 0b21 00       		.byte	0
 3252 0b22 00       		.byte	0
 3253              		.section	.debug_abbrev,"",%progbits
 3254              	.Ldebug_abbrev0:
 3255 0000 01       		.uleb128 0x1
 3256 0001 11       		.uleb128 0x11
 3257 0002 01       		.byte	0x1
 3258 0003 25       		.uleb128 0x25
 3259 0004 0E       		.uleb128 0xe
 3260 0005 13       		.uleb128 0x13
 3261 0006 0B       		.uleb128 0xb
 3262 0007 03       		.uleb128 0x3
 3263 0008 0E       		.uleb128 0xe
 3264 0009 1B       		.uleb128 0x1b
 3265 000a 0E       		.uleb128 0xe
 3266 000b 55       		.uleb128 0x55
 3267 000c 17       		.uleb128 0x17
 3268 000d 11       		.uleb128 0x11
 3269 000e 01       		.uleb128 0x1
 3270 000f 10       		.uleb128 0x10
 3271 0010 17       		.uleb128 0x17
 3272 0011 00       		.byte	0
 3273 0012 00       		.byte	0
 3274 0013 02       		.uleb128 0x2
 3275 0014 24       		.uleb128 0x24
 3276 0015 00       		.byte	0
 3277 0016 0B       		.uleb128 0xb
 3278 0017 0B       		.uleb128 0xb
 3279 0018 3E       		.uleb128 0x3e
 3280 0019 0B       		.uleb128 0xb
 3281 001a 03       		.uleb128 0x3
 3282 001b 0E       		.uleb128 0xe
 3283 001c 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 115


 3284 001d 00       		.byte	0
 3285 001e 03       		.uleb128 0x3
 3286 001f 24       		.uleb128 0x24
 3287 0020 00       		.byte	0
 3288 0021 0B       		.uleb128 0xb
 3289 0022 0B       		.uleb128 0xb
 3290 0023 3E       		.uleb128 0x3e
 3291 0024 0B       		.uleb128 0xb
 3292 0025 03       		.uleb128 0x3
 3293 0026 08       		.uleb128 0x8
 3294 0027 00       		.byte	0
 3295 0028 00       		.byte	0
 3296 0029 04       		.uleb128 0x4
 3297 002a 16       		.uleb128 0x16
 3298 002b 00       		.byte	0
 3299 002c 03       		.uleb128 0x3
 3300 002d 0E       		.uleb128 0xe
 3301 002e 3A       		.uleb128 0x3a
 3302 002f 0B       		.uleb128 0xb
 3303 0030 3B       		.uleb128 0x3b
 3304 0031 05       		.uleb128 0x5
 3305 0032 49       		.uleb128 0x49
 3306 0033 13       		.uleb128 0x13
 3307 0034 00       		.byte	0
 3308 0035 00       		.byte	0
 3309 0036 05       		.uleb128 0x5
 3310 0037 35       		.uleb128 0x35
 3311 0038 00       		.byte	0
 3312 0039 49       		.uleb128 0x49
 3313 003a 13       		.uleb128 0x13
 3314 003b 00       		.byte	0
 3315 003c 00       		.byte	0
 3316 003d 06       		.uleb128 0x6
 3317 003e 0F       		.uleb128 0xf
 3318 003f 00       		.byte	0
 3319 0040 0B       		.uleb128 0xb
 3320 0041 0B       		.uleb128 0xb
 3321 0042 49       		.uleb128 0x49
 3322 0043 13       		.uleb128 0x13
 3323 0044 00       		.byte	0
 3324 0045 00       		.byte	0
 3325 0046 07       		.uleb128 0x7
 3326 0047 15       		.uleb128 0x15
 3327 0048 00       		.byte	0
 3328 0049 27       		.uleb128 0x27
 3329 004a 19       		.uleb128 0x19
 3330 004b 00       		.byte	0
 3331 004c 00       		.byte	0
 3332 004d 08       		.uleb128 0x8
 3333 004e 16       		.uleb128 0x16
 3334 004f 00       		.byte	0
 3335 0050 03       		.uleb128 0x3
 3336 0051 0E       		.uleb128 0xe
 3337 0052 3A       		.uleb128 0x3a
 3338 0053 0B       		.uleb128 0xb
 3339 0054 3B       		.uleb128 0x3b
 3340 0055 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 116


 3341 0056 49       		.uleb128 0x49
 3342 0057 13       		.uleb128 0x13
 3343 0058 00       		.byte	0
 3344 0059 00       		.byte	0
 3345 005a 09       		.uleb128 0x9
 3346 005b 2E       		.uleb128 0x2e
 3347 005c 00       		.byte	0
 3348 005d 3F       		.uleb128 0x3f
 3349 005e 19       		.uleb128 0x19
 3350 005f 03       		.uleb128 0x3
 3351 0060 0E       		.uleb128 0xe
 3352 0061 3A       		.uleb128 0x3a
 3353 0062 0B       		.uleb128 0xb
 3354 0063 3B       		.uleb128 0x3b
 3355 0064 05       		.uleb128 0x5
 3356 0065 27       		.uleb128 0x27
 3357 0066 19       		.uleb128 0x19
 3358 0067 20       		.uleb128 0x20
 3359 0068 0B       		.uleb128 0xb
 3360 0069 00       		.byte	0
 3361 006a 00       		.byte	0
 3362 006b 0A       		.uleb128 0xa
 3363 006c 2E       		.uleb128 0x2e
 3364 006d 01       		.byte	0x1
 3365 006e 03       		.uleb128 0x3
 3366 006f 0E       		.uleb128 0xe
 3367 0070 3A       		.uleb128 0x3a
 3368 0071 0B       		.uleb128 0xb
 3369 0072 3B       		.uleb128 0x3b
 3370 0073 05       		.uleb128 0x5
 3371 0074 27       		.uleb128 0x27
 3372 0075 19       		.uleb128 0x19
 3373 0076 20       		.uleb128 0x20
 3374 0077 0B       		.uleb128 0xb
 3375 0078 01       		.uleb128 0x1
 3376 0079 13       		.uleb128 0x13
 3377 007a 00       		.byte	0
 3378 007b 00       		.byte	0
 3379 007c 0B       		.uleb128 0xb
 3380 007d 34       		.uleb128 0x34
 3381 007e 00       		.byte	0
 3382 007f 03       		.uleb128 0x3
 3383 0080 08       		.uleb128 0x8
 3384 0081 3A       		.uleb128 0x3a
 3385 0082 0B       		.uleb128 0xb
 3386 0083 3B       		.uleb128 0x3b
 3387 0084 05       		.uleb128 0x5
 3388 0085 49       		.uleb128 0x49
 3389 0086 13       		.uleb128 0x13
 3390 0087 00       		.byte	0
 3391 0088 00       		.byte	0
 3392 0089 0C       		.uleb128 0xc
 3393 008a 2E       		.uleb128 0x2e
 3394 008b 01       		.byte	0x1
 3395 008c 3F       		.uleb128 0x3f
 3396 008d 19       		.uleb128 0x19
 3397 008e 03       		.uleb128 0x3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 117


 3398 008f 0E       		.uleb128 0xe
 3399 0090 3A       		.uleb128 0x3a
 3400 0091 0B       		.uleb128 0xb
 3401 0092 3B       		.uleb128 0x3b
 3402 0093 05       		.uleb128 0x5
 3403 0094 27       		.uleb128 0x27
 3404 0095 19       		.uleb128 0x19
 3405 0096 20       		.uleb128 0x20
 3406 0097 0B       		.uleb128 0xb
 3407 0098 01       		.uleb128 0x1
 3408 0099 13       		.uleb128 0x13
 3409 009a 00       		.byte	0
 3410 009b 00       		.byte	0
 3411 009c 0D       		.uleb128 0xd
 3412 009d 05       		.uleb128 0x5
 3413 009e 00       		.byte	0
 3414 009f 03       		.uleb128 0x3
 3415 00a0 0E       		.uleb128 0xe
 3416 00a1 3A       		.uleb128 0x3a
 3417 00a2 0B       		.uleb128 0xb
 3418 00a3 3B       		.uleb128 0x3b
 3419 00a4 05       		.uleb128 0x5
 3420 00a5 49       		.uleb128 0x49
 3421 00a6 13       		.uleb128 0x13
 3422 00a7 00       		.byte	0
 3423 00a8 00       		.byte	0
 3424 00a9 0E       		.uleb128 0xe
 3425 00aa 2E       		.uleb128 0x2e
 3426 00ab 00       		.byte	0
 3427 00ac 3F       		.uleb128 0x3f
 3428 00ad 19       		.uleb128 0x19
 3429 00ae 03       		.uleb128 0x3
 3430 00af 0E       		.uleb128 0xe
 3431 00b0 3A       		.uleb128 0x3a
 3432 00b1 0B       		.uleb128 0xb
 3433 00b2 3B       		.uleb128 0x3b
 3434 00b3 0B       		.uleb128 0xb
 3435 00b4 27       		.uleb128 0x27
 3436 00b5 19       		.uleb128 0x19
 3437 00b6 11       		.uleb128 0x11
 3438 00b7 01       		.uleb128 0x1
 3439 00b8 12       		.uleb128 0x12
 3440 00b9 06       		.uleb128 0x6
 3441 00ba 40       		.uleb128 0x40
 3442 00bb 18       		.uleb128 0x18
 3443 00bc 9742     		.uleb128 0x2117
 3444 00be 19       		.uleb128 0x19
 3445 00bf 00       		.byte	0
 3446 00c0 00       		.byte	0
 3447 00c1 0F       		.uleb128 0xf
 3448 00c2 2E       		.uleb128 0x2e
 3449 00c3 01       		.byte	0x1
 3450 00c4 3F       		.uleb128 0x3f
 3451 00c5 19       		.uleb128 0x19
 3452 00c6 03       		.uleb128 0x3
 3453 00c7 0E       		.uleb128 0xe
 3454 00c8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 118


 3455 00c9 0B       		.uleb128 0xb
 3456 00ca 3B       		.uleb128 0x3b
 3457 00cb 05       		.uleb128 0x5
 3458 00cc 27       		.uleb128 0x27
 3459 00cd 19       		.uleb128 0x19
 3460 00ce 11       		.uleb128 0x11
 3461 00cf 01       		.uleb128 0x1
 3462 00d0 12       		.uleb128 0x12
 3463 00d1 06       		.uleb128 0x6
 3464 00d2 40       		.uleb128 0x40
 3465 00d3 18       		.uleb128 0x18
 3466 00d4 9742     		.uleb128 0x2117
 3467 00d6 19       		.uleb128 0x19
 3468 00d7 01       		.uleb128 0x1
 3469 00d8 13       		.uleb128 0x13
 3470 00d9 00       		.byte	0
 3471 00da 00       		.byte	0
 3472 00db 10       		.uleb128 0x10
 3473 00dc 05       		.uleb128 0x5
 3474 00dd 00       		.byte	0
 3475 00de 03       		.uleb128 0x3
 3476 00df 0E       		.uleb128 0xe
 3477 00e0 3A       		.uleb128 0x3a
 3478 00e1 0B       		.uleb128 0xb
 3479 00e2 3B       		.uleb128 0x3b
 3480 00e3 05       		.uleb128 0x5
 3481 00e4 49       		.uleb128 0x49
 3482 00e5 13       		.uleb128 0x13
 3483 00e6 02       		.uleb128 0x2
 3484 00e7 17       		.uleb128 0x17
 3485 00e8 00       		.byte	0
 3486 00e9 00       		.byte	0
 3487 00ea 11       		.uleb128 0x11
 3488 00eb 34       		.uleb128 0x34
 3489 00ec 00       		.byte	0
 3490 00ed 03       		.uleb128 0x3
 3491 00ee 0E       		.uleb128 0xe
 3492 00ef 3A       		.uleb128 0x3a
 3493 00f0 0B       		.uleb128 0xb
 3494 00f1 3B       		.uleb128 0x3b
 3495 00f2 05       		.uleb128 0x5
 3496 00f3 49       		.uleb128 0x49
 3497 00f4 13       		.uleb128 0x13
 3498 00f5 02       		.uleb128 0x2
 3499 00f6 17       		.uleb128 0x17
 3500 00f7 00       		.byte	0
 3501 00f8 00       		.byte	0
 3502 00f9 12       		.uleb128 0x12
 3503 00fa 898201   		.uleb128 0x4109
 3504 00fd 00       		.byte	0
 3505 00fe 11       		.uleb128 0x11
 3506 00ff 01       		.uleb128 0x1
 3507 0100 31       		.uleb128 0x31
 3508 0101 13       		.uleb128 0x13
 3509 0102 00       		.byte	0
 3510 0103 00       		.byte	0
 3511 0104 13       		.uleb128 0x13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 119


 3512 0105 05       		.uleb128 0x5
 3513 0106 00       		.byte	0
 3514 0107 03       		.uleb128 0x3
 3515 0108 0E       		.uleb128 0xe
 3516 0109 3A       		.uleb128 0x3a
 3517 010a 0B       		.uleb128 0xb
 3518 010b 3B       		.uleb128 0x3b
 3519 010c 05       		.uleb128 0x5
 3520 010d 49       		.uleb128 0x49
 3521 010e 13       		.uleb128 0x13
 3522 010f 02       		.uleb128 0x2
 3523 0110 18       		.uleb128 0x18
 3524 0111 00       		.byte	0
 3525 0112 00       		.byte	0
 3526 0113 14       		.uleb128 0x14
 3527 0114 2E       		.uleb128 0x2e
 3528 0115 01       		.byte	0x1
 3529 0116 3F       		.uleb128 0x3f
 3530 0117 19       		.uleb128 0x19
 3531 0118 03       		.uleb128 0x3
 3532 0119 0E       		.uleb128 0xe
 3533 011a 3A       		.uleb128 0x3a
 3534 011b 0B       		.uleb128 0xb
 3535 011c 3B       		.uleb128 0x3b
 3536 011d 05       		.uleb128 0x5
 3537 011e 27       		.uleb128 0x27
 3538 011f 19       		.uleb128 0x19
 3539 0120 49       		.uleb128 0x49
 3540 0121 13       		.uleb128 0x13
 3541 0122 11       		.uleb128 0x11
 3542 0123 01       		.uleb128 0x1
 3543 0124 12       		.uleb128 0x12
 3544 0125 06       		.uleb128 0x6
 3545 0126 40       		.uleb128 0x40
 3546 0127 18       		.uleb128 0x18
 3547 0128 9742     		.uleb128 0x2117
 3548 012a 19       		.uleb128 0x19
 3549 012b 01       		.uleb128 0x1
 3550 012c 13       		.uleb128 0x13
 3551 012d 00       		.byte	0
 3552 012e 00       		.byte	0
 3553 012f 15       		.uleb128 0x15
 3554 0130 2E       		.uleb128 0x2e
 3555 0131 00       		.byte	0
 3556 0132 3F       		.uleb128 0x3f
 3557 0133 19       		.uleb128 0x19
 3558 0134 03       		.uleb128 0x3
 3559 0135 0E       		.uleb128 0xe
 3560 0136 3A       		.uleb128 0x3a
 3561 0137 0B       		.uleb128 0xb
 3562 0138 3B       		.uleb128 0x3b
 3563 0139 05       		.uleb128 0x5
 3564 013a 27       		.uleb128 0x27
 3565 013b 19       		.uleb128 0x19
 3566 013c 11       		.uleb128 0x11
 3567 013d 01       		.uleb128 0x1
 3568 013e 12       		.uleb128 0x12
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 120


 3569 013f 06       		.uleb128 0x6
 3570 0140 40       		.uleb128 0x40
 3571 0141 18       		.uleb128 0x18
 3572 0142 9742     		.uleb128 0x2117
 3573 0144 19       		.uleb128 0x19
 3574 0145 00       		.byte	0
 3575 0146 00       		.byte	0
 3576 0147 16       		.uleb128 0x16
 3577 0148 2E       		.uleb128 0x2e
 3578 0149 00       		.byte	0
 3579 014a 3F       		.uleb128 0x3f
 3580 014b 19       		.uleb128 0x19
 3581 014c 03       		.uleb128 0x3
 3582 014d 0E       		.uleb128 0xe
 3583 014e 3A       		.uleb128 0x3a
 3584 014f 0B       		.uleb128 0xb
 3585 0150 3B       		.uleb128 0x3b
 3586 0151 05       		.uleb128 0x5
 3587 0152 27       		.uleb128 0x27
 3588 0153 19       		.uleb128 0x19
 3589 0154 49       		.uleb128 0x49
 3590 0155 13       		.uleb128 0x13
 3591 0156 11       		.uleb128 0x11
 3592 0157 01       		.uleb128 0x1
 3593 0158 12       		.uleb128 0x12
 3594 0159 06       		.uleb128 0x6
 3595 015a 40       		.uleb128 0x40
 3596 015b 18       		.uleb128 0x18
 3597 015c 9742     		.uleb128 0x2117
 3598 015e 19       		.uleb128 0x19
 3599 015f 00       		.byte	0
 3600 0160 00       		.byte	0
 3601 0161 17       		.uleb128 0x17
 3602 0162 2E       		.uleb128 0x2e
 3603 0163 00       		.byte	0
 3604 0164 31       		.uleb128 0x31
 3605 0165 13       		.uleb128 0x13
 3606 0166 11       		.uleb128 0x11
 3607 0167 01       		.uleb128 0x1
 3608 0168 12       		.uleb128 0x12
 3609 0169 06       		.uleb128 0x6
 3610 016a 40       		.uleb128 0x40
 3611 016b 18       		.uleb128 0x18
 3612 016c 9742     		.uleb128 0x2117
 3613 016e 19       		.uleb128 0x19
 3614 016f 00       		.byte	0
 3615 0170 00       		.byte	0
 3616 0171 18       		.uleb128 0x18
 3617 0172 34       		.uleb128 0x34
 3618 0173 00       		.byte	0
 3619 0174 03       		.uleb128 0x3
 3620 0175 0E       		.uleb128 0xe
 3621 0176 3A       		.uleb128 0x3a
 3622 0177 0B       		.uleb128 0xb
 3623 0178 3B       		.uleb128 0x3b
 3624 0179 05       		.uleb128 0x5
 3625 017a 49       		.uleb128 0x49
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 121


 3626 017b 13       		.uleb128 0x13
 3627 017c 02       		.uleb128 0x2
 3628 017d 18       		.uleb128 0x18
 3629 017e 00       		.byte	0
 3630 017f 00       		.byte	0
 3631 0180 19       		.uleb128 0x19
 3632 0181 2E       		.uleb128 0x2e
 3633 0182 01       		.byte	0x1
 3634 0183 3F       		.uleb128 0x3f
 3635 0184 19       		.uleb128 0x19
 3636 0185 03       		.uleb128 0x3
 3637 0186 0E       		.uleb128 0xe
 3638 0187 3A       		.uleb128 0x3a
 3639 0188 0B       		.uleb128 0xb
 3640 0189 3B       		.uleb128 0x3b
 3641 018a 05       		.uleb128 0x5
 3642 018b 27       		.uleb128 0x27
 3643 018c 19       		.uleb128 0x19
 3644 018d 49       		.uleb128 0x49
 3645 018e 13       		.uleb128 0x13
 3646 018f 20       		.uleb128 0x20
 3647 0190 0B       		.uleb128 0xb
 3648 0191 01       		.uleb128 0x1
 3649 0192 13       		.uleb128 0x13
 3650 0193 00       		.byte	0
 3651 0194 00       		.byte	0
 3652 0195 1A       		.uleb128 0x1a
 3653 0196 34       		.uleb128 0x34
 3654 0197 00       		.byte	0
 3655 0198 03       		.uleb128 0x3
 3656 0199 0E       		.uleb128 0xe
 3657 019a 3A       		.uleb128 0x3a
 3658 019b 0B       		.uleb128 0xb
 3659 019c 3B       		.uleb128 0x3b
 3660 019d 05       		.uleb128 0x5
 3661 019e 49       		.uleb128 0x49
 3662 019f 13       		.uleb128 0x13
 3663 01a0 00       		.byte	0
 3664 01a1 00       		.byte	0
 3665 01a2 1B       		.uleb128 0x1b
 3666 01a3 2E       		.uleb128 0x2e
 3667 01a4 01       		.byte	0x1
 3668 01a5 31       		.uleb128 0x31
 3669 01a6 13       		.uleb128 0x13
 3670 01a7 11       		.uleb128 0x11
 3671 01a8 01       		.uleb128 0x1
 3672 01a9 12       		.uleb128 0x12
 3673 01aa 06       		.uleb128 0x6
 3674 01ab 40       		.uleb128 0x40
 3675 01ac 18       		.uleb128 0x18
 3676 01ad 9742     		.uleb128 0x2117
 3677 01af 19       		.uleb128 0x19
 3678 01b0 01       		.uleb128 0x1
 3679 01b1 13       		.uleb128 0x13
 3680 01b2 00       		.byte	0
 3681 01b3 00       		.byte	0
 3682 01b4 1C       		.uleb128 0x1c
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 122


 3683 01b5 05       		.uleb128 0x5
 3684 01b6 00       		.byte	0
 3685 01b7 31       		.uleb128 0x31
 3686 01b8 13       		.uleb128 0x13
 3687 01b9 02       		.uleb128 0x2
 3688 01ba 17       		.uleb128 0x17
 3689 01bb 00       		.byte	0
 3690 01bc 00       		.byte	0
 3691 01bd 1D       		.uleb128 0x1d
 3692 01be 05       		.uleb128 0x5
 3693 01bf 00       		.byte	0
 3694 01c0 31       		.uleb128 0x31
 3695 01c1 13       		.uleb128 0x13
 3696 01c2 02       		.uleb128 0x2
 3697 01c3 18       		.uleb128 0x18
 3698 01c4 00       		.byte	0
 3699 01c5 00       		.byte	0
 3700 01c6 1E       		.uleb128 0x1e
 3701 01c7 34       		.uleb128 0x34
 3702 01c8 00       		.byte	0
 3703 01c9 31       		.uleb128 0x31
 3704 01ca 13       		.uleb128 0x13
 3705 01cb 02       		.uleb128 0x2
 3706 01cc 18       		.uleb128 0x18
 3707 01cd 00       		.byte	0
 3708 01ce 00       		.byte	0
 3709 01cf 1F       		.uleb128 0x1f
 3710 01d0 34       		.uleb128 0x34
 3711 01d1 00       		.byte	0
 3712 01d2 31       		.uleb128 0x31
 3713 01d3 13       		.uleb128 0x13
 3714 01d4 1C       		.uleb128 0x1c
 3715 01d5 06       		.uleb128 0x6
 3716 01d6 00       		.byte	0
 3717 01d7 00       		.byte	0
 3718 01d8 20       		.uleb128 0x20
 3719 01d9 34       		.uleb128 0x34
 3720 01da 00       		.byte	0
 3721 01db 03       		.uleb128 0x3
 3722 01dc 0E       		.uleb128 0xe
 3723 01dd 3A       		.uleb128 0x3a
 3724 01de 0B       		.uleb128 0xb
 3725 01df 3B       		.uleb128 0x3b
 3726 01e0 05       		.uleb128 0x5
 3727 01e1 49       		.uleb128 0x49
 3728 01e2 13       		.uleb128 0x13
 3729 01e3 1C       		.uleb128 0x1c
 3730 01e4 06       		.uleb128 0x6
 3731 01e5 00       		.byte	0
 3732 01e6 00       		.byte	0
 3733 01e7 21       		.uleb128 0x21
 3734 01e8 898201   		.uleb128 0x4109
 3735 01eb 01       		.byte	0x1
 3736 01ec 11       		.uleb128 0x11
 3737 01ed 01       		.uleb128 0x1
 3738 01ee 31       		.uleb128 0x31
 3739 01ef 13       		.uleb128 0x13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 123


 3740 01f0 01       		.uleb128 0x1
 3741 01f1 13       		.uleb128 0x13
 3742 01f2 00       		.byte	0
 3743 01f3 00       		.byte	0
 3744 01f4 22       		.uleb128 0x22
 3745 01f5 8A8201   		.uleb128 0x410a
 3746 01f8 00       		.byte	0
 3747 01f9 02       		.uleb128 0x2
 3748 01fa 18       		.uleb128 0x18
 3749 01fb 9142     		.uleb128 0x2111
 3750 01fd 18       		.uleb128 0x18
 3751 01fe 00       		.byte	0
 3752 01ff 00       		.byte	0
 3753 0200 23       		.uleb128 0x23
 3754 0201 898201   		.uleb128 0x4109
 3755 0204 01       		.byte	0x1
 3756 0205 11       		.uleb128 0x11
 3757 0206 01       		.uleb128 0x1
 3758 0207 31       		.uleb128 0x31
 3759 0208 13       		.uleb128 0x13
 3760 0209 00       		.byte	0
 3761 020a 00       		.byte	0
 3762 020b 24       		.uleb128 0x24
 3763 020c 1D       		.uleb128 0x1d
 3764 020d 00       		.byte	0
 3765 020e 31       		.uleb128 0x31
 3766 020f 13       		.uleb128 0x13
 3767 0210 52       		.uleb128 0x52
 3768 0211 01       		.uleb128 0x1
 3769 0212 55       		.uleb128 0x55
 3770 0213 17       		.uleb128 0x17
 3771 0214 58       		.uleb128 0x58
 3772 0215 0B       		.uleb128 0xb
 3773 0216 59       		.uleb128 0x59
 3774 0217 05       		.uleb128 0x5
 3775 0218 00       		.byte	0
 3776 0219 00       		.byte	0
 3777 021a 25       		.uleb128 0x25
 3778 021b 2E       		.uleb128 0x2e
 3779 021c 01       		.byte	0x1
 3780 021d 3F       		.uleb128 0x3f
 3781 021e 19       		.uleb128 0x19
 3782 021f 03       		.uleb128 0x3
 3783 0220 0E       		.uleb128 0xe
 3784 0221 3A       		.uleb128 0x3a
 3785 0222 0B       		.uleb128 0xb
 3786 0223 3B       		.uleb128 0x3b
 3787 0224 05       		.uleb128 0x5
 3788 0225 27       		.uleb128 0x27
 3789 0226 19       		.uleb128 0x19
 3790 0227 11       		.uleb128 0x11
 3791 0228 01       		.uleb128 0x1
 3792 0229 12       		.uleb128 0x12
 3793 022a 06       		.uleb128 0x6
 3794 022b 40       		.uleb128 0x40
 3795 022c 18       		.uleb128 0x18
 3796 022d 9642     		.uleb128 0x2116
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 124


 3797 022f 19       		.uleb128 0x19
 3798 0230 01       		.uleb128 0x1
 3799 0231 13       		.uleb128 0x13
 3800 0232 00       		.byte	0
 3801 0233 00       		.byte	0
 3802 0234 26       		.uleb128 0x26
 3803 0235 34       		.uleb128 0x34
 3804 0236 00       		.byte	0
 3805 0237 03       		.uleb128 0x3
 3806 0238 08       		.uleb128 0x8
 3807 0239 3A       		.uleb128 0x3a
 3808 023a 0B       		.uleb128 0xb
 3809 023b 3B       		.uleb128 0x3b
 3810 023c 05       		.uleb128 0x5
 3811 023d 49       		.uleb128 0x49
 3812 023e 13       		.uleb128 0x13
 3813 023f 02       		.uleb128 0x2
 3814 0240 17       		.uleb128 0x17
 3815 0241 00       		.byte	0
 3816 0242 00       		.byte	0
 3817 0243 27       		.uleb128 0x27
 3818 0244 1D       		.uleb128 0x1d
 3819 0245 01       		.byte	0x1
 3820 0246 31       		.uleb128 0x31
 3821 0247 13       		.uleb128 0x13
 3822 0248 52       		.uleb128 0x52
 3823 0249 01       		.uleb128 0x1
 3824 024a 55       		.uleb128 0x55
 3825 024b 17       		.uleb128 0x17
 3826 024c 58       		.uleb128 0x58
 3827 024d 0B       		.uleb128 0xb
 3828 024e 59       		.uleb128 0x59
 3829 024f 05       		.uleb128 0x5
 3830 0250 01       		.uleb128 0x1
 3831 0251 13       		.uleb128 0x13
 3832 0252 00       		.byte	0
 3833 0253 00       		.byte	0
 3834 0254 28       		.uleb128 0x28
 3835 0255 05       		.uleb128 0x5
 3836 0256 00       		.byte	0
 3837 0257 31       		.uleb128 0x31
 3838 0258 13       		.uleb128 0x13
 3839 0259 1C       		.uleb128 0x1c
 3840 025a 0B       		.uleb128 0xb
 3841 025b 00       		.byte	0
 3842 025c 00       		.byte	0
 3843 025d 29       		.uleb128 0x29
 3844 025e 0B       		.uleb128 0xb
 3845 025f 01       		.byte	0x1
 3846 0260 55       		.uleb128 0x55
 3847 0261 17       		.uleb128 0x17
 3848 0262 00       		.byte	0
 3849 0263 00       		.byte	0
 3850 0264 2A       		.uleb128 0x2a
 3851 0265 34       		.uleb128 0x34
 3852 0266 00       		.byte	0
 3853 0267 31       		.uleb128 0x31
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 125


 3854 0268 13       		.uleb128 0x13
 3855 0269 02       		.uleb128 0x2
 3856 026a 17       		.uleb128 0x17
 3857 026b 00       		.byte	0
 3858 026c 00       		.byte	0
 3859 026d 2B       		.uleb128 0x2b
 3860 026e 1D       		.uleb128 0x1d
 3861 026f 00       		.byte	0
 3862 0270 31       		.uleb128 0x31
 3863 0271 13       		.uleb128 0x13
 3864 0272 11       		.uleb128 0x11
 3865 0273 01       		.uleb128 0x1
 3866 0274 12       		.uleb128 0x12
 3867 0275 06       		.uleb128 0x6
 3868 0276 58       		.uleb128 0x58
 3869 0277 0B       		.uleb128 0xb
 3870 0278 59       		.uleb128 0x59
 3871 0279 05       		.uleb128 0x5
 3872 027a 00       		.byte	0
 3873 027b 00       		.byte	0
 3874 027c 2C       		.uleb128 0x2c
 3875 027d 2E       		.uleb128 0x2e
 3876 027e 01       		.byte	0x1
 3877 027f 31       		.uleb128 0x31
 3878 0280 13       		.uleb128 0x13
 3879 0281 11       		.uleb128 0x11
 3880 0282 01       		.uleb128 0x1
 3881 0283 12       		.uleb128 0x12
 3882 0284 06       		.uleb128 0x6
 3883 0285 40       		.uleb128 0x40
 3884 0286 18       		.uleb128 0x18
 3885 0287 9642     		.uleb128 0x2116
 3886 0289 19       		.uleb128 0x19
 3887 028a 01       		.uleb128 0x1
 3888 028b 13       		.uleb128 0x13
 3889 028c 00       		.byte	0
 3890 028d 00       		.byte	0
 3891 028e 2D       		.uleb128 0x2d
 3892 028f 34       		.uleb128 0x34
 3893 0290 00       		.byte	0
 3894 0291 31       		.uleb128 0x31
 3895 0292 13       		.uleb128 0x13
 3896 0293 00       		.byte	0
 3897 0294 00       		.byte	0
 3898 0295 2E       		.uleb128 0x2e
 3899 0296 0B       		.uleb128 0xb
 3900 0297 01       		.byte	0x1
 3901 0298 11       		.uleb128 0x11
 3902 0299 01       		.uleb128 0x1
 3903 029a 12       		.uleb128 0x12
 3904 029b 06       		.uleb128 0x6
 3905 029c 01       		.uleb128 0x1
 3906 029d 13       		.uleb128 0x13
 3907 029e 00       		.byte	0
 3908 029f 00       		.byte	0
 3909 02a0 2F       		.uleb128 0x2f
 3910 02a1 01       		.uleb128 0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 126


 3911 02a2 01       		.byte	0x1
 3912 02a3 49       		.uleb128 0x49
 3913 02a4 13       		.uleb128 0x13
 3914 02a5 01       		.uleb128 0x1
 3915 02a6 13       		.uleb128 0x13
 3916 02a7 00       		.byte	0
 3917 02a8 00       		.byte	0
 3918 02a9 30       		.uleb128 0x30
 3919 02aa 21       		.uleb128 0x21
 3920 02ab 00       		.byte	0
 3921 02ac 49       		.uleb128 0x49
 3922 02ad 13       		.uleb128 0x13
 3923 02ae 2F       		.uleb128 0x2f
 3924 02af 0B       		.uleb128 0xb
 3925 02b0 00       		.byte	0
 3926 02b1 00       		.byte	0
 3927 02b2 31       		.uleb128 0x31
 3928 02b3 34       		.uleb128 0x34
 3929 02b4 00       		.byte	0
 3930 02b5 03       		.uleb128 0x3
 3931 02b6 0E       		.uleb128 0xe
 3932 02b7 3A       		.uleb128 0x3a
 3933 02b8 0B       		.uleb128 0xb
 3934 02b9 3B       		.uleb128 0x3b
 3935 02ba 0B       		.uleb128 0xb
 3936 02bb 49       		.uleb128 0x49
 3937 02bc 13       		.uleb128 0x13
 3938 02bd 02       		.uleb128 0x2
 3939 02be 18       		.uleb128 0x18
 3940 02bf 00       		.byte	0
 3941 02c0 00       		.byte	0
 3942 02c1 32       		.uleb128 0x32
 3943 02c2 34       		.uleb128 0x34
 3944 02c3 00       		.byte	0
 3945 02c4 03       		.uleb128 0x3
 3946 02c5 0E       		.uleb128 0xe
 3947 02c6 3A       		.uleb128 0x3a
 3948 02c7 0B       		.uleb128 0xb
 3949 02c8 3B       		.uleb128 0x3b
 3950 02c9 0B       		.uleb128 0xb
 3951 02ca 49       		.uleb128 0x49
 3952 02cb 13       		.uleb128 0x13
 3953 02cc 3F       		.uleb128 0x3f
 3954 02cd 19       		.uleb128 0x19
 3955 02ce 02       		.uleb128 0x2
 3956 02cf 18       		.uleb128 0x18
 3957 02d0 00       		.byte	0
 3958 02d1 00       		.byte	0
 3959 02d2 33       		.uleb128 0x33
 3960 02d3 26       		.uleb128 0x26
 3961 02d4 00       		.byte	0
 3962 02d5 49       		.uleb128 0x49
 3963 02d6 13       		.uleb128 0x13
 3964 02d7 00       		.byte	0
 3965 02d8 00       		.byte	0
 3966 02d9 34       		.uleb128 0x34
 3967 02da 2E       		.uleb128 0x2e
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 127


 3968 02db 00       		.byte	0
 3969 02dc 3F       		.uleb128 0x3f
 3970 02dd 19       		.uleb128 0x19
 3971 02de 03       		.uleb128 0x3
 3972 02df 0E       		.uleb128 0xe
 3973 02e0 3A       		.uleb128 0x3a
 3974 02e1 0B       		.uleb128 0xb
 3975 02e2 3B       		.uleb128 0x3b
 3976 02e3 0B       		.uleb128 0xb
 3977 02e4 27       		.uleb128 0x27
 3978 02e5 19       		.uleb128 0x19
 3979 02e6 49       		.uleb128 0x49
 3980 02e7 13       		.uleb128 0x13
 3981 02e8 3C       		.uleb128 0x3c
 3982 02e9 19       		.uleb128 0x19
 3983 02ea 00       		.byte	0
 3984 02eb 00       		.byte	0
 3985 02ec 35       		.uleb128 0x35
 3986 02ed 2E       		.uleb128 0x2e
 3987 02ee 01       		.byte	0x1
 3988 02ef 3F       		.uleb128 0x3f
 3989 02f0 19       		.uleb128 0x19
 3990 02f1 03       		.uleb128 0x3
 3991 02f2 0E       		.uleb128 0xe
 3992 02f3 3A       		.uleb128 0x3a
 3993 02f4 0B       		.uleb128 0xb
 3994 02f5 3B       		.uleb128 0x3b
 3995 02f6 0B       		.uleb128 0xb
 3996 02f7 27       		.uleb128 0x27
 3997 02f8 19       		.uleb128 0x19
 3998 02f9 3C       		.uleb128 0x3c
 3999 02fa 19       		.uleb128 0x19
 4000 02fb 01       		.uleb128 0x1
 4001 02fc 13       		.uleb128 0x13
 4002 02fd 00       		.byte	0
 4003 02fe 00       		.byte	0
 4004 02ff 36       		.uleb128 0x36
 4005 0300 05       		.uleb128 0x5
 4006 0301 00       		.byte	0
 4007 0302 49       		.uleb128 0x49
 4008 0303 13       		.uleb128 0x13
 4009 0304 00       		.byte	0
 4010 0305 00       		.byte	0
 4011 0306 37       		.uleb128 0x37
 4012 0307 2E       		.uleb128 0x2e
 4013 0308 01       		.byte	0x1
 4014 0309 3F       		.uleb128 0x3f
 4015 030a 19       		.uleb128 0x19
 4016 030b 03       		.uleb128 0x3
 4017 030c 0E       		.uleb128 0xe
 4018 030d 3A       		.uleb128 0x3a
 4019 030e 0B       		.uleb128 0xb
 4020 030f 3B       		.uleb128 0x3b
 4021 0310 0B       		.uleb128 0xb
 4022 0311 27       		.uleb128 0x27
 4023 0312 19       		.uleb128 0x19
 4024 0313 3C       		.uleb128 0x3c
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 128


 4025 0314 19       		.uleb128 0x19
 4026 0315 00       		.byte	0
 4027 0316 00       		.byte	0
 4028 0317 00       		.byte	0
 4029              		.section	.debug_loc,"",%progbits
 4030              	.Ldebug_loc0:
 4031              	.LLST0:
 4032 0000 00000000 		.4byte	.LVL0
 4033 0004 07000000 		.4byte	.LVL1-1
 4034 0008 0100     		.2byte	0x1
 4035 000a 50       		.byte	0x50
 4036 000b 07000000 		.4byte	.LVL1-1
 4037 000f 1A000000 		.4byte	.LVL5
 4038 0013 0100     		.2byte	0x1
 4039 0015 54       		.byte	0x54
 4040 0016 1A000000 		.4byte	.LVL5
 4041 001a 20000000 		.4byte	.LFE2
 4042 001e 0400     		.2byte	0x4
 4043 0020 F3       		.byte	0xf3
 4044 0021 01       		.uleb128 0x1
 4045 0022 50       		.byte	0x50
 4046 0023 9F       		.byte	0x9f
 4047 0024 00000000 		.4byte	0
 4048 0028 00000000 		.4byte	0
 4049              	.LLST1:
 4050 002c 08000000 		.4byte	.LVL1
 4051 0030 19000000 		.4byte	.LVL4-1
 4052 0034 0100     		.2byte	0x1
 4053 0036 50       		.byte	0x50
 4054 0037 00000000 		.4byte	0
 4055 003b 00000000 		.4byte	0
 4056              	.LLST2:
 4057 003f 10000000 		.4byte	.LVL2
 4058 0043 14000000 		.4byte	.LVL3
 4059 0047 0100     		.2byte	0x1
 4060 0049 52       		.byte	0x52
 4061 004a 14000000 		.4byte	.LVL3
 4062 004e 19000000 		.4byte	.LVL4-1
 4063 0052 0100     		.2byte	0x1
 4064 0054 53       		.byte	0x53
 4065 0055 00000000 		.4byte	0
 4066 0059 00000000 		.4byte	0
 4067              	.LLST3:
 4068 005d 06000000 		.4byte	.LVL7
 4069 0061 0D000000 		.4byte	.LVL9-1
 4070 0065 0100     		.2byte	0x1
 4071 0067 50       		.byte	0x50
 4072 0068 00000000 		.4byte	0
 4073 006c 00000000 		.4byte	0
 4074              	.LLST4:
 4075 0070 0A000000 		.4byte	.LVL8
 4076 0074 12000000 		.4byte	.LVL10
 4077 0078 0500     		.2byte	0x5
 4078 007a 74       		.byte	0x74
 4079 007b 00       		.sleb128 0
 4080 007c 37       		.byte	0x37
 4081 007d 1A       		.byte	0x1a
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 129


 4082 007e 9F       		.byte	0x9f
 4083 007f 12000000 		.4byte	.LVL10
 4084 0083 18000000 		.4byte	.LFE4
 4085 0087 0100     		.2byte	0x1
 4086 0089 50       		.byte	0x50
 4087 008a 00000000 		.4byte	0
 4088 008e 00000000 		.4byte	0
 4089              	.LLST5:
 4090 0092 00000000 		.4byte	.LVL11
 4091 0096 07000000 		.4byte	.LVL12-1
 4092 009a 0100     		.2byte	0x1
 4093 009c 50       		.byte	0x50
 4094 009d 07000000 		.4byte	.LVL12-1
 4095 00a1 1E000000 		.4byte	.LVL14
 4096 00a5 0100     		.2byte	0x1
 4097 00a7 55       		.byte	0x55
 4098 00a8 1E000000 		.4byte	.LVL14
 4099 00ac 28000000 		.4byte	.LFE5
 4100 00b0 0400     		.2byte	0x4
 4101 00b2 F3       		.byte	0xf3
 4102 00b3 01       		.uleb128 0x1
 4103 00b4 50       		.byte	0x50
 4104 00b5 9F       		.byte	0x9f
 4105 00b6 00000000 		.4byte	0
 4106 00ba 00000000 		.4byte	0
 4107              	.LLST6:
 4108 00be 08000000 		.4byte	.LVL12
 4109 00c2 1D000000 		.4byte	.LVL13-1
 4110 00c6 0100     		.2byte	0x1
 4111 00c8 50       		.byte	0x50
 4112 00c9 00000000 		.4byte	0
 4113 00cd 00000000 		.4byte	0
 4114              	.LLST7:
 4115 00d1 00000000 		.4byte	.LVL15
 4116 00d5 08000000 		.4byte	.LVL16
 4117 00d9 0100     		.2byte	0x1
 4118 00db 50       		.byte	0x50
 4119 00dc 08000000 		.4byte	.LVL16
 4120 00e0 14000000 		.4byte	.LFE11
 4121 00e4 0100     		.2byte	0x1
 4122 00e6 52       		.byte	0x52
 4123 00e7 00000000 		.4byte	0
 4124 00eb 00000000 		.4byte	0
 4125              	.LLST8:
 4126 00ef 0A000000 		.4byte	.LVL17
 4127 00f3 0C000000 		.4byte	.LVL18
 4128 00f7 0500     		.2byte	0x5
 4129 00f9 70       		.byte	0x70
 4130 00fa 00       		.sleb128 0
 4131 00fb 49       		.byte	0x49
 4132 00fc 1A       		.byte	0x1a
 4133 00fd 9F       		.byte	0x9f
 4134 00fe 0C000000 		.4byte	.LVL18
 4135 0102 14000000 		.4byte	.LFE11
 4136 0106 0100     		.2byte	0x1
 4137 0108 50       		.byte	0x50
 4138 0109 00000000 		.4byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 130


 4139 010d 00000000 		.4byte	0
 4140              	.LLST9:
 4141 0111 00000000 		.4byte	.LVL21
 4142 0115 04000000 		.4byte	.LVL22
 4143 0119 0100     		.2byte	0x1
 4144 011b 50       		.byte	0x50
 4145 011c 04000000 		.4byte	.LVL22
 4146 0120 0E000000 		.4byte	.LFE14
 4147 0124 0400     		.2byte	0x4
 4148 0126 F3       		.byte	0xf3
 4149 0127 01       		.uleb128 0x1
 4150 0128 50       		.byte	0x50
 4151 0129 9F       		.byte	0x9f
 4152 012a 00000000 		.4byte	0
 4153 012e 00000000 		.4byte	0
 4154              	.LLST10:
 4155 0132 00000000 		.4byte	.LVL24
 4156 0136 04000000 		.4byte	.LVL25
 4157 013a 0100     		.2byte	0x1
 4158 013c 50       		.byte	0x50
 4159 013d 04000000 		.4byte	.LVL25
 4160 0141 0C000000 		.4byte	.LFE15
 4161 0145 0400     		.2byte	0x4
 4162 0147 F3       		.byte	0xf3
 4163 0148 01       		.uleb128 0x1
 4164 0149 50       		.byte	0x50
 4165 014a 9F       		.byte	0x9f
 4166 014b 00000000 		.4byte	0
 4167 014f 00000000 		.4byte	0
 4168              	.LLST11:
 4169 0153 00000000 		.4byte	.LVL26
 4170 0157 04000000 		.4byte	.LVL27
 4171 015b 0100     		.2byte	0x1
 4172 015d 50       		.byte	0x50
 4173 015e 04000000 		.4byte	.LVL27
 4174 0162 10000000 		.4byte	.LFE16
 4175 0166 0400     		.2byte	0x4
 4176 0168 F3       		.byte	0xf3
 4177 0169 01       		.uleb128 0x1
 4178 016a 50       		.byte	0x50
 4179 016b 9F       		.byte	0x9f
 4180 016c 00000000 		.4byte	0
 4181 0170 00000000 		.4byte	0
 4182              	.LLST12:
 4183 0174 00000000 		.4byte	.LVL29
 4184 0178 04000000 		.4byte	.LVL30
 4185 017c 0100     		.2byte	0x1
 4186 017e 50       		.byte	0x50
 4187 017f 04000000 		.4byte	.LVL30
 4188 0183 10000000 		.4byte	.LFE17
 4189 0187 0400     		.2byte	0x4
 4190 0189 F3       		.byte	0xf3
 4191 018a 01       		.uleb128 0x1
 4192 018b 50       		.byte	0x50
 4193 018c 9F       		.byte	0x9f
 4194 018d 00000000 		.4byte	0
 4195 0191 00000000 		.4byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 131


 4196              	.LLST13:
 4197 0195 00000000 		.4byte	.LVL31
 4198 0199 09000000 		.4byte	.LVL33-1
 4199 019d 0100     		.2byte	0x1
 4200 019f 50       		.byte	0x50
 4201 01a0 09000000 		.4byte	.LVL33-1
 4202 01a4 30000000 		.4byte	.LFE18
 4203 01a8 0400     		.2byte	0x4
 4204 01aa F3       		.byte	0xf3
 4205 01ab 01       		.uleb128 0x1
 4206 01ac 50       		.byte	0x50
 4207 01ad 9F       		.byte	0x9f
 4208 01ae 00000000 		.4byte	0
 4209 01b2 00000000 		.4byte	0
 4210              	.LLST14:
 4211 01b6 00000000 		.4byte	.LVL31
 4212 01ba 09000000 		.4byte	.LVL33-1
 4213 01be 0100     		.2byte	0x1
 4214 01c0 51       		.byte	0x51
 4215 01c1 09000000 		.4byte	.LVL33-1
 4216 01c5 30000000 		.4byte	.LFE18
 4217 01c9 0400     		.2byte	0x4
 4218 01cb F3       		.byte	0xf3
 4219 01cc 01       		.uleb128 0x1
 4220 01cd 51       		.byte	0x51
 4221 01ce 9F       		.byte	0x9f
 4222 01cf 00000000 		.4byte	0
 4223 01d3 00000000 		.4byte	0
 4224              	.LLST15:
 4225 01d7 0A000000 		.4byte	.LVL33
 4226 01db 29000000 		.4byte	.LVL38-1
 4227 01df 0100     		.2byte	0x1
 4228 01e1 50       		.byte	0x50
 4229 01e2 00000000 		.4byte	0
 4230 01e6 00000000 		.4byte	0
 4231              	.LLST16:
 4232 01ea 04000000 		.4byte	.LVL32
 4233 01ee 16000000 		.4byte	.LVL34
 4234 01f2 0C00     		.2byte	0xc
 4235 01f4 74       		.byte	0x74
 4236 01f5 00       		.sleb128 0
 4237 01f6 33       		.byte	0x33
 4238 01f7 1A       		.byte	0x1a
 4239 01f8 08       		.byte	0x8
 4240 01f9 FF       		.byte	0xff
 4241 01fa 1A       		.byte	0x1a
 4242 01fb 33       		.byte	0x33
 4243 01fc 24       		.byte	0x24
 4244 01fd 23       		.byte	0x23
 4245 01fe 06       		.uleb128 0x6
 4246 01ff 9F       		.byte	0x9f
 4247 0200 00000000 		.4byte	0
 4248 0204 00000000 		.4byte	0
 4249              	.LLST17:
 4250 0208 20000000 		.4byte	.LVL35
 4251 020c 29000000 		.4byte	.LVL38-1
 4252 0210 0100     		.2byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 132


 4253 0212 51       		.byte	0x51
 4254 0213 00000000 		.4byte	0
 4255 0217 00000000 		.4byte	0
 4256              	.LLST18:
 4257 021b 00000000 		.4byte	.LVL39
 4258 021f 18000000 		.4byte	.LVL42
 4259 0223 0100     		.2byte	0x1
 4260 0225 50       		.byte	0x50
 4261 0226 18000000 		.4byte	.LVL42
 4262 022a 20000000 		.4byte	.LFE19
 4263 022e 0400     		.2byte	0x4
 4264 0230 F3       		.byte	0xf3
 4265 0231 01       		.uleb128 0x1
 4266 0232 50       		.byte	0x50
 4267 0233 9F       		.byte	0x9f
 4268 0234 00000000 		.4byte	0
 4269 0238 00000000 		.4byte	0
 4270              	.LLST19:
 4271 023c 0A000000 		.4byte	.LVL40
 4272 0240 16000000 		.4byte	.LVL41
 4273 0244 0F00     		.2byte	0xf
 4274 0246 71       		.byte	0x71
 4275 0247 00       		.sleb128 0
 4276 0248 70       		.byte	0x70
 4277 0249 00       		.sleb128 0
 4278 024a 33       		.byte	0x33
 4279 024b 1A       		.byte	0x1a
 4280 024c 08       		.byte	0x8
 4281 024d FF       		.byte	0xff
 4282 024e 1A       		.byte	0x1a
 4283 024f 33       		.byte	0x33
 4284 0250 24       		.byte	0x24
 4285 0251 23       		.byte	0x23
 4286 0252 06       		.uleb128 0x6
 4287 0253 25       		.byte	0x25
 4288 0254 9F       		.byte	0x9f
 4289 0255 00000000 		.4byte	0
 4290 0259 00000000 		.4byte	0
 4291              	.LLST20:
 4292 025d 00000000 		.4byte	.LVL43
 4293 0261 04000000 		.4byte	.LVL44
 4294 0265 0100     		.2byte	0x1
 4295 0267 50       		.byte	0x50
 4296 0268 04000000 		.4byte	.LVL44
 4297 026c 14000000 		.4byte	.LFE20
 4298 0270 0400     		.2byte	0x4
 4299 0272 F3       		.byte	0xf3
 4300 0273 01       		.uleb128 0x1
 4301 0274 50       		.byte	0x50
 4302 0275 9F       		.byte	0x9f
 4303 0276 00000000 		.4byte	0
 4304 027a 00000000 		.4byte	0
 4305              	.LLST21:
 4306 027e 00000000 		.4byte	.LVL45
 4307 0282 06000000 		.4byte	.LVL46
 4308 0286 0100     		.2byte	0x1
 4309 0288 50       		.byte	0x50
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 133


 4310 0289 06000000 		.4byte	.LVL46
 4311 028d 18000000 		.4byte	.LFE21
 4312 0291 0400     		.2byte	0x4
 4313 0293 F3       		.byte	0xf3
 4314 0294 01       		.uleb128 0x1
 4315 0295 50       		.byte	0x50
 4316 0296 9F       		.byte	0x9f
 4317 0297 00000000 		.4byte	0
 4318 029b 00000000 		.4byte	0
 4319              	.LLST22:
 4320 029f 00000000 		.4byte	.LVL47
 4321 02a3 04000000 		.4byte	.LVL48
 4322 02a7 0100     		.2byte	0x1
 4323 02a9 50       		.byte	0x50
 4324 02aa 04000000 		.4byte	.LVL48
 4325 02ae 14000000 		.4byte	.LFE22
 4326 02b2 0400     		.2byte	0x4
 4327 02b4 F3       		.byte	0xf3
 4328 02b5 01       		.uleb128 0x1
 4329 02b6 50       		.byte	0x50
 4330 02b7 9F       		.byte	0x9f
 4331 02b8 00000000 		.4byte	0
 4332 02bc 00000000 		.4byte	0
 4333              	.LLST23:
 4334 02c0 00000000 		.4byte	.LVL49
 4335 02c4 04000000 		.4byte	.LVL50
 4336 02c8 0100     		.2byte	0x1
 4337 02ca 50       		.byte	0x50
 4338 02cb 04000000 		.4byte	.LVL50
 4339 02cf 14000000 		.4byte	.LFE23
 4340 02d3 0400     		.2byte	0x4
 4341 02d5 F3       		.byte	0xf3
 4342 02d6 01       		.uleb128 0x1
 4343 02d7 50       		.byte	0x50
 4344 02d8 9F       		.byte	0x9f
 4345 02d9 00000000 		.4byte	0
 4346 02dd 00000000 		.4byte	0
 4347              	.LLST24:
 4348 02e1 00000000 		.4byte	.LVL51
 4349 02e5 04000000 		.4byte	.LVL52
 4350 02e9 0100     		.2byte	0x1
 4351 02eb 50       		.byte	0x50
 4352 02ec 04000000 		.4byte	.LVL52
 4353 02f0 14000000 		.4byte	.LFE24
 4354 02f4 0400     		.2byte	0x4
 4355 02f6 F3       		.byte	0xf3
 4356 02f7 01       		.uleb128 0x1
 4357 02f8 50       		.byte	0x50
 4358 02f9 9F       		.byte	0x9f
 4359 02fa 00000000 		.4byte	0
 4360 02fe 00000000 		.4byte	0
 4361              	.LLST25:
 4362 0302 00000000 		.4byte	.LVL54
 4363 0306 04000000 		.4byte	.LVL55
 4364 030a 0100     		.2byte	0x1
 4365 030c 50       		.byte	0x50
 4366 030d 04000000 		.4byte	.LVL55
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 134


 4367 0311 22000000 		.4byte	.LVL59
 4368 0315 0100     		.2byte	0x1
 4369 0317 54       		.byte	0x54
 4370 0318 00000000 		.4byte	0
 4371 031c 00000000 		.4byte	0
 4372              	.LLST26:
 4373 0320 00000000 		.4byte	.LVL60
 4374 0324 08000000 		.4byte	.LVL61
 4375 0328 0100     		.2byte	0x1
 4376 032a 50       		.byte	0x50
 4377 032b 08000000 		.4byte	.LVL61
 4378 032f 14000000 		.4byte	.LFE28
 4379 0333 0400     		.2byte	0x4
 4380 0335 F3       		.byte	0xf3
 4381 0336 01       		.uleb128 0x1
 4382 0337 50       		.byte	0x50
 4383 0338 9F       		.byte	0x9f
 4384 0339 00000000 		.4byte	0
 4385 033d 00000000 		.4byte	0
 4386              	.LLST27:
 4387 0341 00000000 		.4byte	.LVL63
 4388 0345 09000000 		.4byte	.LVL64-1
 4389 0349 0100     		.2byte	0x1
 4390 034b 50       		.byte	0x50
 4391 034c 09000000 		.4byte	.LVL64-1
 4392 0350 A2000000 		.4byte	.LVL80
 4393 0354 0100     		.2byte	0x1
 4394 0356 55       		.byte	0x55
 4395 0357 A2000000 		.4byte	.LVL80
 4396 035b CC000000 		.4byte	.LVL86
 4397 035f 0700     		.2byte	0x7
 4398 0361 75       		.byte	0x75
 4399 0362 B39C8080 		.sleb128 -268431821
 4399      7F
 4400 0367 9F       		.byte	0x9f
 4401 0368 CC000000 		.4byte	.LVL86
 4402 036c 24010000 		.4byte	.LFE6
 4403 0370 0600     		.2byte	0x6
 4404 0372 91       		.byte	0x91
 4405 0373 5C       		.sleb128 -36
 4406 0374 06       		.byte	0x6
 4407 0375 23       		.byte	0x23
 4408 0376 03       		.uleb128 0x3
 4409 0377 9F       		.byte	0x9f
 4410 0378 00000000 		.4byte	0
 4411 037c 00000000 		.4byte	0
 4412              	.LLST28:
 4413 0380 24000000 		.4byte	.LVL66
 4414 0384 26000000 		.4byte	.LVL67
 4415 0388 0100     		.2byte	0x1
 4416 038a 54       		.byte	0x54
 4417 038b 36000000 		.4byte	.LVL68
 4418 038f 38000000 		.4byte	.LVL69
 4419 0393 0100     		.2byte	0x1
 4420 0395 54       		.byte	0x54
 4421 0396 48000000 		.4byte	.LVL70
 4422 039a 4A000000 		.4byte	.LVL71
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 135


 4423 039e 0100     		.2byte	0x1
 4424 03a0 54       		.byte	0x54
 4425 03a1 5A000000 		.4byte	.LVL72
 4426 03a5 5C000000 		.4byte	.LVL73
 4427 03a9 0100     		.2byte	0x1
 4428 03ab 54       		.byte	0x54
 4429 03ac 64000000 		.4byte	.LVL74
 4430 03b0 CC000000 		.4byte	.LVL86
 4431 03b4 0100     		.2byte	0x1
 4432 03b6 54       		.byte	0x54
 4433 03b7 00000000 		.4byte	0
 4434 03bb 00000000 		.4byte	0
 4435              	.LLST29:
 4436 03bf 6C000000 		.4byte	.LVL75
 4437 03c3 CC000000 		.4byte	.LVL86
 4438 03c7 0200     		.2byte	0x2
 4439 03c9 91       		.byte	0x91
 4440 03ca 54       		.sleb128 -44
 4441 03cb 00000000 		.4byte	0
 4442 03cf 00000000 		.4byte	0
 4443              	.LLST30:
 4444 03d3 76000000 		.4byte	.LVL76
 4445 03d7 CC000000 		.4byte	.LVL86
 4446 03db 0200     		.2byte	0x2
 4447 03dd 91       		.byte	0x91
 4448 03de 58       		.sleb128 -40
 4449 03df 00000000 		.4byte	0
 4450 03e3 00000000 		.4byte	0
 4451              	.LLST31:
 4452 03e7 8A000000 		.4byte	.LVL77
 4453 03eb 96000000 		.4byte	.LVL78
 4454 03ef 0100     		.2byte	0x1
 4455 03f1 56       		.byte	0x56
 4456 03f2 00000000 		.4byte	0
 4457 03f6 00000000 		.4byte	0
 4458              	.LLST32:
 4459 03fa A8000000 		.4byte	.LVL81
 4460 03fe AC000000 		.4byte	.LVL82
 4461 0402 0100     		.2byte	0x1
 4462 0404 53       		.byte	0x53
 4463 0405 AC000000 		.4byte	.LVL82
 4464 0409 AE000000 		.4byte	.LVL83
 4465 040d 0400     		.2byte	0x4
 4466 040f 72       		.byte	0x72
 4467 0410 00       		.sleb128 0
 4468 0411 06       		.byte	0x6
 4469 0412 9F       		.byte	0x9f
 4470 0413 AE000000 		.4byte	.LVL83
 4471 0417 B0000000 		.4byte	.LVL84
 4472 041b 0700     		.2byte	0x7
 4473 041d 0C       		.byte	0xc
 4474 041e 28FF0B40 		.4byte	0x400bff28
 4475 0422 06       		.byte	0x6
 4476 0423 9F       		.byte	0x9f
 4477 0424 00000000 		.4byte	0
 4478 0428 00000000 		.4byte	0
 4479              	.LLST33:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 136


 4480 042c 00000000 		.4byte	.LVL88
 4481 0430 0E000000 		.4byte	.LVL89
 4482 0434 0100     		.2byte	0x1
 4483 0436 50       		.byte	0x50
 4484 0437 0E000000 		.4byte	.LVL89
 4485 043b 44000000 		.4byte	.LFE7
 4486 043f 0400     		.2byte	0x4
 4487 0441 F3       		.byte	0xf3
 4488 0442 01       		.uleb128 0x1
 4489 0443 50       		.byte	0x50
 4490 0444 9F       		.byte	0x9f
 4491 0445 00000000 		.4byte	0
 4492 0449 00000000 		.4byte	0
 4493              	.LLST34:
 4494 044d 00000000 		.4byte	.LVL91
 4495 0451 18000000 		.4byte	.LVL92
 4496 0455 0100     		.2byte	0x1
 4497 0457 50       		.byte	0x50
 4498 0458 18000000 		.4byte	.LVL92
 4499 045c 48000000 		.4byte	.LFE29
 4500 0460 0400     		.2byte	0x4
 4501 0462 F3       		.byte	0xf3
 4502 0463 01       		.uleb128 0x1
 4503 0464 50       		.byte	0x50
 4504 0465 9F       		.byte	0x9f
 4505 0466 00000000 		.4byte	0
 4506 046a 00000000 		.4byte	0
 4507              	.LLST35:
 4508 046e 00000000 		.4byte	.LVL95
 4509 0472 0C000000 		.4byte	.LVL96
 4510 0476 0200     		.2byte	0x2
 4511 0478 30       		.byte	0x30
 4512 0479 9F       		.byte	0x9f
 4513 047a 0C000000 		.4byte	.LVL96
 4514 047e 10000000 		.4byte	.LVL97
 4515 0482 0200     		.2byte	0x2
 4516 0484 31       		.byte	0x31
 4517 0485 9F       		.byte	0x9f
 4518 0486 10000000 		.4byte	.LVL97
 4519 048a 12000000 		.4byte	.LVL98
 4520 048e 0200     		.2byte	0x2
 4521 0490 32       		.byte	0x32
 4522 0491 9F       		.byte	0x9f
 4523 0492 12000000 		.4byte	.LVL98
 4524 0496 14000000 		.4byte	.LVL99
 4525 049a 0200     		.2byte	0x2
 4526 049c 33       		.byte	0x33
 4527 049d 9F       		.byte	0x9f
 4528 049e 14000000 		.4byte	.LVL99
 4529 04a2 50000000 		.4byte	.LFE31
 4530 04a6 0200     		.2byte	0x2
 4531 04a8 35       		.byte	0x35
 4532 04a9 9F       		.byte	0x9f
 4533 04aa 00000000 		.4byte	0
 4534 04ae 00000000 		.4byte	0
 4535              	.LLST36:
 4536 04b2 14000000 		.4byte	.LVL99
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 137


 4537 04b6 16000000 		.4byte	.LVL100
 4538 04ba 0500     		.2byte	0x5
 4539 04bc 0C       		.byte	0xc
 4540 04bd 3C000020 		.4byte	0x2000003c
 4541 04c1 16000000 		.4byte	.LVL100
 4542 04c5 1A000000 		.4byte	.LVL101
 4543 04c9 0200     		.2byte	0x2
 4544 04cb 73       		.byte	0x73
 4545 04cc 00       		.sleb128 0
 4546 04cd 00000000 		.4byte	0
 4547 04d1 00000000 		.4byte	0
 4548              	.LLST37:
 4549 04d5 00000000 		.4byte	.LVL107
 4550 04d9 04000000 		.4byte	.LVL108
 4551 04dd 0100     		.2byte	0x1
 4552 04df 50       		.byte	0x50
 4553 04e0 04000000 		.4byte	.LVL108
 4554 04e4 10000000 		.4byte	.LFE36
 4555 04e8 0400     		.2byte	0x4
 4556 04ea F3       		.byte	0xf3
 4557 04eb 01       		.uleb128 0x1
 4558 04ec 50       		.byte	0x50
 4559 04ed 9F       		.byte	0x9f
 4560 04ee 00000000 		.4byte	0
 4561 04f2 00000000 		.4byte	0
 4562              	.LLST38:
 4563 04f6 00000000 		.4byte	.LVL111
 4564 04fa 06000000 		.4byte	.LVL112
 4565 04fe 0100     		.2byte	0x1
 4566 0500 50       		.byte	0x50
 4567 0501 06000000 		.4byte	.LVL112
 4568 0505 10000000 		.4byte	.LFE41
 4569 0509 0400     		.2byte	0x4
 4570 050b F3       		.byte	0xf3
 4571 050c 01       		.uleb128 0x1
 4572 050d 50       		.byte	0x50
 4573 050e 9F       		.byte	0x9f
 4574 050f 00000000 		.4byte	0
 4575 0513 00000000 		.4byte	0
 4576              	.LLST39:
 4577 0517 00000000 		.4byte	.LVL113
 4578 051b 04000000 		.4byte	.LVL114
 4579 051f 0100     		.2byte	0x1
 4580 0521 50       		.byte	0x50
 4581 0522 04000000 		.4byte	.LVL114
 4582 0526 0C000000 		.4byte	.LFE42
 4583 052a 0400     		.2byte	0x4
 4584 052c F3       		.byte	0xf3
 4585 052d 01       		.uleb128 0x1
 4586 052e 50       		.byte	0x50
 4587 052f 9F       		.byte	0x9f
 4588 0530 00000000 		.4byte	0
 4589 0534 00000000 		.4byte	0
 4590              		.section	.debug_aranges,"",%progbits
 4591 0000 7C010000 		.4byte	0x17c
 4592 0004 0200     		.2byte	0x2
 4593 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 138


 4594 000a 04       		.byte	0x4
 4595 000b 00       		.byte	0
 4596 000c 0000     		.2byte	0
 4597 000e 0000     		.2byte	0
 4598 0010 00000000 		.4byte	.LFB0
 4599 0014 14000000 		.4byte	.LFE0-.LFB0
 4600 0018 00000000 		.4byte	.LFB1
 4601 001c 10000000 		.4byte	.LFE1-.LFB1
 4602 0020 00000000 		.4byte	.LFB2
 4603 0024 20000000 		.4byte	.LFE2-.LFB2
 4604 0028 00000000 		.4byte	.LFB3
 4605 002c 34000000 		.4byte	.LFE3-.LFB3
 4606 0030 00000000 		.4byte	.LFB4
 4607 0034 18000000 		.4byte	.LFE4-.LFB4
 4608 0038 00000000 		.4byte	.LFB5
 4609 003c 28000000 		.4byte	.LFE5-.LFB5
 4610 0040 00000000 		.4byte	.LFB8
 4611 0044 20000000 		.4byte	.LFE8-.LFB8
 4612 0048 00000000 		.4byte	.LFB9
 4613 004c 10000000 		.4byte	.LFE9-.LFB9
 4614 0050 00000000 		.4byte	.LFB10
 4615 0054 0C000000 		.4byte	.LFE10-.LFB10
 4616 0058 00000000 		.4byte	.LFB11
 4617 005c 14000000 		.4byte	.LFE11-.LFB11
 4618 0060 00000000 		.4byte	.LFB12
 4619 0064 10000000 		.4byte	.LFE12-.LFB12
 4620 0068 00000000 		.4byte	.LFB13
 4621 006c 0C000000 		.4byte	.LFE13-.LFB13
 4622 0070 00000000 		.4byte	.LFB14
 4623 0074 0E000000 		.4byte	.LFE14-.LFB14
 4624 0078 00000000 		.4byte	.LFB15
 4625 007c 0C000000 		.4byte	.LFE15-.LFB15
 4626 0080 00000000 		.4byte	.LFB16
 4627 0084 10000000 		.4byte	.LFE16-.LFB16
 4628 0088 00000000 		.4byte	.LFB17
 4629 008c 10000000 		.4byte	.LFE17-.LFB17
 4630 0090 00000000 		.4byte	.LFB18
 4631 0094 30000000 		.4byte	.LFE18-.LFB18
 4632 0098 00000000 		.4byte	.LFB19
 4633 009c 20000000 		.4byte	.LFE19-.LFB19
 4634 00a0 00000000 		.4byte	.LFB20
 4635 00a4 14000000 		.4byte	.LFE20-.LFB20
 4636 00a8 00000000 		.4byte	.LFB21
 4637 00ac 18000000 		.4byte	.LFE21-.LFB21
 4638 00b0 00000000 		.4byte	.LFB22
 4639 00b4 14000000 		.4byte	.LFE22-.LFB22
 4640 00b8 00000000 		.4byte	.LFB23
 4641 00bc 14000000 		.4byte	.LFE23-.LFB23
 4642 00c0 00000000 		.4byte	.LFB24
 4643 00c4 14000000 		.4byte	.LFE24-.LFB24
 4644 00c8 00000000 		.4byte	.LFB25
 4645 00cc 04000000 		.4byte	.LFE25-.LFB25
 4646 00d0 00000000 		.4byte	.LFB26
 4647 00d4 18000000 		.4byte	.LFE26-.LFB26
 4648 00d8 00000000 		.4byte	.LFB27
 4649 00dc 2C000000 		.4byte	.LFE27-.LFB27
 4650 00e0 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 139


 4651 00e4 14000000 		.4byte	.LFE28-.LFB28
 4652 00e8 00000000 		.4byte	.LFB6
 4653 00ec 24010000 		.4byte	.LFE6-.LFB6
 4654 00f0 00000000 		.4byte	.LFB7
 4655 00f4 44000000 		.4byte	.LFE7-.LFB7
 4656 00f8 00000000 		.4byte	.LFB29
 4657 00fc 48000000 		.4byte	.LFE29-.LFB29
 4658 0100 00000000 		.4byte	.LFB31
 4659 0104 50000000 		.4byte	.LFE31-.LFB31
 4660 0108 00000000 		.4byte	.LFB33
 4661 010c 10000000 		.4byte	.LFE33-.LFB33
 4662 0110 00000000 		.4byte	.LFB34
 4663 0114 10000000 		.4byte	.LFE34-.LFB34
 4664 0118 00000000 		.4byte	.LFB32
 4665 011c 18000000 		.4byte	.LFE32-.LFB32
 4666 0120 00000000 		.4byte	.LFB30
 4667 0124 1C000000 		.4byte	.LFE30-.LFB30
 4668 0128 00000000 		.4byte	.LFB35
 4669 012c 10000000 		.4byte	.LFE35-.LFB35
 4670 0130 00000000 		.4byte	.LFB36
 4671 0134 10000000 		.4byte	.LFE36-.LFB36
 4672 0138 00000000 		.4byte	.LFB37
 4673 013c 10000000 		.4byte	.LFE37-.LFB37
 4674 0140 00000000 		.4byte	.LFB38
 4675 0144 10000000 		.4byte	.LFE38-.LFB38
 4676 0148 00000000 		.4byte	.LFB39
 4677 014c 10000000 		.4byte	.LFE39-.LFB39
 4678 0150 00000000 		.4byte	.LFB43
 4679 0154 24000000 		.4byte	.LFE43-.LFB43
 4680 0158 00000000 		.4byte	.LFB40
 4681 015c 0C000000 		.4byte	.LFE40-.LFB40
 4682 0160 00000000 		.4byte	.LFB41
 4683 0164 10000000 		.4byte	.LFE41-.LFB41
 4684 0168 00000000 		.4byte	.LFB42
 4685 016c 0C000000 		.4byte	.LFE42-.LFB42
 4686 0170 00000000 		.4byte	.LFB44
 4687 0174 70000000 		.4byte	.LFE44-.LFB44
 4688 0178 00000000 		.4byte	0
 4689 017c 00000000 		.4byte	0
 4690              		.section	.debug_ranges,"",%progbits
 4691              	.Ldebug_ranges0:
 4692 0000 2C000000 		.4byte	.LBB8
 4693 0004 2E000000 		.4byte	.LBE8
 4694 0008 2E000000 		.4byte	.LBB11
 4695 000c 30000000 		.4byte	.LBE11
 4696 0010 00000000 		.4byte	0
 4697 0014 00000000 		.4byte	0
 4698 0018 08000000 		.4byte	.LBB20
 4699 001c 0A000000 		.4byte	.LBE20
 4700 0020 14000000 		.4byte	.LBB24
 4701 0024 16000000 		.4byte	.LBE24
 4702 0028 18000000 		.4byte	.LBB25
 4703 002c 1A000000 		.4byte	.LBE25
 4704 0030 00000000 		.4byte	0
 4705 0034 00000000 		.4byte	0
 4706 0038 22000000 		.4byte	.LBB26
 4707 003c 24000000 		.4byte	.LBE26
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 140


 4708 0040 26000000 		.4byte	.LBB33
 4709 0044 28000000 		.4byte	.LBE33
 4710 0048 2E000000 		.4byte	.LBB37
 4711 004c 32000000 		.4byte	.LBE37
 4712 0050 00000000 		.4byte	0
 4713 0054 00000000 		.4byte	0
 4714 0058 24000000 		.4byte	.LBB30
 4715 005c 26000000 		.4byte	.LBE30
 4716 0060 28000000 		.4byte	.LBB34
 4717 0064 2A000000 		.4byte	.LBE34
 4718 0068 00000000 		.4byte	0
 4719 006c 00000000 		.4byte	0
 4720 0070 00000000 		.4byte	.LFB0
 4721 0074 14000000 		.4byte	.LFE0
 4722 0078 00000000 		.4byte	.LFB1
 4723 007c 10000000 		.4byte	.LFE1
 4724 0080 00000000 		.4byte	.LFB2
 4725 0084 20000000 		.4byte	.LFE2
 4726 0088 00000000 		.4byte	.LFB3
 4727 008c 34000000 		.4byte	.LFE3
 4728 0090 00000000 		.4byte	.LFB4
 4729 0094 18000000 		.4byte	.LFE4
 4730 0098 00000000 		.4byte	.LFB5
 4731 009c 28000000 		.4byte	.LFE5
 4732 00a0 00000000 		.4byte	.LFB8
 4733 00a4 20000000 		.4byte	.LFE8
 4734 00a8 00000000 		.4byte	.LFB9
 4735 00ac 10000000 		.4byte	.LFE9
 4736 00b0 00000000 		.4byte	.LFB10
 4737 00b4 0C000000 		.4byte	.LFE10
 4738 00b8 00000000 		.4byte	.LFB11
 4739 00bc 14000000 		.4byte	.LFE11
 4740 00c0 00000000 		.4byte	.LFB12
 4741 00c4 10000000 		.4byte	.LFE12
 4742 00c8 00000000 		.4byte	.LFB13
 4743 00cc 0C000000 		.4byte	.LFE13
 4744 00d0 00000000 		.4byte	.LFB14
 4745 00d4 0E000000 		.4byte	.LFE14
 4746 00d8 00000000 		.4byte	.LFB15
 4747 00dc 0C000000 		.4byte	.LFE15
 4748 00e0 00000000 		.4byte	.LFB16
 4749 00e4 10000000 		.4byte	.LFE16
 4750 00e8 00000000 		.4byte	.LFB17
 4751 00ec 10000000 		.4byte	.LFE17
 4752 00f0 00000000 		.4byte	.LFB18
 4753 00f4 30000000 		.4byte	.LFE18
 4754 00f8 00000000 		.4byte	.LFB19
 4755 00fc 20000000 		.4byte	.LFE19
 4756 0100 00000000 		.4byte	.LFB20
 4757 0104 14000000 		.4byte	.LFE20
 4758 0108 00000000 		.4byte	.LFB21
 4759 010c 18000000 		.4byte	.LFE21
 4760 0110 00000000 		.4byte	.LFB22
 4761 0114 14000000 		.4byte	.LFE22
 4762 0118 00000000 		.4byte	.LFB23
 4763 011c 14000000 		.4byte	.LFE23
 4764 0120 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 141


 4765 0124 14000000 		.4byte	.LFE24
 4766 0128 00000000 		.4byte	.LFB25
 4767 012c 04000000 		.4byte	.LFE25
 4768 0130 00000000 		.4byte	.LFB26
 4769 0134 18000000 		.4byte	.LFE26
 4770 0138 00000000 		.4byte	.LFB27
 4771 013c 2C000000 		.4byte	.LFE27
 4772 0140 00000000 		.4byte	.LFB28
 4773 0144 14000000 		.4byte	.LFE28
 4774 0148 00000000 		.4byte	.LFB6
 4775 014c 24010000 		.4byte	.LFE6
 4776 0150 00000000 		.4byte	.LFB7
 4777 0154 44000000 		.4byte	.LFE7
 4778 0158 00000000 		.4byte	.LFB29
 4779 015c 48000000 		.4byte	.LFE29
 4780 0160 00000000 		.4byte	.LFB31
 4781 0164 50000000 		.4byte	.LFE31
 4782 0168 00000000 		.4byte	.LFB33
 4783 016c 10000000 		.4byte	.LFE33
 4784 0170 00000000 		.4byte	.LFB34
 4785 0174 10000000 		.4byte	.LFE34
 4786 0178 00000000 		.4byte	.LFB32
 4787 017c 18000000 		.4byte	.LFE32
 4788 0180 00000000 		.4byte	.LFB30
 4789 0184 1C000000 		.4byte	.LFE30
 4790 0188 00000000 		.4byte	.LFB35
 4791 018c 10000000 		.4byte	.LFE35
 4792 0190 00000000 		.4byte	.LFB36
 4793 0194 10000000 		.4byte	.LFE36
 4794 0198 00000000 		.4byte	.LFB37
 4795 019c 10000000 		.4byte	.LFE37
 4796 01a0 00000000 		.4byte	.LFB38
 4797 01a4 10000000 		.4byte	.LFE38
 4798 01a8 00000000 		.4byte	.LFB39
 4799 01ac 10000000 		.4byte	.LFE39
 4800 01b0 00000000 		.4byte	.LFB43
 4801 01b4 24000000 		.4byte	.LFE43
 4802 01b8 00000000 		.4byte	.LFB40
 4803 01bc 0C000000 		.4byte	.LFE40
 4804 01c0 00000000 		.4byte	.LFB41
 4805 01c4 10000000 		.4byte	.LFE41
 4806 01c8 00000000 		.4byte	.LFB42
 4807 01cc 0C000000 		.4byte	.LFE42
 4808 01d0 00000000 		.4byte	.LFB44
 4809 01d4 70000000 		.4byte	.LFE44
 4810 01d8 00000000 		.4byte	0
 4811 01dc 00000000 		.4byte	0
 4812              		.section	.debug_line,"",%progbits
 4813              	.Ldebug_line0:
 4814 0000 C6040000 		.section	.debug_str,"MS",%progbits,1
 4814      02004D00 
 4814      00000201 
 4814      FB0E0D00 
 4814      01010101 
 4815              	.LASF46:
 4816 0000 72616D56 		.ascii	"ramVectorTable\000"
 4816      6563746F 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 142


 4816      72546162 
 4816      6C6500
 4817              	.LASF68:
 4818 000f 62675472 		.ascii	"bgTrim4\000"
 4818      696D3400 
 4819              	.LASF10:
 4820 0017 75696E74 		.ascii	"uint16\000"
 4820      313600
 4821              	.LASF101:
 4822 001e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4822      4320342E 
 4822      392E3320 
 4822      32303135 
 4822      30333033 
 4823 0051 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4823      20726576 
 4823      6973696F 
 4823      6E203232 
 4823      31323230 
 4824 0084 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 4824      66756E63 
 4824      74696F6E 
 4824      2D736563 
 4824      74696F6E 
 4825              	.LASF39:
 4826 00ac 696E7453 		.ascii	"intState\000"
 4826      74617465 
 4826      00
 4827              	.LASF26:
 4828 00b5 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4828      73436C6B 
 4828      57726974 
 4828      65486663 
 4828      6C6B4469 
 4829              	.LASF99:
 4830 00ce 43795379 		.ascii	"CySysClkPumpConfig\000"
 4830      73436C6B 
 4830      50756D70 
 4830      436F6E66 
 4830      696700
 4831              	.LASF45:
 4832 00e1 6F6C6449 		.ascii	"oldIsr\000"
 4832      737200
 4833              	.LASF88:
 4834 00e8 72657456 		.ascii	"retVal\000"
 4834      616C00
 4835              	.LASF38:
 4836 00ef 43794469 		.ascii	"CyDisableInts\000"
 4836      7361626C 
 4836      65496E74 
 4836      7300
 4837              	.LASF71:
 4838 00fd 63757272 		.ascii	"currentImoTrim2Value\000"
 4838      656E7449 
 4838      6D6F5472 
 4838      696D3256 
 4838      616C7565 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 143


 4839              	.LASF7:
 4840 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 4840      206C6F6E 
 4840      6720756E 
 4840      7369676E 
 4840      65642069 
 4841              	.LASF97:
 4842 0129 43795379 		.ascii	"CySysTickInitVar\000"
 4842      73546963 
 4842      6B496E69 
 4842      74566172 
 4842      00
 4843              	.LASF40:
 4844 013a 4379456E 		.ascii	"CyEnableInts\000"
 4844      61626C65 
 4844      496E7473 
 4844      00
 4845              	.LASF61:
 4846 0147 4379536F 		.ascii	"CySoftwareReset\000"
 4846      66747761 
 4846      72655265 
 4846      73657400 
 4847              	.LASF78:
 4848 0157 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4848      73546963 
 4848      6B456E61 
 4848      626C6549 
 4848      6E746572 
 4849              	.LASF56:
 4850 0170 4379496E 		.ascii	"CyIntGetState\000"
 4850      74476574 
 4850      53746174 
 4850      6500
 4851              	.LASF6:
 4852 017e 6C6F6E67 		.ascii	"long long int\000"
 4852      206C6F6E 
 4852      6720696E 
 4852      7400
 4853              	.LASF0:
 4854 018c 7369676E 		.ascii	"signed char\000"
 4854      65642063 
 4854      68617200 
 4855              	.LASF67:
 4856 0198 66726571 		.ascii	"freq\000"
 4856      00
 4857              	.LASF75:
 4858 019d 43794465 		.ascii	"CyDelayFreq\000"
 4858      6C617946 
 4858      72657100 
 4859              	.LASF24:
 4860 01a9 696E7465 		.ascii	"interruptState\000"
 4860      72727570 
 4860      74537461 
 4860      746500
 4861              	.LASF83:
 4862 01b8 43795379 		.ascii	"CySysTickGetReload\000"
 4862      73546963 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 144


 4862      6B476574 
 4862      52656C6F 
 4862      616400
 4863              	.LASF4:
 4864 01cb 6C6F6E67 		.ascii	"long int\000"
 4864      20696E74 
 4864      00
 4865              	.LASF57:
 4866 01d4 4379496E 		.ascii	"CyIntDisable\000"
 4866      74446973 
 4866      61626C65 
 4866      00
 4867              	.LASF89:
 4868 01e1 43795379 		.ascii	"CySysTickGetCallback\000"
 4868      73546963 
 4868      6B476574 
 4868      43616C6C 
 4868      6261636B 
 4869              	.LASF9:
 4870 01f6 75696E74 		.ascii	"uint8\000"
 4870      3800
 4871              	.LASF94:
 4872 01fc 63796465 		.ascii	"cydelayFreqKhz\000"
 4872      6C617946 
 4872      7265714B 
 4872      687A00
 4873              	.LASF29:
 4874 020b 656E6162 		.ascii	"enable\000"
 4874      6C6500
 4875              	.LASF13:
 4876 0212 646F7562 		.ascii	"double\000"
 4876      6C6500
 4877              	.LASF52:
 4878 0219 73686966 		.ascii	"shift\000"
 4878      7400
 4879              	.LASF20:
 4880 021f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4880      734C7664 
 4880      436C6561 
 4880      72496E74 
 4880      65727275 
 4881              	.LASF11:
 4882 0236 75696E74 		.ascii	"uint32\000"
 4882      333200
 4883              	.LASF41:
 4884 023d 6D61736B 		.ascii	"mask\000"
 4884      00
 4885              	.LASF34:
 4886 0242 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4886      73436C6B 
 4886      47657453 
 4886      7973636C 
 4886      6B536F75 
 4887              	.LASF53:
 4888 025a 4379496E 		.ascii	"CyIntGetPriority\000"
 4888      74476574 
 4888      5072696F 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 145


 4888      72697479 
 4888      00
 4889              	.LASF96:
 4890 026b 63796465 		.ascii	"cydelay32kMs\000"
 4890      6C617933 
 4890      326B4D73 
 4890      00
 4891              	.LASF76:
 4892 0278 43795379 		.ascii	"CySysTickInit\000"
 4892      73546963 
 4892      6B496E69 
 4892      7400
 4893              	.LASF42:
 4894 0286 76616C75 		.ascii	"value\000"
 4894      6500
 4895              	.LASF90:
 4896 028c 43794765 		.ascii	"CyGetUniqueId\000"
 4896      74556E69 
 4896      71756549 
 4896      6400
 4897              	.LASF85:
 4898 029a 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4898      73546963 
 4898      6B476574 
 4898      436F756E 
 4898      74466C61 
 4899              	.LASF8:
 4900 02b0 756E7369 		.ascii	"unsigned int\000"
 4900      676E6564 
 4900      20696E74 
 4900      00
 4901              	.LASF21:
 4902 02bd 43795379 		.ascii	"CySysTickClear\000"
 4902      73546963 
 4902      6B436C65 
 4902      617200
 4903              	.LASF5:
 4904 02cc 6C6F6E67 		.ascii	"long unsigned int\000"
 4904      20756E73 
 4904      69676E65 
 4904      6420696E 
 4904      7400
 4905              	.LASF82:
 4906 02de 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4906      734C7664 
 4906      47657449 
 4906      6E746572 
 4906      72757074 
 4907              	.LASF23:
 4908 02f9 43795379 		.ascii	"CySysClkImoStop\000"
 4908      73436C6B 
 4908      496D6F53 
 4908      746F7000 
 4909              	.LASF106:
 4910 0309 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4910      74657243 
 4910      72697469 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 146


 4910      63616C53 
 4910      65637469 
 4911              	.LASF58:
 4912 0320 4379496E 		.ascii	"CyIntSetPending\000"
 4912      74536574 
 4912      50656E64 
 4912      696E6700 
 4913              	.LASF35:
 4914 0330 43795379 		.ascii	"CySysGetResetReason\000"
 4914      73476574 
 4914      52657365 
 4914      74526561 
 4914      736F6E00 
 4915              	.LASF3:
 4916 0344 73686F72 		.ascii	"short unsigned int\000"
 4916      7420756E 
 4916      7369676E 
 4916      65642069 
 4916      6E7400
 4917              	.LASF48:
 4918 0357 4379496E 		.ascii	"CyIntSetVector\000"
 4918      74536574 
 4918      56656374 
 4918      6F7200
 4919              	.LASF43:
 4920 0366 6E756D62 		.ascii	"number\000"
 4920      657200
 4921              	.LASF51:
 4922 036d 7072696F 		.ascii	"priority\000"
 4922      72697479 
 4922      00
 4923              	.LASF66:
 4924 0376 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4924      73436C6B 
 4924      57726974 
 4924      65496D6F 
 4924      46726571 
 4925              	.LASF105:
 4926 038b 4379496E 		.ascii	"CyIntSetSysVector\000"
 4926      74536574 
 4926      53797356 
 4926      6563746F 
 4926      7200
 4927              	.LASF27:
 4928 039d 43795379 		.ascii	"CySysEnablePumpClock\000"
 4928      73456E61 
 4928      626C6550 
 4928      756D7043 
 4928      6C6F636B 
 4929              	.LASF16:
 4930 03b2 72656733 		.ascii	"reg32\000"
 4930      3200
 4931              	.LASF80:
 4932 03b8 43795379 		.ascii	"CySysTickStart\000"
 4932      73546963 
 4932      6B537461 
 4932      727400
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 147


 4933              	.LASF37:
 4934 03c7 72657475 		.ascii	"returnStatus\000"
 4934      726E5374 
 4934      61747573 
 4934      00
 4935              	.LASF18:
 4936 03d4 73697A65 		.ascii	"sizetype\000"
 4936      74797065 
 4936      00
 4937              	.LASF59:
 4938 03dd 4379496E 		.ascii	"CyIntClearPending\000"
 4938      74436C65 
 4938      61725065 
 4938      6E64696E 
 4938      6700
 4939              	.LASF44:
 4940 03ef 61646472 		.ascii	"address\000"
 4940      65737300 
 4941              	.LASF69:
 4942 03f7 62675472 		.ascii	"bgTrim5\000"
 4942      696D3500 
 4943              	.LASF30:
 4944 03ff 73797363 		.ascii	"sysclkSource\000"
 4944      6C6B536F 
 4944      75726365 
 4944      00
 4945              	.LASF87:
 4946 040c 66756E63 		.ascii	"function\000"
 4946      74696F6E 
 4946      00
 4947              	.LASF98:
 4948 0415 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4948      6F467265 
 4948      714D687A 
 4948      32526567 
 4948      00
 4949              	.LASF84:
 4950 0426 43795379 		.ascii	"CySysTickGetValue\000"
 4950      73546963 
 4950      6B476574 
 4950      56616C75 
 4950      6500
 4951              	.LASF93:
 4952 0438 63796465 		.ascii	"cydelayFreqHz\000"
 4952      6C617946 
 4952      72657148 
 4952      7A00
 4953              	.LASF50:
 4954 0446 4379496E 		.ascii	"CyIntSetPriority\000"
 4954      74536574 
 4954      5072696F 
 4954      72697479 
 4954      00
 4955              	.LASF12:
 4956 0457 666C6F61 		.ascii	"float\000"
 4956      7400
 4957              	.LASF100:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 148


 4958 045d 43794578 		.ascii	"CyExitCriticalSection\000"
 4958      69744372 
 4958      69746963 
 4958      616C5365 
 4958      6374696F 
 4959              	.LASF73:
 4960 0473 43795379 		.ascii	"CySysLvdEnable\000"
 4960      734C7664 
 4960      456E6162 
 4960      6C6500
 4961              	.LASF19:
 4962 0482 63795379 		.ascii	"cySysTickCallback\000"
 4962      73546963 
 4962      6B43616C 
 4962      6C626163 
 4962      6B00
 4963              	.LASF49:
 4964 0494 4379496E 		.ascii	"CyIntGetVector\000"
 4964      74476574 
 4964      56656374 
 4964      6F7200
 4965              	.LASF63:
 4966 04a3 6D696C6C 		.ascii	"milliseconds\000"
 4966      69736563 
 4966      6F6E6473 
 4966      00
 4967              	.LASF107:
 4968 04b0 43794465 		.ascii	"CyDelayCycles\000"
 4968      6C617943 
 4968      79636C65 
 4968      7300
 4969              	.LASF15:
 4970 04be 72656738 		.ascii	"reg8\000"
 4970      00
 4971              	.LASF74:
 4972 04c3 74687265 		.ascii	"threshold\000"
 4972      73686F6C 
 4972      6400
 4973              	.LASF60:
 4974 04cd 43794861 		.ascii	"CyHalt\000"
 4974      6C7400
 4975              	.LASF1:
 4976 04d4 756E7369 		.ascii	"unsigned char\000"
 4976      676E6564 
 4976      20636861 
 4976      7200
 4977              	.LASF36:
 4978 04e2 72656173 		.ascii	"reason\000"
 4978      6F6E00
 4979              	.LASF2:
 4980 04e9 73686F72 		.ascii	"short int\000"
 4980      7420696E 
 4980      7400
 4981              	.LASF55:
 4982 04f3 4379496E 		.ascii	"CyIntEnable\000"
 4982      74456E61 
 4982      626C6500 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 149


 4983              	.LASF47:
 4984 04ff 4379496E 		.ascii	"CyIntGetSysVector\000"
 4984      74476574 
 4984      53797356 
 4984      6563746F 
 4984      7200
 4985              	.LASF28:
 4986 0511 636C6B53 		.ascii	"clkSelect\000"
 4986      656C6563 
 4986      7400
 4987              	.LASF64:
 4988 051b 43794465 		.ascii	"CyDelayUs\000"
 4988      6C617955 
 4988      7300
 4989              	.LASF104:
 4990 0525 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4990      73546963 
 4990      6B536572 
 4990      76696365 
 4990      43616C6C 
 4991              	.LASF14:
 4992 053f 63686172 		.ascii	"char\000"
 4992      00
 4993              	.LASF17:
 4994 0544 63796973 		.ascii	"cyisraddress\000"
 4994      72616464 
 4994      72657373 
 4994      00
 4995              	.LASF79:
 4996 0551 43795379 		.ascii	"CySysTickEnable\000"
 4996      73546963 
 4996      6B456E61 
 4996      626C6500 
 4997              	.LASF103:
 4998 0561 433A5C55 		.ascii	"C:\\Users\\Tech Consulting\\Desktop\\PSOC4 projects"
 4998      73657273 
 4998      5C546563 
 4998      6820436F 
 4998      6E73756C 
 4999 0590 5C537465 		.ascii	"\\Stepper Projects GearBest\\DualStepperController-"
 4999      70706572 
 4999      2050726F 
 4999      6A656374 
 4999      73204765 
 5000 05c1 50536F43 		.ascii	"PSoC4200-GearBest.cydsn\000"
 5000      34323030 
 5000      2D476561 
 5000      72426573 
 5000      742E6379 
 5001              	.LASF31:
 5002 05d9 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5002      73436C6B 
 5002      57726974 
 5002      65537973 
 5002      636C6B44 
 5003              	.LASF86:
 5004 05f0 43795379 		.ascii	"CySysTickSetCallback\000"
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 150


 5004      73546963 
 5004      6B536574 
 5004      43616C6C 
 5004      6261636B 
 5005              	.LASF92:
 5006 0605 43795379 		.ascii	"CySysTickCallbacks\000"
 5006      73546963 
 5006      6B43616C 
 5006      6C626163 
 5006      6B7300
 5007              	.LASF72:
 5008 0618 696D6F54 		.ascii	"imoTrim1Value\000"
 5008      72696D31 
 5008      56616C75 
 5008      6500
 5009              	.LASF91:
 5010 0626 756E6971 		.ascii	"uniqueId\000"
 5010      75654964 
 5010      00
 5011              	.LASF62:
 5012 062f 43794465 		.ascii	"CyDelay\000"
 5012      6C617900 
 5013              	.LASF81:
 5014 0637 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5014      73546963 
 5014      6B446973 
 5014      61626C65 
 5014      496E7465 
 5015              	.LASF33:
 5016 0651 43795379 		.ascii	"CySysLvdDisable\000"
 5016      734C7664 
 5016      44697361 
 5016      626C6500 
 5017              	.LASF95:
 5018 0661 63796465 		.ascii	"cydelayFreqMhz\000"
 5018      6C617946 
 5018      7265714D 
 5018      687A00
 5019              	.LASF77:
 5020 0670 43795379 		.ascii	"CySysTickStop\000"
 5020      73546963 
 5020      6B53746F 
 5020      7000
 5021              	.LASF32:
 5022 067e 64697669 		.ascii	"divider\000"
 5022      64657200 
 5023              	.LASF22:
 5024 0686 43795379 		.ascii	"CySysClkImoStart\000"
 5024      73436C6B 
 5024      496D6F53 
 5024      74617274 
 5024      00
 5025              	.LASF70:
 5026 0697 6E657749 		.ascii	"newImoTrim2Value\000"
 5026      6D6F5472 
 5026      696D3256 
 5026      616C7565 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccXoZR61.s 			page 151


 5026      00
 5027              	.LASF102:
 5028 06a8 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5028      72617465 
 5028      645F536F 
 5028      75726365 
 5028      5C50536F 
 5029              	.LASF65:
 5030 06c7 6D696372 		.ascii	"microseconds\000"
 5030      6F736563 
 5030      6F6E6473 
 5030      00
 5031              	.LASF25:
 5032 06d4 746D7052 		.ascii	"tmpReg\000"
 5032      656700
 5033              	.LASF54:
 5034 06db 43795379 		.ascii	"CySysTickSetReload\000"
 5034      73546963 
 5034      6B536574 
 5034      52656C6F 
 5034      616400
 5035              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
