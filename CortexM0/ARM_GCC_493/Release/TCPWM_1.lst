ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TCPWM_1_Init,"ax",%progbits
  18              		.align	1
  19              		.global	TCPWM_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	TCPWM_1_Init, %function
  23              	TCPWM_1_Init:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\TCPWM_1.c"
   1:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/TCPWM_1.c **** * File Name: TCPWM_1.c
   3:Generated_Source\PSoC4/TCPWM_1.c **** * Version 2.10
   4:Generated_Source\PSoC4/TCPWM_1.c **** *
   5:Generated_Source\PSoC4/TCPWM_1.c **** * Description:
   6:Generated_Source\PSoC4/TCPWM_1.c **** *  This file provides the source code to the API for the TCPWM_1
   7:Generated_Source\PSoC4/TCPWM_1.c **** *  component
   8:Generated_Source\PSoC4/TCPWM_1.c **** *
   9:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
  10:Generated_Source\PSoC4/TCPWM_1.c **** *  None
  11:Generated_Source\PSoC4/TCPWM_1.c **** *
  12:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
  13:Generated_Source\PSoC4/TCPWM_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/TCPWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/TCPWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/TCPWM_1.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/TCPWM_1.c **** 
  19:Generated_Source\PSoC4/TCPWM_1.c **** #include "TCPWM_1.h"
  20:Generated_Source\PSoC4/TCPWM_1.c **** 
  21:Generated_Source\PSoC4/TCPWM_1.c **** uint8 TCPWM_1_initVar = 0u;
  22:Generated_Source\PSoC4/TCPWM_1.c **** 
  23:Generated_Source\PSoC4/TCPWM_1.c **** 
  24:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Init
  26:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
  27:Generated_Source\PSoC4/TCPWM_1.c **** *
  28:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
  29:Generated_Source\PSoC4/TCPWM_1.c **** *  Initialize/Restore default TCPWM_1 configuration.
  30:Generated_Source\PSoC4/TCPWM_1.c **** *
  31:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
  32:Generated_Source\PSoC4/TCPWM_1.c **** *  None
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 2


  33:Generated_Source\PSoC4/TCPWM_1.c **** *
  34:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
  35:Generated_Source\PSoC4/TCPWM_1.c **** *  None
  36:Generated_Source\PSoC4/TCPWM_1.c **** *
  37:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Init(void)
  39:Generated_Source\PSoC4/TCPWM_1.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:Generated_Source\PSoC4/TCPWM_1.c **** 
  41:Generated_Source\PSoC4/TCPWM_1.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
  43:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/TCPWM_1.c ****         
  45:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/TCPWM_1.c **** 
  48:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/TCPWM_1.c ****         
  51:Generated_Source\PSoC4/TCPWM_1.c ****          /* Set other values */
  52:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetCounterMode(TCPWM_1_COUNT_DOWN);
  53:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCounter(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
  56:Generated_Source\PSoC4/TCPWM_1.c **** 
  57:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
  58:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/TCPWM_1.c ****         
  60:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/TCPWM_1.c ****     
  63:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/TCPWM_1.c ****         
  66:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/TCPWM_1.c **** 
  69:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompare(TCPWM_1_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/TCPWM_1.c **** 
  72:Generated_Source\PSoC4/TCPWM_1.c ****             #if (1u == TCPWM_1_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCompareBuf(TCPWM_1_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (1u == TCPWM_1_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/TCPWM_1.c **** 
  78:Generated_Source\PSoC4/TCPWM_1.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(1u);
  81:Generated_Source\PSoC4/TCPWM_1.c ****         #elif(TCPWM_1__COUNT_DOWN == TCPWM_1_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/TCPWM_1.c ****         #else
  84:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(0u);
  85:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000) 
  86:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
  87:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 3


  88:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
  89:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 8022     		mov	r2, #128
  30 0002 0D4B     		ldr	r3, .L2
  31 0004 D204     		lsl	r2, r2, #19
  32 0006 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/TCPWM_1.c **** 
  91:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
  92:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/TCPWM_1.c ****         #else
  95:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_ALIGN | TCPWM_1_CTRL_PWM_KILL_EVENT;
  33              		.loc 1 95 0
  34 0008 1A68     		ldr	r2, [r3]
  35              	.LBB10:
  36              	.LBB11:
  96:Generated_Source\PSoC4/TCPWM_1.c ****             
  97:Generated_Source\PSoC4/TCPWM_1.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(1u);
 100:Generated_Source\PSoC4/TCPWM_1.c ****             #elif (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 101:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(TCPWM_1_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/TCPWM_1.c ****             #else 
 103:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(0u);
 104:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_400
 105:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 106:Generated_Source\PSoC4/TCPWM_1.c **** 
 107:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE)
 108:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE) */
 110:Generated_Source\PSoC4/TCPWM_1.c **** 
 111:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM == TCPWM_1_PWM_MODE)
 112:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM == TCPWM_1_PWM_MODE) */
 114:Generated_Source\PSoC4/TCPWM_1.c **** 
 115:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/TCPWM_1.c ****     
 118:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/TCPWM_1.c **** 
 121:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
 123:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/TCPWM_1.c ****                     (TCPWM_1_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/TCPWM_1.c ****         #else
 128:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__LEFT == TCPWM_1_PWM_ALIGN)
 129:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_LEFT == TCPWM_1_PWM_ALIGN) */
 131:Generated_Source\PSoC4/TCPWM_1.c **** 
 132:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 133:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_RIGHT == TCPWM_1_PWM_ALIGN) */
 135:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 4


 136:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__CENTER == TCPWM_1_PWM_ALIGN)
 137:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_CENTER == TCPWM_1_PWM_ALIGN) */
 139:Generated_Source\PSoC4/TCPWM_1.c **** 
 140:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN)
 141:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN) */
 143:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 144:Generated_Source\PSoC4/TCPWM_1.c **** 
 145:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCompare(TCPWM_1_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/TCPWM_1.c **** 
 149:Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompareBuf(TCPWM_1_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/TCPWM_1.c **** 
 154:Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WritePeriodBuf(TCPWM_1_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 159:Generated_Source\PSoC4/TCPWM_1.c ****     
 160:Generated_Source\PSoC4/TCPWM_1.c **** }
 161:Generated_Source\PSoC4/TCPWM_1.c **** 
 162:Generated_Source\PSoC4/TCPWM_1.c **** 
 163:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Enable
 165:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 166:Generated_Source\PSoC4/TCPWM_1.c **** *
 167:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 168:Generated_Source\PSoC4/TCPWM_1.c **** *  Enables the TCPWM_1.
 169:Generated_Source\PSoC4/TCPWM_1.c **** *
 170:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 171:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 172:Generated_Source\PSoC4/TCPWM_1.c **** *
 173:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 174:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 175:Generated_Source\PSoC4/TCPWM_1.c **** *
 176:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Enable(void)
 178:Generated_Source\PSoC4/TCPWM_1.c **** {
 179:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/TCPWM_1.c **** 
 181:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG |= TCPWM_1_MASK;
 183:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/TCPWM_1.c **** 
 185:Generated_Source\PSoC4/TCPWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
 187:Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 189:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 191:Generated_Source\PSoC4/TCPWM_1.c **** 
 192:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 5


 193:Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 195:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
 197:Generated_Source\PSoC4/TCPWM_1.c ****     
 198:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
 199:Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u != TCPWM_1_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_RELOAD);
 201:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u != TCPWM_1_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
 203:Generated_Source\PSoC4/TCPWM_1.c **** }
 204:Generated_Source\PSoC4/TCPWM_1.c **** 
 205:Generated_Source\PSoC4/TCPWM_1.c **** 
 206:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Start
 208:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 209:Generated_Source\PSoC4/TCPWM_1.c **** *
 210:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 211:Generated_Source\PSoC4/TCPWM_1.c **** *  Initializes the TCPWM_1 with default customizer
 212:Generated_Source\PSoC4/TCPWM_1.c **** *  values when called the first time and enables the TCPWM_1.
 213:Generated_Source\PSoC4/TCPWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/TCPWM_1.c **** *  just enabled.
 215:Generated_Source\PSoC4/TCPWM_1.c **** *
 216:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 217:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 218:Generated_Source\PSoC4/TCPWM_1.c **** *
 219:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 220:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 221:Generated_Source\PSoC4/TCPWM_1.c **** *
 222:Generated_Source\PSoC4/TCPWM_1.c **** * Global variables:
 223:Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/TCPWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/TCPWM_1.c **** *  to 1 the first time TCPWM_1_Start() is called. This allows
 226:Generated_Source\PSoC4/TCPWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/TCPWM_1.c **** *  calls to the TCPWM_1_Start() routine.
 228:Generated_Source\PSoC4/TCPWM_1.c **** *
 229:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Start(void)
 231:Generated_Source\PSoC4/TCPWM_1.c **** {
 232:Generated_Source\PSoC4/TCPWM_1.c ****     if (0u == TCPWM_1_initVar)
 233:Generated_Source\PSoC4/TCPWM_1.c ****     {
 234:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_Init();
 235:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_initVar = 1u;
 236:Generated_Source\PSoC4/TCPWM_1.c ****     }
 237:Generated_Source\PSoC4/TCPWM_1.c **** 
 238:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_Enable();
 239:Generated_Source\PSoC4/TCPWM_1.c **** }
 240:Generated_Source\PSoC4/TCPWM_1.c **** 
 241:Generated_Source\PSoC4/TCPWM_1.c **** 
 242:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Stop
 244:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 245:Generated_Source\PSoC4/TCPWM_1.c **** *
 246:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 247:Generated_Source\PSoC4/TCPWM_1.c **** *  Disables the TCPWM_1.
 248:Generated_Source\PSoC4/TCPWM_1.c **** *
 249:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 6


 250:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 251:Generated_Source\PSoC4/TCPWM_1.c **** *
 252:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 253:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 254:Generated_Source\PSoC4/TCPWM_1.c **** *
 255:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Stop(void)
 257:Generated_Source\PSoC4/TCPWM_1.c **** {
 258:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/TCPWM_1.c **** 
 260:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 261:Generated_Source\PSoC4/TCPWM_1.c **** 
 262:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG &= (uint32)~TCPWM_1_MASK;
 263:Generated_Source\PSoC4/TCPWM_1.c **** 
 264:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 265:Generated_Source\PSoC4/TCPWM_1.c **** }
 266:Generated_Source\PSoC4/TCPWM_1.c **** 
 267:Generated_Source\PSoC4/TCPWM_1.c **** 
 268:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetMode
 270:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 271:Generated_Source\PSoC4/TCPWM_1.c **** *
 272:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 273:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the operation mode of the TCPWM_1. This function is used when
 274:Generated_Source\PSoC4/TCPWM_1.c **** *  configured as a generic TCPWM_1 and the actual mode of operation is
 275:Generated_Source\PSoC4/TCPWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/TCPWM_1.c **** *
 277:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 278:Generated_Source\PSoC4/TCPWM_1.c **** *  mode: Mode for the TCPWM_1 to operate in
 279:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 280:Generated_Source\PSoC4/TCPWM_1.c **** *   - TCPWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/TCPWM_1.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/TCPWM_1.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM - PWM
 286:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/TCPWM_1.c **** *
 289:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 290:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 291:Generated_Source\PSoC4/TCPWM_1.c **** *
 292:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/TCPWM_1.c **** {
 295:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/TCPWM_1.c **** 
 297:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 298:Generated_Source\PSoC4/TCPWM_1.c **** 
 299:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_MODE_MASK;
 300:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mode;
 301:Generated_Source\PSoC4/TCPWM_1.c **** 
 302:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC4/TCPWM_1.c **** }
 304:Generated_Source\PSoC4/TCPWM_1.c **** 
 305:Generated_Source\PSoC4/TCPWM_1.c **** 
 306:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 7


 307:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetQDMode
 308:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 309:Generated_Source\PSoC4/TCPWM_1.c **** *
 310:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 311:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/TCPWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/TCPWM_1.c **** *
 314:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 315:Generated_Source\PSoC4/TCPWM_1.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 317:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/TCPWM_1.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/TCPWM_1.c **** *
 322:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 323:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 324:Generated_Source\PSoC4/TCPWM_1.c **** *
 325:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/TCPWM_1.c **** {
 328:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/TCPWM_1.c **** 
 330:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 331:Generated_Source\PSoC4/TCPWM_1.c **** 
 332:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_QUAD_MODE_MASK;
 333:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= qdMode;
 334:Generated_Source\PSoC4/TCPWM_1.c **** 
 335:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 336:Generated_Source\PSoC4/TCPWM_1.c **** }
 337:Generated_Source\PSoC4/TCPWM_1.c **** 
 338:Generated_Source\PSoC4/TCPWM_1.c **** 
 339:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPrescaler
 341:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 342:Generated_Source\PSoC4/TCPWM_1.c **** *
 343:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 344:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/TCPWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/TCPWM_1.c **** *
 347:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 348:Generated_Source\PSoC4/TCPWM_1.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 350:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/TCPWM_1.c **** *
 359:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 360:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 361:Generated_Source\PSoC4/TCPWM_1.c **** *
 362:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPrescaler(uint32 prescaler)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 8


 364:Generated_Source\PSoC4/TCPWM_1.c **** {
 365:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/TCPWM_1.c **** 
 367:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 368:Generated_Source\PSoC4/TCPWM_1.c **** 
 369:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 370:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= prescaler;
 371:Generated_Source\PSoC4/TCPWM_1.c **** 
 372:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 373:Generated_Source\PSoC4/TCPWM_1.c **** }
 374:Generated_Source\PSoC4/TCPWM_1.c **** 
 375:Generated_Source\PSoC4/TCPWM_1.c **** 
 376:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetOneShot
 378:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 379:Generated_Source\PSoC4/TCPWM_1.c **** *
 380:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 381:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the TCPWM_1 runs
 382:Generated_Source\PSoC4/TCPWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1 operates in the continuous mode.
 384:Generated_Source\PSoC4/TCPWM_1.c **** *
 385:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 386:Generated_Source\PSoC4/TCPWM_1.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 388:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/TCPWM_1.c **** *
 391:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 392:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 393:Generated_Source\PSoC4/TCPWM_1.c **** *
 394:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/TCPWM_1.c **** {
 397:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/TCPWM_1.c **** 
 399:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 400:Generated_Source\PSoC4/TCPWM_1.c **** 
 401:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_ONESHOT_MASK;
 402:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1_1BIT_MASK) <<
 403:Generated_Source\PSoC4/TCPWM_1.c ****                                                                TCPWM_1_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/TCPWM_1.c **** 
 405:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 406:Generated_Source\PSoC4/TCPWM_1.c **** }
 407:Generated_Source\PSoC4/TCPWM_1.c **** 
 408:Generated_Source\PSoC4/TCPWM_1.c **** 
 409:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMMode
 411:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 412:Generated_Source\PSoC4/TCPWM_1.c **** *
 413:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 414:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/TCPWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/TCPWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/TCPWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/TCPWM_1.c **** *  the mode.
 419:Generated_Source\PSoC4/TCPWM_1.c **** *
 420:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 9


 421:Generated_Source\PSoC4/TCPWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/TCPWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 424:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/TCPWM_1.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/TCPWM_1.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/TCPWM_1.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/TCPWM_1.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/TCPWM_1.c **** *
 445:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 446:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 447:Generated_Source\PSoC4/TCPWM_1.c **** *
 448:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/TCPWM_1.c **** {
 451:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL2_REG = (modeMask & TCPWM_1_6BIT_MASK);
 452:Generated_Source\PSoC4/TCPWM_1.c **** }
 453:Generated_Source\PSoC4/TCPWM_1.c **** 
 454:Generated_Source\PSoC4/TCPWM_1.c **** 
 455:Generated_Source\PSoC4/TCPWM_1.c **** 
 456:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMSyncKill
 458:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 459:Generated_Source\PSoC4/TCPWM_1.c **** *
 460:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 461:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/TCPWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/TCPWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/TCPWM_1.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/TCPWM_1.c **** *
 466:Generated_Source\PSoC4/TCPWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/TCPWM_1.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/TCPWM_1.c **** *
 469:Generated_Source\PSoC4/TCPWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/TCPWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/TCPWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/TCPWM_1.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/TCPWM_1.c **** 
 474:Generated_Source\PSoC4/TCPWM_1.c **** *
 475:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 476:Generated_Source\PSoC4/TCPWM_1.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 10


 478:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/TCPWM_1.c **** *
 481:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 482:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 483:Generated_Source\PSoC4/TCPWM_1.c **** *
 484:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/TCPWM_1.c **** {
 487:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/TCPWM_1.c **** 
 489:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 490:Generated_Source\PSoC4/TCPWM_1.c **** 
 491:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_SYNC_KILL_MASK;
 492:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1_1BIT_MASK)  <<
 493:Generated_Source\PSoC4/TCPWM_1.c ****                                                TCPWM_1_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/TCPWM_1.c **** 
 495:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 496:Generated_Source\PSoC4/TCPWM_1.c **** }
 497:Generated_Source\PSoC4/TCPWM_1.c **** 
 498:Generated_Source\PSoC4/TCPWM_1.c **** 
 499:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMStopOnKill
 501:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 502:Generated_Source\PSoC4/TCPWM_1.c **** *
 503:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 504:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/TCPWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/TCPWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/TCPWM_1.c **** *
 508:Generated_Source\PSoC4/TCPWM_1.c **** *
 509:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 510:Generated_Source\PSoC4/TCPWM_1.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 512:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/TCPWM_1.c **** *
 515:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 516:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 517:Generated_Source\PSoC4/TCPWM_1.c **** *
 518:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/TCPWM_1.c **** {
 521:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/TCPWM_1.c **** 
 523:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 524:Generated_Source\PSoC4/TCPWM_1.c **** 
 525:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_STOP_KILL_MASK;
 526:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1_1BIT_MASK)  <<
 527:Generated_Source\PSoC4/TCPWM_1.c ****                                                          TCPWM_1_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/TCPWM_1.c **** 
 529:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 530:Generated_Source\PSoC4/TCPWM_1.c **** }
 531:Generated_Source\PSoC4/TCPWM_1.c **** 
 532:Generated_Source\PSoC4/TCPWM_1.c **** 
 533:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMDeadTime
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 11


 535:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 536:Generated_Source\PSoC4/TCPWM_1.c **** *
 537:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 538:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/TCPWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/TCPWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/TCPWM_1.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/TCPWM_1.c **** 
 543:Generated_Source\PSoC4/TCPWM_1.c **** *
 544:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 545:Generated_Source\PSoC4/TCPWM_1.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/TCPWM_1.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/TCPWM_1.c **** *
 548:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 549:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 550:Generated_Source\PSoC4/TCPWM_1.c **** *
 551:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/TCPWM_1.c **** {
 554:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/TCPWM_1.c **** 
 556:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 557:Generated_Source\PSoC4/TCPWM_1.c **** 
 558:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 559:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((deadTime & TCPWM_1_8BIT_MASK) <<
 560:Generated_Source\PSoC4/TCPWM_1.c ****                                                           TCPWM_1_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/TCPWM_1.c **** 
 562:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 563:Generated_Source\PSoC4/TCPWM_1.c **** }
 564:Generated_Source\PSoC4/TCPWM_1.c **** 
 565:Generated_Source\PSoC4/TCPWM_1.c **** 
 566:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMInvert
 568:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 569:Generated_Source\PSoC4/TCPWM_1.c **** *
 570:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 571:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/TCPWM_1.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/TCPWM_1.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/TCPWM_1.c **** *
 575:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 576:Generated_Source\PSoC4/TCPWM_1.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 578:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/TCPWM_1.c **** *
 581:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 582:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 583:Generated_Source\PSoC4/TCPWM_1.c **** *
 584:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/TCPWM_1.c **** {
 587:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/TCPWM_1.c **** 
 589:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 590:Generated_Source\PSoC4/TCPWM_1.c **** 
 591:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_INV_OUT_MASK;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 12


 592:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mask;
 593:Generated_Source\PSoC4/TCPWM_1.c **** 
 594:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 595:Generated_Source\PSoC4/TCPWM_1.c **** }
 596:Generated_Source\PSoC4/TCPWM_1.c **** 
 597:Generated_Source\PSoC4/TCPWM_1.c **** 
 598:Generated_Source\PSoC4/TCPWM_1.c **** 
 599:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCounter
 601:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 602:Generated_Source\PSoC4/TCPWM_1.c **** *
 603:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 604:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/TCPWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/TCPWM_1.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/TCPWM_1.c **** *
 608:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 609:Generated_Source\PSoC4/TCPWM_1.c **** *  count: value to write
 610:Generated_Source\PSoC4/TCPWM_1.c **** *
 611:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 612:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 613:Generated_Source\PSoC4/TCPWM_1.c **** *
 614:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/TCPWM_1.c **** {
 617:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COUNTER_REG = (count & TCPWM_1_16BIT_MASK);
  37              		.loc 1 617 0
  38 000a 0C49     		ldr	r1, .L2+4
  39              	.LBE11:
  40              	.LBE10:
  95:Generated_Source\PSoC4/TCPWM_1.c ****             
  41              		.loc 1 95 0
  42 000c 1A60     		str	r2, [r3]
  43              	.LVL0:
  44              	.LBB13:
  45              	.LBB12:
  46              		.loc 1 617 0
  47 000e 0022     		mov	r2, #0
  48 0010 0A60     		str	r2, [r1]
  49              	.LBE12:
  50              	.LBE13:
 112:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM == TCPWM_1_PWM_MODE) */
  51              		.loc 1 112 0
  52 0012 1968     		ldr	r1, [r3]
 160:Generated_Source\PSoC4/TCPWM_1.c **** 
  53              		.loc 1 160 0
  54              		@ sp needed
 112:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM == TCPWM_1_PWM_MODE) */
  55              		.loc 1 112 0
  56 0014 1960     		str	r1, [r3]
 116:Generated_Source\PSoC4/TCPWM_1.c ****     
  57              		.loc 1 116 0
  58 0016 FF21     		mov	r1, #255
  59 0018 094B     		ldr	r3, .L2+8
  60 001a 8900     		lsl	r1, r1, #2
  61 001c 1960     		str	r1, [r3]
  62              	.LVL1:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 13


  63              	.LBB14:
  64              	.LBB15:
 618:Generated_Source\PSoC4/TCPWM_1.c **** }
 619:Generated_Source\PSoC4/TCPWM_1.c **** 
 620:Generated_Source\PSoC4/TCPWM_1.c **** 
 621:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCounter
 623:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/TCPWM_1.c **** *
 625:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 626:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/TCPWM_1.c **** *
 628:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 629:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 630:Generated_Source\PSoC4/TCPWM_1.c **** *
 631:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 632:Generated_Source\PSoC4/TCPWM_1.c **** *  Current counter value
 633:Generated_Source\PSoC4/TCPWM_1.c **** *
 634:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCounter(void)
 636:Generated_Source\PSoC4/TCPWM_1.c **** {
 637:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COUNTER_REG & TCPWM_1_16BIT_MASK);
 638:Generated_Source\PSoC4/TCPWM_1.c **** }
 639:Generated_Source\PSoC4/TCPWM_1.c **** 
 640:Generated_Source\PSoC4/TCPWM_1.c **** 
 641:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCounterMode
 643:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 644:Generated_Source\PSoC4/TCPWM_1.c **** *
 645:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 646:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/TCPWM_1.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/TCPWM_1.c **** *
 649:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 650:Generated_Source\PSoC4/TCPWM_1.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 652:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/TCPWM_1.c **** *                                         and period
 659:Generated_Source\PSoC4/TCPWM_1.c **** *
 660:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 661:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 662:Generated_Source\PSoC4/TCPWM_1.c **** *
 663:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/TCPWM_1.c **** {
 666:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/TCPWM_1.c **** 
 668:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 669:Generated_Source\PSoC4/TCPWM_1.c **** 
 670:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_UPDOWN_MASK;
 671:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= counterMode;
 672:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 14


 673:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 674:Generated_Source\PSoC4/TCPWM_1.c **** }
 675:Generated_Source\PSoC4/TCPWM_1.c **** 
 676:Generated_Source\PSoC4/TCPWM_1.c **** 
 677:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriod
 679:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 680:Generated_Source\PSoC4/TCPWM_1.c **** *
 681:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 682:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/TCPWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/TCPWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/TCPWM_1.c **** *
 686:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 687:Generated_Source\PSoC4/TCPWM_1.c **** *  period: Period value
 688:Generated_Source\PSoC4/TCPWM_1.c **** *
 689:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 690:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 691:Generated_Source\PSoC4/TCPWM_1.c **** *
 692:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/TCPWM_1.c **** {
 695:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_REG = (period & TCPWM_1_16BIT_MASK);
 696:Generated_Source\PSoC4/TCPWM_1.c **** }
 697:Generated_Source\PSoC4/TCPWM_1.c **** 
 698:Generated_Source\PSoC4/TCPWM_1.c **** 
 699:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriod
 701:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 702:Generated_Source\PSoC4/TCPWM_1.c **** *
 703:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 704:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/TCPWM_1.c **** *
 706:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 707:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 708:Generated_Source\PSoC4/TCPWM_1.c **** *
 709:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 710:Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 711:Generated_Source\PSoC4/TCPWM_1.c **** *
 712:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriod(void)
 714:Generated_Source\PSoC4/TCPWM_1.c **** {
 715:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_REG & TCPWM_1_16BIT_MASK);
 716:Generated_Source\PSoC4/TCPWM_1.c **** }
 717:Generated_Source\PSoC4/TCPWM_1.c **** 
 718:Generated_Source\PSoC4/TCPWM_1.c **** 
 719:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCompareSwap
 721:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 722:Generated_Source\PSoC4/TCPWM_1.c **** *
 723:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 724:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/TCPWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/TCPWM_1.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/TCPWM_1.c **** *
 729:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 15


 730:Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 731:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 732:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/TCPWM_1.c **** *
 735:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 736:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 737:Generated_Source\PSoC4/TCPWM_1.c **** *
 738:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/TCPWM_1.c **** {
 741:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/TCPWM_1.c **** 
 743:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 744:Generated_Source\PSoC4/TCPWM_1.c **** 
 745:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_CC_MASK;
 746:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= (swapEnable & TCPWM_1_1BIT_MASK);
 747:Generated_Source\PSoC4/TCPWM_1.c **** 
 748:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 749:Generated_Source\PSoC4/TCPWM_1.c **** }
 750:Generated_Source\PSoC4/TCPWM_1.c **** 
 751:Generated_Source\PSoC4/TCPWM_1.c **** 
 752:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriodBuf
 754:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 755:Generated_Source\PSoC4/TCPWM_1.c **** *
 756:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 757:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/TCPWM_1.c **** *
 759:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 760:Generated_Source\PSoC4/TCPWM_1.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/TCPWM_1.c **** *
 762:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 763:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 764:Generated_Source\PSoC4/TCPWM_1.c **** *
 765:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/TCPWM_1.c **** {
 768:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_BUF_REG = (periodBuf & TCPWM_1_16BIT_MASK);
 769:Generated_Source\PSoC4/TCPWM_1.c **** }
 770:Generated_Source\PSoC4/TCPWM_1.c **** 
 771:Generated_Source\PSoC4/TCPWM_1.c **** 
 772:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriodBuf
 774:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 775:Generated_Source\PSoC4/TCPWM_1.c **** *
 776:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 777:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/TCPWM_1.c **** *
 779:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 780:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 781:Generated_Source\PSoC4/TCPWM_1.c **** *
 782:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 783:Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 784:Generated_Source\PSoC4/TCPWM_1.c **** *
 785:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriodBuf(void)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 16


 787:Generated_Source\PSoC4/TCPWM_1.c **** {
 788:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_BUF_REG & TCPWM_1_16BIT_MASK);
 789:Generated_Source\PSoC4/TCPWM_1.c **** }
 790:Generated_Source\PSoC4/TCPWM_1.c **** 
 791:Generated_Source\PSoC4/TCPWM_1.c **** 
 792:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPeriodSwap
 794:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 795:Generated_Source\PSoC4/TCPWM_1.c **** *
 796:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 797:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/TCPWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/TCPWM_1.c **** *  switch event.
 801:Generated_Source\PSoC4/TCPWM_1.c **** *
 802:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 803:Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 804:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 805:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/TCPWM_1.c **** *
 808:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 809:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 810:Generated_Source\PSoC4/TCPWM_1.c **** *
 811:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/TCPWM_1.c **** {
 814:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/TCPWM_1.c **** 
 816:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 817:Generated_Source\PSoC4/TCPWM_1.c **** 
 818:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_PERIOD_MASK;
 819:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1_1BIT_MASK) <<
 820:Generated_Source\PSoC4/TCPWM_1.c ****                                                             TCPWM_1_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/TCPWM_1.c **** 
 822:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 823:Generated_Source\PSoC4/TCPWM_1.c **** }
 824:Generated_Source\PSoC4/TCPWM_1.c **** 
 825:Generated_Source\PSoC4/TCPWM_1.c **** 
 826:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompare
 828:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 829:Generated_Source\PSoC4/TCPWM_1.c **** *
 830:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 831:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/TCPWM_1.c **** *
 834:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 835:Generated_Source\PSoC4/TCPWM_1.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/TCPWM_1.c **** *
 837:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 838:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 839:Generated_Source\PSoC4/TCPWM_1.c **** *
 840:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 841:Generated_Source\PSoC4/TCPWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/TCPWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 17


 844:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/TCPWM_1.c **** *
 848:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/TCPWM_1.c **** {
 851:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/TCPWM_1.c **** 
 855:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/TCPWM_1.c **** 
 858:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/TCPWM_1.c ****         {
 860:Generated_Source\PSoC4/TCPWM_1.c ****             compare++;
 861:Generated_Source\PSoC4/TCPWM_1.c ****         }
 862:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/TCPWM_1.c ****         {
 864:Generated_Source\PSoC4/TCPWM_1.c ****             compare--;
 865:Generated_Source\PSoC4/TCPWM_1.c ****         }
 866:Generated_Source\PSoC4/TCPWM_1.c ****         else
 867:Generated_Source\PSoC4/TCPWM_1.c ****         {
 868:Generated_Source\PSoC4/TCPWM_1.c ****         }
 869:Generated_Source\PSoC4/TCPWM_1.c ****         
 870:Generated_Source\PSoC4/TCPWM_1.c ****     
 871:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/TCPWM_1.c ****     
 873:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_REG = (compare & TCPWM_1_16BIT_MASK);
 874:Generated_Source\PSoC4/TCPWM_1.c **** }
 875:Generated_Source\PSoC4/TCPWM_1.c **** 
 876:Generated_Source\PSoC4/TCPWM_1.c **** 
 877:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompare
 879:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 880:Generated_Source\PSoC4/TCPWM_1.c **** *
 881:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 882:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/TCPWM_1.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/TCPWM_1.c **** *
 888:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 889:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 890:Generated_Source\PSoC4/TCPWM_1.c **** *
 891:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 892:Generated_Source\PSoC4/TCPWM_1.c **** *  Compare value
 893:Generated_Source\PSoC4/TCPWM_1.c **** *
 894:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 895:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/TCPWM_1.c **** *
 899:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompare(void)
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 18


 901:Generated_Source\PSoC4/TCPWM_1.c **** {
 902:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/TCPWM_1.c **** 
 907:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/TCPWM_1.c ****         
 910:Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_REG;
 911:Generated_Source\PSoC4/TCPWM_1.c ****         
 912:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/TCPWM_1.c ****         {
 914:Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
 915:Generated_Source\PSoC4/TCPWM_1.c ****         }
 916:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/TCPWM_1.c ****         {
 918:Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
 919:Generated_Source\PSoC4/TCPWM_1.c ****         }
 920:Generated_Source\PSoC4/TCPWM_1.c ****         else
 921:Generated_Source\PSoC4/TCPWM_1.c ****         {
 922:Generated_Source\PSoC4/TCPWM_1.c ****         }
 923:Generated_Source\PSoC4/TCPWM_1.c **** 
 924:Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
 925:Generated_Source\PSoC4/TCPWM_1.c ****     #else
 926:Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 927:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/TCPWM_1.c **** }
 929:Generated_Source\PSoC4/TCPWM_1.c **** 
 930:Generated_Source\PSoC4/TCPWM_1.c **** 
 931:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompareBuf
 933:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 934:Generated_Source\PSoC4/TCPWM_1.c **** *
 935:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 936:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/TCPWM_1.c **** *
 939:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 940:Generated_Source\PSoC4/TCPWM_1.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/TCPWM_1.c **** *
 942:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 943:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 944:Generated_Source\PSoC4/TCPWM_1.c **** *
 945:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 946:Generated_Source\PSoC4/TCPWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/TCPWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/TCPWM_1.c **** *
 953:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/TCPWM_1.c **** {
 956:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 19


 958:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/TCPWM_1.c **** 
 960:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/TCPWM_1.c **** 
 963:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/TCPWM_1.c ****         {
 965:Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf++;
 966:Generated_Source\PSoC4/TCPWM_1.c ****         }
 967:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/TCPWM_1.c ****         {
 969:Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf --;
 970:Generated_Source\PSoC4/TCPWM_1.c ****         }
 971:Generated_Source\PSoC4/TCPWM_1.c ****         else
 972:Generated_Source\PSoC4/TCPWM_1.c ****         {
 973:Generated_Source\PSoC4/TCPWM_1.c ****         }
 974:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/TCPWM_1.c ****     
 976:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_BUF_REG = (compareBuf & TCPWM_1_16BIT_MASK);
 977:Generated_Source\PSoC4/TCPWM_1.c **** }
 978:Generated_Source\PSoC4/TCPWM_1.c **** 
 979:Generated_Source\PSoC4/TCPWM_1.c **** 
 980:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompareBuf
 982:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 983:Generated_Source\PSoC4/TCPWM_1.c **** *
 984:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 985:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/TCPWM_1.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/TCPWM_1.c **** *
 988:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 989:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 990:Generated_Source\PSoC4/TCPWM_1.c **** *
 991:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 992:Generated_Source\PSoC4/TCPWM_1.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/TCPWM_1.c **** *
 994:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 995:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/TCPWM_1.c **** *
 999:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/TCPWM_1.c **** {
1002:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/TCPWM_1.c **** 
1007:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/TCPWM_1.c **** 
1010:Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/TCPWM_1.c ****         
1012:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/TCPWM_1.c ****         {
1014:Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 20


1015:Generated_Source\PSoC4/TCPWM_1.c ****         }
1016:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/TCPWM_1.c ****         {
1018:Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
1019:Generated_Source\PSoC4/TCPWM_1.c ****         }
1020:Generated_Source\PSoC4/TCPWM_1.c ****         else
1021:Generated_Source\PSoC4/TCPWM_1.c ****         {
1022:Generated_Source\PSoC4/TCPWM_1.c ****         }
1023:Generated_Source\PSoC4/TCPWM_1.c **** 
1024:Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
1025:Generated_Source\PSoC4/TCPWM_1.c ****     #else
1026:Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
1027:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/TCPWM_1.c **** }
1029:Generated_Source\PSoC4/TCPWM_1.c **** 
1030:Generated_Source\PSoC4/TCPWM_1.c **** 
1031:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCapture
1033:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1034:Generated_Source\PSoC4/TCPWM_1.c **** *
1035:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1036:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/TCPWM_1.c **** *
1039:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1040:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1041:Generated_Source\PSoC4/TCPWM_1.c **** *
1042:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1043:Generated_Source\PSoC4/TCPWM_1.c **** *  Capture value
1044:Generated_Source\PSoC4/TCPWM_1.c **** *
1045:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCapture(void)
1047:Generated_Source\PSoC4/TCPWM_1.c **** {
1048:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
1049:Generated_Source\PSoC4/TCPWM_1.c **** }
1050:Generated_Source\PSoC4/TCPWM_1.c **** 
1051:Generated_Source\PSoC4/TCPWM_1.c **** 
1052:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCaptureBuf
1054:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1055:Generated_Source\PSoC4/TCPWM_1.c **** *
1056:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1057:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/TCPWM_1.c **** *
1060:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1061:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1062:Generated_Source\PSoC4/TCPWM_1.c **** *
1063:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1064:Generated_Source\PSoC4/TCPWM_1.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/TCPWM_1.c **** *
1066:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/TCPWM_1.c **** {
1069:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
1070:Generated_Source\PSoC4/TCPWM_1.c **** }
1071:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 21


1072:Generated_Source\PSoC4/TCPWM_1.c **** 
1073:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCaptureMode
1075:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1076:Generated_Source\PSoC4/TCPWM_1.c **** *
1077:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1078:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/TCPWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/TCPWM_1.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/TCPWM_1.c **** *
1082:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1083:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1085:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/TCPWM_1.c **** *
1090:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1091:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1092:Generated_Source\PSoC4/TCPWM_1.c **** *
1093:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/TCPWM_1.c **** {
1096:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/TCPWM_1.c **** 
1098:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
1099:Generated_Source\PSoC4/TCPWM_1.c **** 
1100:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_CAPTURE_MASK;
1101:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= triggerMode;
1102:Generated_Source\PSoC4/TCPWM_1.c **** 
1103:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
1104:Generated_Source\PSoC4/TCPWM_1.c **** }
1105:Generated_Source\PSoC4/TCPWM_1.c **** 
1106:Generated_Source\PSoC4/TCPWM_1.c **** 
1107:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetReloadMode
1109:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1110:Generated_Source\PSoC4/TCPWM_1.c **** *
1111:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1112:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1114:Generated_Source\PSoC4/TCPWM_1.c **** *
1115:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1116:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1118:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/TCPWM_1.c **** *
1123:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1124:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1125:Generated_Source\PSoC4/TCPWM_1.c **** *
1126:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/TCPWM_1.c **** {
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 22


1129:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/TCPWM_1.c **** 
1131:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
1132:Generated_Source\PSoC4/TCPWM_1.c **** 
1133:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_RELOAD_MASK;
1134:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_RELOAD_SHIFT));
1135:Generated_Source\PSoC4/TCPWM_1.c **** 
1136:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
1137:Generated_Source\PSoC4/TCPWM_1.c **** }
1138:Generated_Source\PSoC4/TCPWM_1.c **** 
1139:Generated_Source\PSoC4/TCPWM_1.c **** 
1140:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStartMode
1142:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1143:Generated_Source\PSoC4/TCPWM_1.c **** *
1144:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1145:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/TCPWM_1.c **** *  phiB input.
1147:Generated_Source\PSoC4/TCPWM_1.c **** *
1148:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1149:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1151:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/TCPWM_1.c **** *
1156:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1157:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1158:Generated_Source\PSoC4/TCPWM_1.c **** *
1159:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/TCPWM_1.c **** {
1162:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/TCPWM_1.c **** 
1164:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
1165:Generated_Source\PSoC4/TCPWM_1.c **** 
1166:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_START_MASK;
1167:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_START_SHIFT));
1168:Generated_Source\PSoC4/TCPWM_1.c **** 
1169:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
1170:Generated_Source\PSoC4/TCPWM_1.c **** }
1171:Generated_Source\PSoC4/TCPWM_1.c **** 
1172:Generated_Source\PSoC4/TCPWM_1.c **** 
1173:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStopMode
1175:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1176:Generated_Source\PSoC4/TCPWM_1.c **** *
1177:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1178:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/TCPWM_1.c **** *
1180:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1181:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1183:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 23


1186:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/TCPWM_1.c **** *
1188:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1189:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1190:Generated_Source\PSoC4/TCPWM_1.c **** *
1191:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/TCPWM_1.c **** {
1194:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/TCPWM_1.c **** 
1196:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
1197:Generated_Source\PSoC4/TCPWM_1.c **** 
1198:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_STOP_MASK;
1199:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_STOP_SHIFT));
1200:Generated_Source\PSoC4/TCPWM_1.c **** 
1201:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
1202:Generated_Source\PSoC4/TCPWM_1.c **** }
1203:Generated_Source\PSoC4/TCPWM_1.c **** 
1204:Generated_Source\PSoC4/TCPWM_1.c **** 
1205:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCountMode
1207:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1208:Generated_Source\PSoC4/TCPWM_1.c **** *
1209:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1210:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1212:Generated_Source\PSoC4/TCPWM_1.c **** *
1213:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1214:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1216:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/TCPWM_1.c **** *
1221:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1222:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1223:Generated_Source\PSoC4/TCPWM_1.c **** *
1224:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/TCPWM_1.c **** {
1227:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/TCPWM_1.c **** 
1229:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
1230:Generated_Source\PSoC4/TCPWM_1.c **** 
1231:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_COUNT_MASK;
1232:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_COUNT_SHIFT));
1233:Generated_Source\PSoC4/TCPWM_1.c **** 
1234:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
1235:Generated_Source\PSoC4/TCPWM_1.c **** }
1236:Generated_Source\PSoC4/TCPWM_1.c **** 
1237:Generated_Source\PSoC4/TCPWM_1.c **** 
1238:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_TriggerCommand
1240:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1241:Generated_Source\PSoC4/TCPWM_1.c **** *
1242:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 24


1243:Generated_Source\PSoC4/TCPWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/TCPWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/TCPWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/TCPWM_1.c **** *
1247:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1248:Generated_Source\PSoC4/TCPWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/TCPWM_1.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/TCPWM_1.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/TCPWM_1.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/TCPWM_1.c **** *        define.
1253:Generated_Source\PSoC4/TCPWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/TCPWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1256:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/TCPWM_1.c **** *
1261:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1262:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1263:Generated_Source\PSoC4/TCPWM_1.c **** *
1264:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/TCPWM_1.c **** {
1267:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/TCPWM_1.c **** 
1269:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
1270:Generated_Source\PSoC4/TCPWM_1.c **** 
1271:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMMAND_REG = ((uint32)(mask << command));
1272:Generated_Source\PSoC4/TCPWM_1.c **** 
1273:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
1274:Generated_Source\PSoC4/TCPWM_1.c **** }
1275:Generated_Source\PSoC4/TCPWM_1.c **** 
1276:Generated_Source\PSoC4/TCPWM_1.c **** 
1277:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadStatus
1279:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1280:Generated_Source\PSoC4/TCPWM_1.c **** *
1281:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1282:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the status of the TCPWM_1.
1283:Generated_Source\PSoC4/TCPWM_1.c **** *
1284:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1285:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1286:Generated_Source\PSoC4/TCPWM_1.c **** *
1287:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1288:Generated_Source\PSoC4/TCPWM_1.c **** *  Status
1289:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1290:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/TCPWM_1.c **** *
1293:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadStatus(void)
1295:Generated_Source\PSoC4/TCPWM_1.c **** {
1296:Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
1297:Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
1298:Generated_Source\PSoC4/TCPWM_1.c **** }
1299:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 25


1300:Generated_Source\PSoC4/TCPWM_1.c **** 
1301:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterruptMode
1303:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1304:Generated_Source\PSoC4/TCPWM_1.c **** *
1305:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1306:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/TCPWM_1.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/TCPWM_1.c **** *
1309:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1310:Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1312:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/TCPWM_1.c **** *
1315:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1316:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1317:Generated_Source\PSoC4/TCPWM_1.c **** *
1318:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/TCPWM_1.c **** {
1321:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_MASK_REG =  interruptMask;
  65              		.loc 1 1321 0
  66 001e 0121     		mov	r1, #1
  67 0020 084B     		ldr	r3, .L2+12
  68 0022 1960     		str	r1, [r3]
  69              	.LBE15:
  70              	.LBE14:
 129:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_LEFT == TCPWM_1_PWM_ALIGN) */
  71              		.loc 1 129 0
  72 0024 084B     		ldr	r3, .L2+16
  73 0026 3031     		add	r1, r1, #48
  74 0028 1960     		str	r1, [r3]
  75              	.LVL2:
  76              	.LBB16:
  77              	.LBB17:
 695:Generated_Source\PSoC4/TCPWM_1.c **** }
  78              		.loc 1 695 0
  79 002a 084B     		ldr	r3, .L2+20
  80 002c CE31     		add	r1, r1, #206
  81 002e 1960     		str	r1, [r3]
  82              	.LVL3:
  83              	.LBE17:
  84              	.LBE16:
  85              	.LBB18:
  86              	.LBB19:
 873:Generated_Source\PSoC4/TCPWM_1.c **** }
  87              		.loc 1 873 0
  88 0030 074B     		ldr	r3, .L2+24
  89 0032 1A60     		str	r2, [r3]
  90              	.LBE19:
  91              	.LBE18:
 160:Generated_Source\PSoC4/TCPWM_1.c **** 
  92              		.loc 1 160 0
  93 0034 7047     		bx	lr
  94              	.L3:
  95 0036 C046     		.align	2
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 26


  96              	.L2:
  97 0038 C0010540 		.word	1074069952
  98 003c C8010540 		.word	1074069960
  99 0040 E4010540 		.word	1074069988
 100 0044 F8010540 		.word	1074070008
 101 0048 E8010540 		.word	1074069992
 102 004c D4010540 		.word	1074069972
 103 0050 CC010540 		.word	1074069964
 104              		.cfi_endproc
 105              	.LFE0:
 106              		.size	TCPWM_1_Init, .-TCPWM_1_Init
 107              		.section	.text.TCPWM_1_Stop,"ax",%progbits
 108              		.align	1
 109              		.global	TCPWM_1_Stop
 110              		.code	16
 111              		.thumb_func
 112              		.type	TCPWM_1_Stop, %function
 113              	TCPWM_1_Stop:
 114              	.LFB3:
 257:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 115              		.loc 1 257 0
 116              		.cfi_startproc
 117 0000 08B5     		push	{r3, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 3, -8
 120              		.cfi_offset 14, -4
 260:Generated_Source\PSoC4/TCPWM_1.c **** 
 121              		.loc 1 260 0
 122 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 123              	.LVL4:
 262:Generated_Source\PSoC4/TCPWM_1.c **** 
 124              		.loc 1 262 0
 125 0006 0821     		mov	r1, #8
 126 0008 034A     		ldr	r2, .L5
 265:Generated_Source\PSoC4/TCPWM_1.c **** 
 127              		.loc 1 265 0
 128              		@ sp needed
 262:Generated_Source\PSoC4/TCPWM_1.c **** 
 129              		.loc 1 262 0
 130 000a 1368     		ldr	r3, [r2]
 131 000c 8B43     		bic	r3, r1
 132 000e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/TCPWM_1.c **** }
 133              		.loc 1 264 0
 134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 135              	.LVL5:
 265:Generated_Source\PSoC4/TCPWM_1.c **** 
 136              		.loc 1 265 0
 137 0014 08BD     		pop	{r3, pc}
 138              	.L6:
 139 0016 C046     		.align	2
 140              	.L5:
 141 0018 00000540 		.word	1074069504
 142              		.cfi_endproc
 143              	.LFE3:
 144              		.size	TCPWM_1_Stop, .-TCPWM_1_Stop
 145              		.section	.text.TCPWM_1_SetMode,"ax",%progbits
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 27


 146              		.align	1
 147              		.global	TCPWM_1_SetMode
 148              		.code	16
 149              		.thumb_func
 150              		.type	TCPWM_1_SetMode, %function
 151              	TCPWM_1_SetMode:
 152              	.LFB4:
 294:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 153              		.loc 1 294 0
 154              		.cfi_startproc
 155              	.LVL6:
 156 0000 10B5     		push	{r4, lr}
 157              		.cfi_def_cfa_offset 8
 158              		.cfi_offset 4, -8
 159              		.cfi_offset 14, -4
 294:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 160              		.loc 1 294 0
 161 0002 041C     		mov	r4, r0
 297:Generated_Source\PSoC4/TCPWM_1.c **** 
 162              		.loc 1 297 0
 163 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 164              	.LVL7:
 299:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mode;
 165              		.loc 1 299 0
 166 0008 054B     		ldr	r3, .L8
 167 000a 064A     		ldr	r2, .L8+4
 168 000c 1968     		ldr	r1, [r3]
 303:Generated_Source\PSoC4/TCPWM_1.c **** 
 169              		.loc 1 303 0
 170              		@ sp needed
 299:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mode;
 171              		.loc 1 299 0
 172 000e 0A40     		and	r2, r1
 173 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/TCPWM_1.c **** 
 174              		.loc 1 300 0
 175 0012 1A68     		ldr	r2, [r3]
 176 0014 2243     		orr	r2, r4
 177 0016 1A60     		str	r2, [r3]
 302:Generated_Source\PSoC4/TCPWM_1.c **** }
 178              		.loc 1 302 0
 179 0018 FFF7FEFF 		bl	CyExitCriticalSection
 180              	.LVL8:
 181              	.LVL9:
 303:Generated_Source\PSoC4/TCPWM_1.c **** 
 182              		.loc 1 303 0
 183 001c 10BD     		pop	{r4, pc}
 184              	.L9:
 185 001e C046     		.align	2
 186              	.L8:
 187 0020 C0010540 		.word	1074069952
 188 0024 FFFFFFF8 		.word	-117440513
 189              		.cfi_endproc
 190              	.LFE4:
 191              		.size	TCPWM_1_SetMode, .-TCPWM_1_SetMode
 192              		.section	.text.TCPWM_1_SetQDMode,"ax",%progbits
 193              		.align	1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 28


 194              		.global	TCPWM_1_SetQDMode
 195              		.code	16
 196              		.thumb_func
 197              		.type	TCPWM_1_SetQDMode, %function
 198              	TCPWM_1_SetQDMode:
 199              	.LFB5:
 327:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 200              		.loc 1 327 0
 201              		.cfi_startproc
 202              	.LVL10:
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 327:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 207              		.loc 1 327 0
 208 0002 041C     		mov	r4, r0
 330:Generated_Source\PSoC4/TCPWM_1.c **** 
 209              		.loc 1 330 0
 210 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 211              	.LVL11:
 332:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= qdMode;
 212              		.loc 1 332 0
 213 0008 054B     		ldr	r3, .L11
 214 000a 064A     		ldr	r2, .L11+4
 215 000c 1968     		ldr	r1, [r3]
 336:Generated_Source\PSoC4/TCPWM_1.c **** 
 216              		.loc 1 336 0
 217              		@ sp needed
 332:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= qdMode;
 218              		.loc 1 332 0
 219 000e 0A40     		and	r2, r1
 220 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/TCPWM_1.c **** 
 221              		.loc 1 333 0
 222 0012 1A68     		ldr	r2, [r3]
 223 0014 2243     		orr	r2, r4
 224 0016 1A60     		str	r2, [r3]
 335:Generated_Source\PSoC4/TCPWM_1.c **** }
 225              		.loc 1 335 0
 226 0018 FFF7FEFF 		bl	CyExitCriticalSection
 227              	.LVL12:
 228              	.LVL13:
 336:Generated_Source\PSoC4/TCPWM_1.c **** 
 229              		.loc 1 336 0
 230 001c 10BD     		pop	{r4, pc}
 231              	.L12:
 232 001e C046     		.align	2
 233              	.L11:
 234 0020 C0010540 		.word	1074069952
 235 0024 FFFF8FFF 		.word	-7340033
 236              		.cfi_endproc
 237              	.LFE5:
 238              		.size	TCPWM_1_SetQDMode, .-TCPWM_1_SetQDMode
 239              		.section	.text.TCPWM_1_SetPrescaler,"ax",%progbits
 240              		.align	1
 241              		.global	TCPWM_1_SetPrescaler
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 29


 242              		.code	16
 243              		.thumb_func
 244              		.type	TCPWM_1_SetPrescaler, %function
 245              	TCPWM_1_SetPrescaler:
 246              	.LFB6:
 364:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 247              		.loc 1 364 0
 248              		.cfi_startproc
 249              	.LVL14:
 250 0000 10B5     		push	{r4, lr}
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 4, -8
 253              		.cfi_offset 14, -4
 364:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 254              		.loc 1 364 0
 255 0002 041C     		mov	r4, r0
 367:Generated_Source\PSoC4/TCPWM_1.c **** 
 256              		.loc 1 367 0
 257 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 258              	.LVL15:
 369:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= prescaler;
 259              		.loc 1 369 0
 260 0008 054B     		ldr	r3, .L14
 261 000a 064A     		ldr	r2, .L14+4
 262 000c 1968     		ldr	r1, [r3]
 373:Generated_Source\PSoC4/TCPWM_1.c **** 
 263              		.loc 1 373 0
 264              		@ sp needed
 369:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= prescaler;
 265              		.loc 1 369 0
 266 000e 0A40     		and	r2, r1
 267 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/TCPWM_1.c **** 
 268              		.loc 1 370 0
 269 0012 1A68     		ldr	r2, [r3]
 270 0014 2243     		orr	r2, r4
 271 0016 1A60     		str	r2, [r3]
 372:Generated_Source\PSoC4/TCPWM_1.c **** }
 272              		.loc 1 372 0
 273 0018 FFF7FEFF 		bl	CyExitCriticalSection
 274              	.LVL16:
 275              	.LVL17:
 373:Generated_Source\PSoC4/TCPWM_1.c **** 
 276              		.loc 1 373 0
 277 001c 10BD     		pop	{r4, pc}
 278              	.L15:
 279 001e C046     		.align	2
 280              	.L14:
 281 0020 C0010540 		.word	1074069952
 282 0024 FF00FFFF 		.word	-65281
 283              		.cfi_endproc
 284              	.LFE6:
 285              		.size	TCPWM_1_SetPrescaler, .-TCPWM_1_SetPrescaler
 286              		.section	.text.TCPWM_1_SetOneShot,"ax",%progbits
 287              		.align	1
 288              		.global	TCPWM_1_SetOneShot
 289              		.code	16
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 30


 290              		.thumb_func
 291              		.type	TCPWM_1_SetOneShot, %function
 292              	TCPWM_1_SetOneShot:
 293              	.LFB7:
 396:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 294              		.loc 1 396 0
 295              		.cfi_startproc
 296              	.LVL18:
 297 0000 10B5     		push	{r4, lr}
 298              		.cfi_def_cfa_offset 8
 299              		.cfi_offset 4, -8
 300              		.cfi_offset 14, -4
 396:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 301              		.loc 1 396 0
 302 0002 041C     		mov	r4, r0
 399:Generated_Source\PSoC4/TCPWM_1.c **** 
 303              		.loc 1 399 0
 304 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 305              	.LVL19:
 401:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1_1BIT_MASK) <<
 306              		.loc 1 401 0
 307 0008 064A     		ldr	r2, .L17
 308 000a 074B     		ldr	r3, .L17+4
 309 000c 1168     		ldr	r1, [r2]
 406:Generated_Source\PSoC4/TCPWM_1.c **** 
 310              		.loc 1 406 0
 311              		@ sp needed
 401:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1_1BIT_MASK) <<
 312              		.loc 1 401 0
 313 000e 0B40     		and	r3, r1
 314 0010 1360     		str	r3, [r2]
 402:Generated_Source\PSoC4/TCPWM_1.c ****                                                                TCPWM_1_ONESHOT_SHIFT));
 315              		.loc 1 402 0
 316 0012 0123     		mov	r3, #1
 317 0014 1168     		ldr	r1, [r2]
 318 0016 2340     		and	r3, r4
 319 0018 9B04     		lsl	r3, r3, #18
 320 001a 0B43     		orr	r3, r1
 321 001c 1360     		str	r3, [r2]
 405:Generated_Source\PSoC4/TCPWM_1.c **** }
 322              		.loc 1 405 0
 323 001e FFF7FEFF 		bl	CyExitCriticalSection
 324              	.LVL20:
 325              	.LVL21:
 406:Generated_Source\PSoC4/TCPWM_1.c **** 
 326              		.loc 1 406 0
 327 0022 10BD     		pop	{r4, pc}
 328              	.L18:
 329              		.align	2
 330              	.L17:
 331 0024 C0010540 		.word	1074069952
 332 0028 FFFFFBFF 		.word	-262145
 333              		.cfi_endproc
 334              	.LFE7:
 335              		.size	TCPWM_1_SetOneShot, .-TCPWM_1_SetOneShot
 336              		.section	.text.TCPWM_1_SetPWMMode,"ax",%progbits
 337              		.align	1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 31


 338              		.global	TCPWM_1_SetPWMMode
 339              		.code	16
 340              		.thumb_func
 341              		.type	TCPWM_1_SetPWMMode, %function
 342              	TCPWM_1_SetPWMMode:
 343              	.LFB8:
 450:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL2_REG = (modeMask & TCPWM_1_6BIT_MASK);
 344              		.loc 1 450 0
 345              		.cfi_startproc
 346              	.LVL22:
 451:Generated_Source\PSoC4/TCPWM_1.c **** }
 347              		.loc 1 451 0
 348 0000 3F23     		mov	r3, #63
 349 0002 1840     		and	r0, r3
 350              	.LVL23:
 351 0004 014B     		ldr	r3, .L20
 452:Generated_Source\PSoC4/TCPWM_1.c **** 
 352              		.loc 1 452 0
 353              		@ sp needed
 451:Generated_Source\PSoC4/TCPWM_1.c **** }
 354              		.loc 1 451 0
 355 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/TCPWM_1.c **** 
 356              		.loc 1 452 0
 357 0008 7047     		bx	lr
 358              	.L21:
 359 000a C046     		.align	2
 360              	.L20:
 361 000c E8010540 		.word	1074069992
 362              		.cfi_endproc
 363              	.LFE8:
 364              		.size	TCPWM_1_SetPWMMode, .-TCPWM_1_SetPWMMode
 365              		.section	.text.TCPWM_1_SetPWMSyncKill,"ax",%progbits
 366              		.align	1
 367              		.global	TCPWM_1_SetPWMSyncKill
 368              		.code	16
 369              		.thumb_func
 370              		.type	TCPWM_1_SetPWMSyncKill, %function
 371              	TCPWM_1_SetPWMSyncKill:
 372              	.LFB9:
 486:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 373              		.loc 1 486 0
 374              		.cfi_startproc
 375              	.LVL24:
 376 0000 10B5     		push	{r4, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 4, -8
 379              		.cfi_offset 14, -4
 486:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 380              		.loc 1 486 0
 381 0002 041C     		mov	r4, r0
 489:Generated_Source\PSoC4/TCPWM_1.c **** 
 382              		.loc 1 489 0
 383 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 384              	.LVL25:
 491:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1_1BIT_MASK)  <<
 385              		.loc 1 491 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 32


 386 0008 0421     		mov	r1, #4
 387 000a 064A     		ldr	r2, .L23
 496:Generated_Source\PSoC4/TCPWM_1.c **** 
 388              		.loc 1 496 0
 389              		@ sp needed
 491:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1_1BIT_MASK)  <<
 390              		.loc 1 491 0
 391 000c 1368     		ldr	r3, [r2]
 392 000e 8B43     		bic	r3, r1
 393 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/TCPWM_1.c ****                                                TCPWM_1_PWM_SYNC_KILL_SHIFT));
 394              		.loc 1 492 0
 395 0012 0123     		mov	r3, #1
 396 0014 1168     		ldr	r1, [r2]
 397 0016 2340     		and	r3, r4
 398 0018 9B00     		lsl	r3, r3, #2
 399 001a 0B43     		orr	r3, r1
 400 001c 1360     		str	r3, [r2]
 495:Generated_Source\PSoC4/TCPWM_1.c **** }
 401              		.loc 1 495 0
 402 001e FFF7FEFF 		bl	CyExitCriticalSection
 403              	.LVL26:
 404              	.LVL27:
 496:Generated_Source\PSoC4/TCPWM_1.c **** 
 405              		.loc 1 496 0
 406 0022 10BD     		pop	{r4, pc}
 407              	.L24:
 408              		.align	2
 409              	.L23:
 410 0024 C0010540 		.word	1074069952
 411              		.cfi_endproc
 412              	.LFE9:
 413              		.size	TCPWM_1_SetPWMSyncKill, .-TCPWM_1_SetPWMSyncKill
 414              		.section	.text.TCPWM_1_SetPWMStopOnKill,"ax",%progbits
 415              		.align	1
 416              		.global	TCPWM_1_SetPWMStopOnKill
 417              		.code	16
 418              		.thumb_func
 419              		.type	TCPWM_1_SetPWMStopOnKill, %function
 420              	TCPWM_1_SetPWMStopOnKill:
 421              	.LFB10:
 520:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 422              		.loc 1 520 0
 423              		.cfi_startproc
 424              	.LVL28:
 425 0000 10B5     		push	{r4, lr}
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 4, -8
 428              		.cfi_offset 14, -4
 520:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 429              		.loc 1 520 0
 430 0002 041C     		mov	r4, r0
 523:Generated_Source\PSoC4/TCPWM_1.c **** 
 431              		.loc 1 523 0
 432 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 433              	.LVL29:
 525:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1_1BIT_MASK)  <<
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 33


 434              		.loc 1 525 0
 435 0008 0821     		mov	r1, #8
 436 000a 064A     		ldr	r2, .L26
 530:Generated_Source\PSoC4/TCPWM_1.c **** 
 437              		.loc 1 530 0
 438              		@ sp needed
 525:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1_1BIT_MASK)  <<
 439              		.loc 1 525 0
 440 000c 1368     		ldr	r3, [r2]
 441 000e 8B43     		bic	r3, r1
 442 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/TCPWM_1.c ****                                                          TCPWM_1_PWM_STOP_KILL_SHIFT));
 443              		.loc 1 526 0
 444 0012 0123     		mov	r3, #1
 445 0014 1168     		ldr	r1, [r2]
 446 0016 2340     		and	r3, r4
 447 0018 DB00     		lsl	r3, r3, #3
 448 001a 0B43     		orr	r3, r1
 449 001c 1360     		str	r3, [r2]
 529:Generated_Source\PSoC4/TCPWM_1.c **** }
 450              		.loc 1 529 0
 451 001e FFF7FEFF 		bl	CyExitCriticalSection
 452              	.LVL30:
 453              	.LVL31:
 530:Generated_Source\PSoC4/TCPWM_1.c **** 
 454              		.loc 1 530 0
 455 0022 10BD     		pop	{r4, pc}
 456              	.L27:
 457              		.align	2
 458              	.L26:
 459 0024 C0010540 		.word	1074069952
 460              		.cfi_endproc
 461              	.LFE10:
 462              		.size	TCPWM_1_SetPWMStopOnKill, .-TCPWM_1_SetPWMStopOnKill
 463              		.section	.text.TCPWM_1_SetPWMDeadTime,"ax",%progbits
 464              		.align	1
 465              		.global	TCPWM_1_SetPWMDeadTime
 466              		.code	16
 467              		.thumb_func
 468              		.type	TCPWM_1_SetPWMDeadTime, %function
 469              	TCPWM_1_SetPWMDeadTime:
 470              	.LFB11:
 553:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 471              		.loc 1 553 0
 472              		.cfi_startproc
 473              	.LVL32:
 474 0000 10B5     		push	{r4, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 553:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 478              		.loc 1 553 0
 479 0002 041C     		mov	r4, r0
 556:Generated_Source\PSoC4/TCPWM_1.c **** 
 480              		.loc 1 556 0
 481 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 482              	.LVL33:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 34


 558:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((deadTime & TCPWM_1_8BIT_MASK) <<
 483              		.loc 1 558 0
 484 0008 064B     		ldr	r3, .L29
 485 000a 074A     		ldr	r2, .L29+4
 486 000c 1968     		ldr	r1, [r3]
 559:Generated_Source\PSoC4/TCPWM_1.c ****                                                           TCPWM_1_PRESCALER_SHIFT));
 487              		.loc 1 559 0
 488 000e 2406     		lsl	r4, r4, #24
 489              	.LVL34:
 558:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((deadTime & TCPWM_1_8BIT_MASK) <<
 490              		.loc 1 558 0
 491 0010 0A40     		and	r2, r1
 492 0012 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/TCPWM_1.c ****                                                           TCPWM_1_PRESCALER_SHIFT));
 493              		.loc 1 559 0
 494 0014 1A68     		ldr	r2, [r3]
 495 0016 240C     		lsr	r4, r4, #16
 496 0018 1443     		orr	r4, r2
 497 001a 1C60     		str	r4, [r3]
 562:Generated_Source\PSoC4/TCPWM_1.c **** }
 498              		.loc 1 562 0
 499 001c FFF7FEFF 		bl	CyExitCriticalSection
 500              	.LVL35:
 563:Generated_Source\PSoC4/TCPWM_1.c **** 
 501              		.loc 1 563 0
 502              		@ sp needed
 503 0020 10BD     		pop	{r4, pc}
 504              	.L30:
 505 0022 C046     		.align	2
 506              	.L29:
 507 0024 C0010540 		.word	1074069952
 508 0028 FF00FFFF 		.word	-65281
 509              		.cfi_endproc
 510              	.LFE11:
 511              		.size	TCPWM_1_SetPWMDeadTime, .-TCPWM_1_SetPWMDeadTime
 512              		.section	.text.TCPWM_1_SetPWMInvert,"ax",%progbits
 513              		.align	1
 514              		.global	TCPWM_1_SetPWMInvert
 515              		.code	16
 516              		.thumb_func
 517              		.type	TCPWM_1_SetPWMInvert, %function
 518              	TCPWM_1_SetPWMInvert:
 519              	.LFB12:
 586:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 520              		.loc 1 586 0
 521              		.cfi_startproc
 522              	.LVL36:
 523 0000 10B5     		push	{r4, lr}
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 4, -8
 526              		.cfi_offset 14, -4
 586:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 527              		.loc 1 586 0
 528 0002 041C     		mov	r4, r0
 589:Generated_Source\PSoC4/TCPWM_1.c **** 
 529              		.loc 1 589 0
 530 0004 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 35


 531              	.LVL37:
 591:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mask;
 532              		.loc 1 591 0
 533 0008 054B     		ldr	r3, .L32
 534 000a 064A     		ldr	r2, .L32+4
 535 000c 1968     		ldr	r1, [r3]
 595:Generated_Source\PSoC4/TCPWM_1.c **** 
 536              		.loc 1 595 0
 537              		@ sp needed
 591:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mask;
 538              		.loc 1 591 0
 539 000e 0A40     		and	r2, r1
 540 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/TCPWM_1.c **** 
 541              		.loc 1 592 0
 542 0012 1A68     		ldr	r2, [r3]
 543 0014 2243     		orr	r2, r4
 544 0016 1A60     		str	r2, [r3]
 594:Generated_Source\PSoC4/TCPWM_1.c **** }
 545              		.loc 1 594 0
 546 0018 FFF7FEFF 		bl	CyExitCriticalSection
 547              	.LVL38:
 548              	.LVL39:
 595:Generated_Source\PSoC4/TCPWM_1.c **** 
 549              		.loc 1 595 0
 550 001c 10BD     		pop	{r4, pc}
 551              	.L33:
 552 001e C046     		.align	2
 553              	.L32:
 554 0020 C0010540 		.word	1074069952
 555 0024 FFFFCFFF 		.word	-3145729
 556              		.cfi_endproc
 557              	.LFE12:
 558              		.size	TCPWM_1_SetPWMInvert, .-TCPWM_1_SetPWMInvert
 559              		.section	.text.TCPWM_1_WriteCounter,"ax",%progbits
 560              		.align	1
 561              		.global	TCPWM_1_WriteCounter
 562              		.code	16
 563              		.thumb_func
 564              		.type	TCPWM_1_WriteCounter, %function
 565              	TCPWM_1_WriteCounter:
 566              	.LFB13:
 616:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COUNTER_REG = (count & TCPWM_1_16BIT_MASK);
 567              		.loc 1 616 0
 568              		.cfi_startproc
 569              	.LVL40:
 617:Generated_Source\PSoC4/TCPWM_1.c **** }
 570              		.loc 1 617 0
 571 0000 014B     		ldr	r3, .L35
 572 0002 80B2     		uxth	r0, r0
 573              	.LVL41:
 574 0004 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/TCPWM_1.c **** 
 575              		.loc 1 618 0
 576              		@ sp needed
 577 0006 7047     		bx	lr
 578              	.L36:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 36


 579              		.align	2
 580              	.L35:
 581 0008 C8010540 		.word	1074069960
 582              		.cfi_endproc
 583              	.LFE13:
 584              		.size	TCPWM_1_WriteCounter, .-TCPWM_1_WriteCounter
 585              		.section	.text.TCPWM_1_ReadCounter,"ax",%progbits
 586              		.align	1
 587              		.global	TCPWM_1_ReadCounter
 588              		.code	16
 589              		.thumb_func
 590              		.type	TCPWM_1_ReadCounter, %function
 591              	TCPWM_1_ReadCounter:
 592              	.LFB14:
 636:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COUNTER_REG & TCPWM_1_16BIT_MASK);
 593              		.loc 1 636 0
 594              		.cfi_startproc
 637:Generated_Source\PSoC4/TCPWM_1.c **** }
 595              		.loc 1 637 0
 596 0000 014B     		ldr	r3, .L38
 638:Generated_Source\PSoC4/TCPWM_1.c **** 
 597              		.loc 1 638 0
 598              		@ sp needed
 637:Generated_Source\PSoC4/TCPWM_1.c **** }
 599              		.loc 1 637 0
 600 0002 1868     		ldr	r0, [r3]
 601 0004 80B2     		uxth	r0, r0
 638:Generated_Source\PSoC4/TCPWM_1.c **** 
 602              		.loc 1 638 0
 603 0006 7047     		bx	lr
 604              	.L39:
 605              		.align	2
 606              	.L38:
 607 0008 C8010540 		.word	1074069960
 608              		.cfi_endproc
 609              	.LFE14:
 610              		.size	TCPWM_1_ReadCounter, .-TCPWM_1_ReadCounter
 611              		.section	.text.TCPWM_1_SetCounterMode,"ax",%progbits
 612              		.align	1
 613              		.global	TCPWM_1_SetCounterMode
 614              		.code	16
 615              		.thumb_func
 616              		.type	TCPWM_1_SetCounterMode, %function
 617              	TCPWM_1_SetCounterMode:
 618              	.LFB15:
 665:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 619              		.loc 1 665 0
 620              		.cfi_startproc
 621              	.LVL42:
 622 0000 10B5     		push	{r4, lr}
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 4, -8
 625              		.cfi_offset 14, -4
 665:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 626              		.loc 1 665 0
 627 0002 041C     		mov	r4, r0
 668:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 37


 628              		.loc 1 668 0
 629 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 630              	.LVL43:
 670:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= counterMode;
 631              		.loc 1 670 0
 632 0008 054B     		ldr	r3, .L41
 633 000a 064A     		ldr	r2, .L41+4
 634 000c 1968     		ldr	r1, [r3]
 674:Generated_Source\PSoC4/TCPWM_1.c **** 
 635              		.loc 1 674 0
 636              		@ sp needed
 670:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= counterMode;
 637              		.loc 1 670 0
 638 000e 0A40     		and	r2, r1
 639 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/TCPWM_1.c **** 
 640              		.loc 1 671 0
 641 0012 1A68     		ldr	r2, [r3]
 642 0014 2243     		orr	r2, r4
 643 0016 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/TCPWM_1.c **** }
 644              		.loc 1 673 0
 645 0018 FFF7FEFF 		bl	CyExitCriticalSection
 646              	.LVL44:
 647              	.LVL45:
 674:Generated_Source\PSoC4/TCPWM_1.c **** 
 648              		.loc 1 674 0
 649 001c 10BD     		pop	{r4, pc}
 650              	.L42:
 651 001e C046     		.align	2
 652              	.L41:
 653 0020 C0010540 		.word	1074069952
 654 0024 FFFFFCFF 		.word	-196609
 655              		.cfi_endproc
 656              	.LFE15:
 657              		.size	TCPWM_1_SetCounterMode, .-TCPWM_1_SetCounterMode
 658              		.section	.text.TCPWM_1_WritePeriod,"ax",%progbits
 659              		.align	1
 660              		.global	TCPWM_1_WritePeriod
 661              		.code	16
 662              		.thumb_func
 663              		.type	TCPWM_1_WritePeriod, %function
 664              	TCPWM_1_WritePeriod:
 665              	.LFB16:
 694:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_REG = (period & TCPWM_1_16BIT_MASK);
 666              		.loc 1 694 0
 667              		.cfi_startproc
 668              	.LVL46:
 695:Generated_Source\PSoC4/TCPWM_1.c **** }
 669              		.loc 1 695 0
 670 0000 014B     		ldr	r3, .L44
 671 0002 80B2     		uxth	r0, r0
 672              	.LVL47:
 673 0004 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/TCPWM_1.c **** 
 674              		.loc 1 696 0
 675              		@ sp needed
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 38


 676 0006 7047     		bx	lr
 677              	.L45:
 678              		.align	2
 679              	.L44:
 680 0008 D4010540 		.word	1074069972
 681              		.cfi_endproc
 682              	.LFE16:
 683              		.size	TCPWM_1_WritePeriod, .-TCPWM_1_WritePeriod
 684              		.section	.text.TCPWM_1_ReadPeriod,"ax",%progbits
 685              		.align	1
 686              		.global	TCPWM_1_ReadPeriod
 687              		.code	16
 688              		.thumb_func
 689              		.type	TCPWM_1_ReadPeriod, %function
 690              	TCPWM_1_ReadPeriod:
 691              	.LFB17:
 714:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_REG & TCPWM_1_16BIT_MASK);
 692              		.loc 1 714 0
 693              		.cfi_startproc
 715:Generated_Source\PSoC4/TCPWM_1.c **** }
 694              		.loc 1 715 0
 695 0000 014B     		ldr	r3, .L47
 716:Generated_Source\PSoC4/TCPWM_1.c **** 
 696              		.loc 1 716 0
 697              		@ sp needed
 715:Generated_Source\PSoC4/TCPWM_1.c **** }
 698              		.loc 1 715 0
 699 0002 1868     		ldr	r0, [r3]
 700 0004 80B2     		uxth	r0, r0
 716:Generated_Source\PSoC4/TCPWM_1.c **** 
 701              		.loc 1 716 0
 702 0006 7047     		bx	lr
 703              	.L48:
 704              		.align	2
 705              	.L47:
 706 0008 D4010540 		.word	1074069972
 707              		.cfi_endproc
 708              	.LFE17:
 709              		.size	TCPWM_1_ReadPeriod, .-TCPWM_1_ReadPeriod
 710              		.section	.text.TCPWM_1_SetCompareSwap,"ax",%progbits
 711              		.align	1
 712              		.global	TCPWM_1_SetCompareSwap
 713              		.code	16
 714              		.thumb_func
 715              		.type	TCPWM_1_SetCompareSwap, %function
 716              	TCPWM_1_SetCompareSwap:
 717              	.LFB18:
 740:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 718              		.loc 1 740 0
 719              		.cfi_startproc
 720              	.LVL48:
 721 0000 10B5     		push	{r4, lr}
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 4, -8
 724              		.cfi_offset 14, -4
 740:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 725              		.loc 1 740 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 39


 726 0002 041C     		mov	r4, r0
 743:Generated_Source\PSoC4/TCPWM_1.c **** 
 727              		.loc 1 743 0
 728 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 729              	.LVL49:
 745:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= (swapEnable & TCPWM_1_1BIT_MASK);
 730              		.loc 1 745 0
 731 0008 0122     		mov	r2, #1
 732 000a 054B     		ldr	r3, .L50
 749:Generated_Source\PSoC4/TCPWM_1.c **** 
 733              		.loc 1 749 0
 734              		@ sp needed
 745:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= (swapEnable & TCPWM_1_1BIT_MASK);
 735              		.loc 1 745 0
 736 000c 1968     		ldr	r1, [r3]
 737 000e 9143     		bic	r1, r2
 738 0010 1960     		str	r1, [r3]
 746:Generated_Source\PSoC4/TCPWM_1.c **** 
 739              		.loc 1 746 0
 740 0012 1968     		ldr	r1, [r3]
 741 0014 2240     		and	r2, r4
 742 0016 0A43     		orr	r2, r1
 743 0018 1A60     		str	r2, [r3]
 748:Generated_Source\PSoC4/TCPWM_1.c **** }
 744              		.loc 1 748 0
 745 001a FFF7FEFF 		bl	CyExitCriticalSection
 746              	.LVL50:
 747              	.LVL51:
 749:Generated_Source\PSoC4/TCPWM_1.c **** 
 748              		.loc 1 749 0
 749 001e 10BD     		pop	{r4, pc}
 750              	.L51:
 751              		.align	2
 752              	.L50:
 753 0020 C0010540 		.word	1074069952
 754              		.cfi_endproc
 755              	.LFE18:
 756              		.size	TCPWM_1_SetCompareSwap, .-TCPWM_1_SetCompareSwap
 757              		.section	.text.TCPWM_1_WritePeriodBuf,"ax",%progbits
 758              		.align	1
 759              		.global	TCPWM_1_WritePeriodBuf
 760              		.code	16
 761              		.thumb_func
 762              		.type	TCPWM_1_WritePeriodBuf, %function
 763              	TCPWM_1_WritePeriodBuf:
 764              	.LFB19:
 767:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_BUF_REG = (periodBuf & TCPWM_1_16BIT_MASK);
 765              		.loc 1 767 0
 766              		.cfi_startproc
 767              	.LVL52:
 768:Generated_Source\PSoC4/TCPWM_1.c **** }
 768              		.loc 1 768 0
 769 0000 014B     		ldr	r3, .L53
 770 0002 80B2     		uxth	r0, r0
 771              	.LVL53:
 772 0004 1860     		str	r0, [r3]
 769:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 40


 773              		.loc 1 769 0
 774              		@ sp needed
 775 0006 7047     		bx	lr
 776              	.L54:
 777              		.align	2
 778              	.L53:
 779 0008 D8010540 		.word	1074069976
 780              		.cfi_endproc
 781              	.LFE19:
 782              		.size	TCPWM_1_WritePeriodBuf, .-TCPWM_1_WritePeriodBuf
 783              		.section	.text.TCPWM_1_ReadPeriodBuf,"ax",%progbits
 784              		.align	1
 785              		.global	TCPWM_1_ReadPeriodBuf
 786              		.code	16
 787              		.thumb_func
 788              		.type	TCPWM_1_ReadPeriodBuf, %function
 789              	TCPWM_1_ReadPeriodBuf:
 790              	.LFB20:
 787:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_BUF_REG & TCPWM_1_16BIT_MASK);
 791              		.loc 1 787 0
 792              		.cfi_startproc
 788:Generated_Source\PSoC4/TCPWM_1.c **** }
 793              		.loc 1 788 0
 794 0000 014B     		ldr	r3, .L56
 789:Generated_Source\PSoC4/TCPWM_1.c **** 
 795              		.loc 1 789 0
 796              		@ sp needed
 788:Generated_Source\PSoC4/TCPWM_1.c **** }
 797              		.loc 1 788 0
 798 0002 1868     		ldr	r0, [r3]
 799 0004 80B2     		uxth	r0, r0
 789:Generated_Source\PSoC4/TCPWM_1.c **** 
 800              		.loc 1 789 0
 801 0006 7047     		bx	lr
 802              	.L57:
 803              		.align	2
 804              	.L56:
 805 0008 D8010540 		.word	1074069976
 806              		.cfi_endproc
 807              	.LFE20:
 808              		.size	TCPWM_1_ReadPeriodBuf, .-TCPWM_1_ReadPeriodBuf
 809              		.section	.text.TCPWM_1_SetPeriodSwap,"ax",%progbits
 810              		.align	1
 811              		.global	TCPWM_1_SetPeriodSwap
 812              		.code	16
 813              		.thumb_func
 814              		.type	TCPWM_1_SetPeriodSwap, %function
 815              	TCPWM_1_SetPeriodSwap:
 816              	.LFB21:
 813:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 817              		.loc 1 813 0
 818              		.cfi_startproc
 819              	.LVL54:
 820 0000 10B5     		push	{r4, lr}
 821              		.cfi_def_cfa_offset 8
 822              		.cfi_offset 4, -8
 823              		.cfi_offset 14, -4
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 41


 813:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 824              		.loc 1 813 0
 825 0002 041C     		mov	r4, r0
 816:Generated_Source\PSoC4/TCPWM_1.c **** 
 826              		.loc 1 816 0
 827 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 828              	.LVL55:
 818:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1_1BIT_MASK) <<
 829              		.loc 1 818 0
 830 0008 0221     		mov	r1, #2
 831 000a 064A     		ldr	r2, .L59
 823:Generated_Source\PSoC4/TCPWM_1.c **** 
 832              		.loc 1 823 0
 833              		@ sp needed
 818:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1_1BIT_MASK) <<
 834              		.loc 1 818 0
 835 000c 1368     		ldr	r3, [r2]
 836 000e 8B43     		bic	r3, r1
 837 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/TCPWM_1.c ****                                                             TCPWM_1_RELOAD_PERIOD_SHIFT));
 838              		.loc 1 819 0
 839 0012 0123     		mov	r3, #1
 840 0014 1168     		ldr	r1, [r2]
 841 0016 2340     		and	r3, r4
 842 0018 5B00     		lsl	r3, r3, #1
 843 001a 0B43     		orr	r3, r1
 844 001c 1360     		str	r3, [r2]
 822:Generated_Source\PSoC4/TCPWM_1.c **** }
 845              		.loc 1 822 0
 846 001e FFF7FEFF 		bl	CyExitCriticalSection
 847              	.LVL56:
 848              	.LVL57:
 823:Generated_Source\PSoC4/TCPWM_1.c **** 
 849              		.loc 1 823 0
 850 0022 10BD     		pop	{r4, pc}
 851              	.L60:
 852              		.align	2
 853              	.L59:
 854 0024 C0010540 		.word	1074069952
 855              		.cfi_endproc
 856              	.LFE21:
 857              		.size	TCPWM_1_SetPeriodSwap, .-TCPWM_1_SetPeriodSwap
 858              		.section	.text.TCPWM_1_WriteCompare,"ax",%progbits
 859              		.align	1
 860              		.global	TCPWM_1_WriteCompare
 861              		.code	16
 862              		.thumb_func
 863              		.type	TCPWM_1_WriteCompare, %function
 864              	TCPWM_1_WriteCompare:
 865              	.LFB22:
 850:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 866              		.loc 1 850 0
 867              		.cfi_startproc
 868              	.LVL58:
 873:Generated_Source\PSoC4/TCPWM_1.c **** }
 869              		.loc 1 873 0
 870 0000 014B     		ldr	r3, .L62
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 42


 871 0002 80B2     		uxth	r0, r0
 872              	.LVL59:
 873 0004 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/TCPWM_1.c **** 
 874              		.loc 1 874 0
 875              		@ sp needed
 876 0006 7047     		bx	lr
 877              	.L63:
 878              		.align	2
 879              	.L62:
 880 0008 CC010540 		.word	1074069964
 881              		.cfi_endproc
 882              	.LFE22:
 883              		.size	TCPWM_1_WriteCompare, .-TCPWM_1_WriteCompare
 884              		.section	.text.TCPWM_1_ReadCompare,"ax",%progbits
 885              		.align	1
 886              		.global	TCPWM_1_ReadCompare
 887              		.code	16
 888              		.thumb_func
 889              		.type	TCPWM_1_ReadCompare, %function
 890              	TCPWM_1_ReadCompare:
 891              	.LFB23:
 901:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 892              		.loc 1 901 0
 893              		.cfi_startproc
 926:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 894              		.loc 1 926 0
 895 0000 014B     		ldr	r3, .L65
 928:Generated_Source\PSoC4/TCPWM_1.c **** 
 896              		.loc 1 928 0
 897              		@ sp needed
 926:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 898              		.loc 1 926 0
 899 0002 1868     		ldr	r0, [r3]
 900 0004 80B2     		uxth	r0, r0
 928:Generated_Source\PSoC4/TCPWM_1.c **** 
 901              		.loc 1 928 0
 902 0006 7047     		bx	lr
 903              	.L66:
 904              		.align	2
 905              	.L65:
 906 0008 CC010540 		.word	1074069964
 907              		.cfi_endproc
 908              	.LFE23:
 909              		.size	TCPWM_1_ReadCompare, .-TCPWM_1_ReadCompare
 910              		.section	.text.TCPWM_1_WriteCompareBuf,"ax",%progbits
 911              		.align	1
 912              		.global	TCPWM_1_WriteCompareBuf
 913              		.code	16
 914              		.thumb_func
 915              		.type	TCPWM_1_WriteCompareBuf, %function
 916              	TCPWM_1_WriteCompareBuf:
 917              	.LFB24:
 955:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 918              		.loc 1 955 0
 919              		.cfi_startproc
 920              	.LVL60:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 43


 976:Generated_Source\PSoC4/TCPWM_1.c **** }
 921              		.loc 1 976 0
 922 0000 014B     		ldr	r3, .L68
 923 0002 80B2     		uxth	r0, r0
 924              	.LVL61:
 925 0004 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/TCPWM_1.c **** 
 926              		.loc 1 977 0
 927              		@ sp needed
 928 0006 7047     		bx	lr
 929              	.L69:
 930              		.align	2
 931              	.L68:
 932 0008 D0010540 		.word	1074069968
 933              		.cfi_endproc
 934              	.LFE24:
 935              		.size	TCPWM_1_WriteCompareBuf, .-TCPWM_1_WriteCompareBuf
 936              		.section	.text.TCPWM_1_ReadCompareBuf,"ax",%progbits
 937              		.align	1
 938              		.global	TCPWM_1_ReadCompareBuf
 939              		.code	16
 940              		.thumb_func
 941              		.type	TCPWM_1_ReadCompareBuf, %function
 942              	TCPWM_1_ReadCompareBuf:
 943              	.LFB25:
1001:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 944              		.loc 1 1001 0
 945              		.cfi_startproc
1026:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 946              		.loc 1 1026 0
 947 0000 014B     		ldr	r3, .L71
1028:Generated_Source\PSoC4/TCPWM_1.c **** 
 948              		.loc 1 1028 0
 949              		@ sp needed
1026:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 950              		.loc 1 1026 0
 951 0002 1868     		ldr	r0, [r3]
 952 0004 80B2     		uxth	r0, r0
1028:Generated_Source\PSoC4/TCPWM_1.c **** 
 953              		.loc 1 1028 0
 954 0006 7047     		bx	lr
 955              	.L72:
 956              		.align	2
 957              	.L71:
 958 0008 D0010540 		.word	1074069968
 959              		.cfi_endproc
 960              	.LFE25:
 961              		.size	TCPWM_1_ReadCompareBuf, .-TCPWM_1_ReadCompareBuf
 962              		.section	.text.TCPWM_1_ReadCapture,"ax",%progbits
 963              		.align	1
 964              		.global	TCPWM_1_ReadCapture
 965              		.code	16
 966              		.thumb_func
 967              		.type	TCPWM_1_ReadCapture, %function
 968              	TCPWM_1_ReadCapture:
 969              	.LFB26:
1047:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 44


 970              		.loc 1 1047 0
 971              		.cfi_startproc
1048:Generated_Source\PSoC4/TCPWM_1.c **** }
 972              		.loc 1 1048 0
 973 0000 014B     		ldr	r3, .L74
1049:Generated_Source\PSoC4/TCPWM_1.c **** 
 974              		.loc 1 1049 0
 975              		@ sp needed
1048:Generated_Source\PSoC4/TCPWM_1.c **** }
 976              		.loc 1 1048 0
 977 0002 1868     		ldr	r0, [r3]
 978 0004 80B2     		uxth	r0, r0
1049:Generated_Source\PSoC4/TCPWM_1.c **** 
 979              		.loc 1 1049 0
 980 0006 7047     		bx	lr
 981              	.L75:
 982              		.align	2
 983              	.L74:
 984 0008 CC010540 		.word	1074069964
 985              		.cfi_endproc
 986              	.LFE26:
 987              		.size	TCPWM_1_ReadCapture, .-TCPWM_1_ReadCapture
 988              		.section	.text.TCPWM_1_ReadCaptureBuf,"ax",%progbits
 989              		.align	1
 990              		.global	TCPWM_1_ReadCaptureBuf
 991              		.code	16
 992              		.thumb_func
 993              		.type	TCPWM_1_ReadCaptureBuf, %function
 994              	TCPWM_1_ReadCaptureBuf:
 995              	.LFB27:
1068:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 996              		.loc 1 1068 0
 997              		.cfi_startproc
1069:Generated_Source\PSoC4/TCPWM_1.c **** }
 998              		.loc 1 1069 0
 999 0000 014B     		ldr	r3, .L77
1070:Generated_Source\PSoC4/TCPWM_1.c **** 
 1000              		.loc 1 1070 0
 1001              		@ sp needed
1069:Generated_Source\PSoC4/TCPWM_1.c **** }
 1002              		.loc 1 1069 0
 1003 0002 1868     		ldr	r0, [r3]
 1004 0004 80B2     		uxth	r0, r0
1070:Generated_Source\PSoC4/TCPWM_1.c **** 
 1005              		.loc 1 1070 0
 1006 0006 7047     		bx	lr
 1007              	.L78:
 1008              		.align	2
 1009              	.L77:
 1010 0008 D0010540 		.word	1074069968
 1011              		.cfi_endproc
 1012              	.LFE27:
 1013              		.size	TCPWM_1_ReadCaptureBuf, .-TCPWM_1_ReadCaptureBuf
 1014              		.section	.text.TCPWM_1_SetCaptureMode,"ax",%progbits
 1015              		.align	1
 1016              		.global	TCPWM_1_SetCaptureMode
 1017              		.code	16
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 45


 1018              		.thumb_func
 1019              		.type	TCPWM_1_SetCaptureMode, %function
 1020              	TCPWM_1_SetCaptureMode:
 1021              	.LFB28:
1095:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1022              		.loc 1 1095 0
 1023              		.cfi_startproc
 1024              	.LVL62:
 1025 0000 10B5     		push	{r4, lr}
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 4, -8
 1028              		.cfi_offset 14, -4
1095:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1029              		.loc 1 1095 0
 1030 0002 041C     		mov	r4, r0
1098:Generated_Source\PSoC4/TCPWM_1.c **** 
 1031              		.loc 1 1098 0
 1032 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1033              	.LVL63:
1100:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1034              		.loc 1 1100 0
 1035 0008 0321     		mov	r1, #3
 1036 000a 054B     		ldr	r3, .L80
1104:Generated_Source\PSoC4/TCPWM_1.c **** 
 1037              		.loc 1 1104 0
 1038              		@ sp needed
1100:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1039              		.loc 1 1100 0
 1040 000c 1A68     		ldr	r2, [r3]
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/TCPWM_1.c **** 
 1043              		.loc 1 1101 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 2243     		orr	r2, r4
 1046 0016 1A60     		str	r2, [r3]
1103:Generated_Source\PSoC4/TCPWM_1.c **** }
 1047              		.loc 1 1103 0
 1048 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1049              	.LVL64:
 1050              	.LVL65:
1104:Generated_Source\PSoC4/TCPWM_1.c **** 
 1051              		.loc 1 1104 0
 1052 001c 10BD     		pop	{r4, pc}
 1053              	.L81:
 1054 001e C046     		.align	2
 1055              	.L80:
 1056 0020 E4010540 		.word	1074069988
 1057              		.cfi_endproc
 1058              	.LFE28:
 1059              		.size	TCPWM_1_SetCaptureMode, .-TCPWM_1_SetCaptureMode
 1060              		.section	.text.TCPWM_1_SetReloadMode,"ax",%progbits
 1061              		.align	1
 1062              		.global	TCPWM_1_SetReloadMode
 1063              		.code	16
 1064              		.thumb_func
 1065              		.type	TCPWM_1_SetReloadMode, %function
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 46


 1066              	TCPWM_1_SetReloadMode:
 1067              	.LFB29:
1128:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1068              		.loc 1 1128 0
 1069              		.cfi_startproc
 1070              	.LVL66:
 1071 0000 10B5     		push	{r4, lr}
 1072              		.cfi_def_cfa_offset 8
 1073              		.cfi_offset 4, -8
 1074              		.cfi_offset 14, -4
1128:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1075              		.loc 1 1128 0
 1076 0002 041C     		mov	r4, r0
1131:Generated_Source\PSoC4/TCPWM_1.c **** 
 1077              		.loc 1 1131 0
 1078 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1079              	.LVL67:
1133:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_RELOAD_SHIFT));
 1080              		.loc 1 1133 0
 1081 0008 3021     		mov	r1, #48
 1082 000a 054B     		ldr	r3, .L83
1137:Generated_Source\PSoC4/TCPWM_1.c **** 
 1083              		.loc 1 1137 0
 1084              		@ sp needed
1133:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_RELOAD_SHIFT));
 1085              		.loc 1 1133 0
 1086 000c 1A68     		ldr	r2, [r3]
 1087 000e 8A43     		bic	r2, r1
 1088 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/TCPWM_1.c **** 
 1089              		.loc 1 1134 0
 1090 0012 1968     		ldr	r1, [r3]
 1091 0014 2201     		lsl	r2, r4, #4
 1092 0016 0A43     		orr	r2, r1
 1093 0018 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC4/TCPWM_1.c **** }
 1094              		.loc 1 1136 0
 1095 001a FFF7FEFF 		bl	CyExitCriticalSection
 1096              	.LVL68:
 1097              	.LVL69:
1137:Generated_Source\PSoC4/TCPWM_1.c **** 
 1098              		.loc 1 1137 0
 1099 001e 10BD     		pop	{r4, pc}
 1100              	.L84:
 1101              		.align	2
 1102              	.L83:
 1103 0020 E4010540 		.word	1074069988
 1104              		.cfi_endproc
 1105              	.LFE29:
 1106              		.size	TCPWM_1_SetReloadMode, .-TCPWM_1_SetReloadMode
 1107              		.section	.text.TCPWM_1_SetStartMode,"ax",%progbits
 1108              		.align	1
 1109              		.global	TCPWM_1_SetStartMode
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	TCPWM_1_SetStartMode, %function
 1113              	TCPWM_1_SetStartMode:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 47


 1114              	.LFB30:
1161:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1115              		.loc 1 1161 0
 1116              		.cfi_startproc
 1117              	.LVL70:
 1118 0000 10B5     		push	{r4, lr}
 1119              		.cfi_def_cfa_offset 8
 1120              		.cfi_offset 4, -8
 1121              		.cfi_offset 14, -4
1161:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1122              		.loc 1 1161 0
 1123 0002 041C     		mov	r4, r0
1164:Generated_Source\PSoC4/TCPWM_1.c **** 
 1124              		.loc 1 1164 0
 1125 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1126              	.LVL71:
1166:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_START_SHIFT));
 1127              		.loc 1 1166 0
 1128 0008 054B     		ldr	r3, .L86
 1129 000a 064A     		ldr	r2, .L86+4
 1130 000c 1968     		ldr	r1, [r3]
1170:Generated_Source\PSoC4/TCPWM_1.c **** 
 1131              		.loc 1 1170 0
 1132              		@ sp needed
1166:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_START_SHIFT));
 1133              		.loc 1 1166 0
 1134 000e 0A40     		and	r2, r1
 1135 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/TCPWM_1.c **** 
 1136              		.loc 1 1167 0
 1137 0012 1968     		ldr	r1, [r3]
 1138 0014 2202     		lsl	r2, r4, #8
 1139 0016 0A43     		orr	r2, r1
 1140 0018 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC4/TCPWM_1.c **** }
 1141              		.loc 1 1169 0
 1142 001a FFF7FEFF 		bl	CyExitCriticalSection
 1143              	.LVL72:
 1144              	.LVL73:
1170:Generated_Source\PSoC4/TCPWM_1.c **** 
 1145              		.loc 1 1170 0
 1146 001e 10BD     		pop	{r4, pc}
 1147              	.L87:
 1148              		.align	2
 1149              	.L86:
 1150 0020 E4010540 		.word	1074069988
 1151 0024 FFFCFFFF 		.word	-769
 1152              		.cfi_endproc
 1153              	.LFE30:
 1154              		.size	TCPWM_1_SetStartMode, .-TCPWM_1_SetStartMode
 1155              		.section	.text.TCPWM_1_SetStopMode,"ax",%progbits
 1156              		.align	1
 1157              		.global	TCPWM_1_SetStopMode
 1158              		.code	16
 1159              		.thumb_func
 1160              		.type	TCPWM_1_SetStopMode, %function
 1161              	TCPWM_1_SetStopMode:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 48


 1162              	.LFB31:
1193:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1163              		.loc 1 1193 0
 1164              		.cfi_startproc
 1165              	.LVL74:
 1166 0000 10B5     		push	{r4, lr}
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 4, -8
 1169              		.cfi_offset 14, -4
1193:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1170              		.loc 1 1193 0
 1171 0002 041C     		mov	r4, r0
1196:Generated_Source\PSoC4/TCPWM_1.c **** 
 1172              		.loc 1 1196 0
 1173 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1174              	.LVL75:
1198:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_STOP_SHIFT));
 1175              		.loc 1 1198 0
 1176 0008 C021     		mov	r1, #192
 1177 000a 054B     		ldr	r3, .L89
1202:Generated_Source\PSoC4/TCPWM_1.c **** 
 1178              		.loc 1 1202 0
 1179              		@ sp needed
1198:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_STOP_SHIFT));
 1180              		.loc 1 1198 0
 1181 000c 1A68     		ldr	r2, [r3]
 1182 000e 8A43     		bic	r2, r1
 1183 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/TCPWM_1.c **** 
 1184              		.loc 1 1199 0
 1185 0012 1968     		ldr	r1, [r3]
 1186 0014 A201     		lsl	r2, r4, #6
 1187 0016 0A43     		orr	r2, r1
 1188 0018 1A60     		str	r2, [r3]
1201:Generated_Source\PSoC4/TCPWM_1.c **** }
 1189              		.loc 1 1201 0
 1190 001a FFF7FEFF 		bl	CyExitCriticalSection
 1191              	.LVL76:
 1192              	.LVL77:
1202:Generated_Source\PSoC4/TCPWM_1.c **** 
 1193              		.loc 1 1202 0
 1194 001e 10BD     		pop	{r4, pc}
 1195              	.L90:
 1196              		.align	2
 1197              	.L89:
 1198 0020 E4010540 		.word	1074069988
 1199              		.cfi_endproc
 1200              	.LFE31:
 1201              		.size	TCPWM_1_SetStopMode, .-TCPWM_1_SetStopMode
 1202              		.section	.text.TCPWM_1_SetCountMode,"ax",%progbits
 1203              		.align	1
 1204              		.global	TCPWM_1_SetCountMode
 1205              		.code	16
 1206              		.thumb_func
 1207              		.type	TCPWM_1_SetCountMode, %function
 1208              	TCPWM_1_SetCountMode:
 1209              	.LFB32:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 49


1226:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1210              		.loc 1 1226 0
 1211              		.cfi_startproc
 1212              	.LVL78:
 1213 0000 10B5     		push	{r4, lr}
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 4, -8
 1216              		.cfi_offset 14, -4
1226:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1217              		.loc 1 1226 0
 1218 0002 041C     		mov	r4, r0
1229:Generated_Source\PSoC4/TCPWM_1.c **** 
 1219              		.loc 1 1229 0
 1220 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1221              	.LVL79:
1231:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_COUNT_SHIFT));
 1222              		.loc 1 1231 0
 1223 0008 0C21     		mov	r1, #12
 1224 000a 054B     		ldr	r3, .L92
1235:Generated_Source\PSoC4/TCPWM_1.c **** 
 1225              		.loc 1 1235 0
 1226              		@ sp needed
1231:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_COUNT_SHIFT));
 1227              		.loc 1 1231 0
 1228 000c 1A68     		ldr	r2, [r3]
 1229 000e 8A43     		bic	r2, r1
 1230 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/TCPWM_1.c **** 
 1231              		.loc 1 1232 0
 1232 0012 1968     		ldr	r1, [r3]
 1233 0014 A200     		lsl	r2, r4, #2
 1234 0016 0A43     		orr	r2, r1
 1235 0018 1A60     		str	r2, [r3]
1234:Generated_Source\PSoC4/TCPWM_1.c **** }
 1236              		.loc 1 1234 0
 1237 001a FFF7FEFF 		bl	CyExitCriticalSection
 1238              	.LVL80:
 1239              	.LVL81:
1235:Generated_Source\PSoC4/TCPWM_1.c **** 
 1240              		.loc 1 1235 0
 1241 001e 10BD     		pop	{r4, pc}
 1242              	.L93:
 1243              		.align	2
 1244              	.L92:
 1245 0020 E4010540 		.word	1074069988
 1246              		.cfi_endproc
 1247              	.LFE32:
 1248              		.size	TCPWM_1_SetCountMode, .-TCPWM_1_SetCountMode
 1249              		.section	.text.TCPWM_1_TriggerCommand,"ax",%progbits
 1250              		.align	1
 1251              		.global	TCPWM_1_TriggerCommand
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	TCPWM_1_TriggerCommand, %function
 1255              	TCPWM_1_TriggerCommand:
 1256              	.LFB33:
1266:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 50


 1257              		.loc 1 1266 0
 1258              		.cfi_startproc
 1259              	.LVL82:
 1260 0000 38B5     		push	{r3, r4, r5, lr}
 1261              		.cfi_def_cfa_offset 16
 1262              		.cfi_offset 3, -16
 1263              		.cfi_offset 4, -12
 1264              		.cfi_offset 5, -8
 1265              		.cfi_offset 14, -4
1266:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1266              		.loc 1 1266 0
 1267 0002 0D1C     		mov	r5, r1
 1268 0004 041C     		mov	r4, r0
1271:Generated_Source\PSoC4/TCPWM_1.c **** 
 1269              		.loc 1 1271 0
 1270 0006 AC40     		lsl	r4, r4, r5
1269:Generated_Source\PSoC4/TCPWM_1.c **** 
 1271              		.loc 1 1269 0
 1272 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1273              	.LVL83:
1271:Generated_Source\PSoC4/TCPWM_1.c **** 
 1274              		.loc 1 1271 0
 1275 000c 024B     		ldr	r3, .L95
1274:Generated_Source\PSoC4/TCPWM_1.c **** 
 1276              		.loc 1 1274 0
 1277              		@ sp needed
1271:Generated_Source\PSoC4/TCPWM_1.c **** 
 1278              		.loc 1 1271 0
 1279 000e 1C60     		str	r4, [r3]
1273:Generated_Source\PSoC4/TCPWM_1.c **** }
 1280              		.loc 1 1273 0
 1281 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1282              	.LVL84:
 1283              	.LVL85:
1274:Generated_Source\PSoC4/TCPWM_1.c **** 
 1284              		.loc 1 1274 0
 1285 0014 38BD     		pop	{r3, r4, r5, pc}
 1286              	.L96:
 1287 0016 C046     		.align	2
 1288              	.L95:
 1289 0018 08000540 		.word	1074069512
 1290              		.cfi_endproc
 1291              	.LFE33:
 1292              		.size	TCPWM_1_TriggerCommand, .-TCPWM_1_TriggerCommand
 1293              		.section	.text.TCPWM_1_Enable,"ax",%progbits
 1294              		.align	1
 1295              		.global	TCPWM_1_Enable
 1296              		.code	16
 1297              		.thumb_func
 1298              		.type	TCPWM_1_Enable, %function
 1299              	TCPWM_1_Enable:
 1300              	.LFB1:
 178:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 1301              		.loc 1 178 0
 1302              		.cfi_startproc
 1303 0000 10B5     		push	{r4, lr}
 1304              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 51


 1305              		.cfi_offset 4, -8
 1306              		.cfi_offset 14, -4
 182:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1307              		.loc 1 182 0
 1308 0002 0824     		mov	r4, #8
 181:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG |= TCPWM_1_MASK;
 1309              		.loc 1 181 0
 1310 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1311              	.LVL86:
 182:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1312              		.loc 1 182 0
 1313 0008 054A     		ldr	r2, .L98
 203:Generated_Source\PSoC4/TCPWM_1.c **** 
 1314              		.loc 1 203 0
 1315              		@ sp needed
 182:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1316              		.loc 1 182 0
 1317 000a 1368     		ldr	r3, [r2]
 1318 000c 2343     		orr	r3, r4
 1319 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/TCPWM_1.c **** 
 1320              		.loc 1 183 0
 1321 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1322              	.LVL87:
 188:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT) */
 1323              		.loc 1 188 0
 1324 0014 201C     		mov	r0, r4
 1325 0016 1821     		mov	r1, #24
 1326 0018 FFF7FEFF 		bl	TCPWM_1_TriggerCommand
 1327              	.LVL88:
 203:Generated_Source\PSoC4/TCPWM_1.c **** 
 1328              		.loc 1 203 0
 1329 001c 10BD     		pop	{r4, pc}
 1330              	.L99:
 1331 001e C046     		.align	2
 1332              	.L98:
 1333 0020 00000540 		.word	1074069504
 1334              		.cfi_endproc
 1335              	.LFE1:
 1336              		.size	TCPWM_1_Enable, .-TCPWM_1_Enable
 1337              		.section	.text.TCPWM_1_Start,"ax",%progbits
 1338              		.align	1
 1339              		.global	TCPWM_1_Start
 1340              		.code	16
 1341              		.thumb_func
 1342              		.type	TCPWM_1_Start, %function
 1343              	TCPWM_1_Start:
 1344              	.LFB2:
 231:Generated_Source\PSoC4/TCPWM_1.c ****     if (0u == TCPWM_1_initVar)
 1345              		.loc 1 231 0
 1346              		.cfi_startproc
 1347 0000 10B5     		push	{r4, lr}
 1348              		.cfi_def_cfa_offset 8
 1349              		.cfi_offset 4, -8
 1350              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/TCPWM_1.c ****     {
 1351              		.loc 1 232 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 52


 1352 0002 054C     		ldr	r4, .L103
 1353 0004 2378     		ldrb	r3, [r4]
 1354 0006 002B     		cmp	r3, #0
 1355 0008 03D1     		bne	.L101
 234:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_initVar = 1u;
 1356              		.loc 1 234 0
 1357 000a FFF7FEFF 		bl	TCPWM_1_Init
 1358              	.LVL89:
 235:Generated_Source\PSoC4/TCPWM_1.c ****     }
 1359              		.loc 1 235 0
 1360 000e 0123     		mov	r3, #1
 1361 0010 2370     		strb	r3, [r4]
 1362              	.L101:
 238:Generated_Source\PSoC4/TCPWM_1.c **** }
 1363              		.loc 1 238 0
 1364 0012 FFF7FEFF 		bl	TCPWM_1_Enable
 1365              	.LVL90:
 239:Generated_Source\PSoC4/TCPWM_1.c **** 
 1366              		.loc 1 239 0
 1367              		@ sp needed
 1368 0016 10BD     		pop	{r4, pc}
 1369              	.L104:
 1370              		.align	2
 1371              	.L103:
 1372 0018 00000000 		.word	.LANCHOR0
 1373              		.cfi_endproc
 1374              	.LFE2:
 1375              		.size	TCPWM_1_Start, .-TCPWM_1_Start
 1376              		.section	.text.TCPWM_1_ReadStatus,"ax",%progbits
 1377              		.align	1
 1378              		.global	TCPWM_1_ReadStatus
 1379              		.code	16
 1380              		.thumb_func
 1381              		.type	TCPWM_1_ReadStatus, %function
 1382              	TCPWM_1_ReadStatus:
 1383              	.LFB34:
1295:Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1384              		.loc 1 1295 0
 1385              		.cfi_startproc
1296:Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1386              		.loc 1 1296 0
 1387 0000 034A     		ldr	r2, .L106
1298:Generated_Source\PSoC4/TCPWM_1.c **** 
 1388              		.loc 1 1298 0
 1389              		@ sp needed
1296:Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1390              		.loc 1 1296 0
 1391 0002 1368     		ldr	r3, [r2]
1297:Generated_Source\PSoC4/TCPWM_1.c **** }
 1392              		.loc 1 1297 0
 1393 0004 1068     		ldr	r0, [r2]
 1394 0006 0122     		mov	r2, #1
1296:Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1395              		.loc 1 1296 0
 1396 0008 9B0F     		lsr	r3, r3, #30
1297:Generated_Source\PSoC4/TCPWM_1.c **** }
 1397              		.loc 1 1297 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 53


 1398 000a 1040     		and	r0, r2
1296:Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1399              		.loc 1 1296 0
 1400 000c 1843     		orr	r0, r3
1298:Generated_Source\PSoC4/TCPWM_1.c **** 
 1401              		.loc 1 1298 0
 1402 000e 7047     		bx	lr
 1403              	.L107:
 1404              		.align	2
 1405              	.L106:
 1406 0010 C4010540 		.word	1074069956
 1407              		.cfi_endproc
 1408              	.LFE34:
 1409              		.size	TCPWM_1_ReadStatus, .-TCPWM_1_ReadStatus
 1410              		.section	.text.TCPWM_1_SetInterruptMode,"ax",%progbits
 1411              		.align	1
 1412              		.global	TCPWM_1_SetInterruptMode
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	TCPWM_1_SetInterruptMode, %function
 1416              	TCPWM_1_SetInterruptMode:
 1417              	.LFB35:
1320:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1418              		.loc 1 1320 0
 1419              		.cfi_startproc
 1420              	.LVL91:
 1421              		.loc 1 1321 0
 1422 0000 014B     		ldr	r3, .L109
1322:Generated_Source\PSoC4/TCPWM_1.c **** }
 1423              		.loc 1 1322 0
 1424              		@ sp needed
1321:Generated_Source\PSoC4/TCPWM_1.c **** }
 1425              		.loc 1 1321 0
 1426 0002 1860     		str	r0, [r3]
 1427              		.loc 1 1322 0
 1428 0004 7047     		bx	lr
 1429              	.L110:
 1430 0006 C046     		.align	2
 1431              	.L109:
 1432 0008 F8010540 		.word	1074070008
 1433              		.cfi_endproc
 1434              	.LFE35:
 1435              		.size	TCPWM_1_SetInterruptMode, .-TCPWM_1_SetInterruptMode
 1436              		.section	.text.TCPWM_1_GetInterruptSourceMasked,"ax",%progbits
 1437              		.align	1
 1438              		.global	TCPWM_1_GetInterruptSourceMasked
 1439              		.code	16
 1440              		.thumb_func
 1441              		.type	TCPWM_1_GetInterruptSourceMasked, %function
 1442              	TCPWM_1_GetInterruptSourceMasked:
 1443              	.LFB36:
1323:Generated_Source\PSoC4/TCPWM_1.c **** 
1324:Generated_Source\PSoC4/TCPWM_1.c **** 
1325:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1328:Generated_Source\PSoC4/TCPWM_1.c **** *
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 54


1329:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1330:Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/TCPWM_1.c **** *
1332:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1333:Generated_Source\PSoC4/TCPWM_1.c **** *   None
1334:Generated_Source\PSoC4/TCPWM_1.c **** *
1335:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1336:Generated_Source\PSoC4/TCPWM_1.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1338:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/TCPWM_1.c **** *
1341:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/TCPWM_1.c **** {
 1444              		.loc 1 1343 0
 1445              		.cfi_startproc
1344:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_MASKED_REG);
 1446              		.loc 1 1344 0
 1447 0000 014B     		ldr	r3, .L112
1345:Generated_Source\PSoC4/TCPWM_1.c **** }
 1448              		.loc 1 1345 0
 1449              		@ sp needed
1344:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_MASKED_REG);
 1450              		.loc 1 1344 0
 1451 0002 1868     		ldr	r0, [r3]
 1452              		.loc 1 1345 0
 1453 0004 7047     		bx	lr
 1454              	.L113:
 1455 0006 C046     		.align	2
 1456              	.L112:
 1457 0008 FC010540 		.word	1074070012
 1458              		.cfi_endproc
 1459              	.LFE36:
 1460              		.size	TCPWM_1_GetInterruptSourceMasked, .-TCPWM_1_GetInterruptSourceMasked
 1461              		.section	.text.TCPWM_1_GetInterruptSource,"ax",%progbits
 1462              		.align	1
 1463              		.global	TCPWM_1_GetInterruptSource
 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	TCPWM_1_GetInterruptSource, %function
 1467              	TCPWM_1_GetInterruptSource:
 1468              	.LFB37:
1346:Generated_Source\PSoC4/TCPWM_1.c **** 
1347:Generated_Source\PSoC4/TCPWM_1.c **** 
1348:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSource
1350:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1351:Generated_Source\PSoC4/TCPWM_1.c **** *
1352:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1353:Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/TCPWM_1.c **** *
1355:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1356:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1357:Generated_Source\PSoC4/TCPWM_1.c **** *
1358:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1359:Generated_Source\PSoC4/TCPWM_1.c **** *  Interrupt request value
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 55


1360:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1361:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/TCPWM_1.c **** *
1364:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSource(void)
1366:Generated_Source\PSoC4/TCPWM_1.c **** {
 1469              		.loc 1 1366 0
 1470              		.cfi_startproc
1367:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_REQ_REG);
 1471              		.loc 1 1367 0
 1472 0000 014B     		ldr	r3, .L115
1368:Generated_Source\PSoC4/TCPWM_1.c **** }
 1473              		.loc 1 1368 0
 1474              		@ sp needed
1367:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_REQ_REG);
 1475              		.loc 1 1367 0
 1476 0002 1868     		ldr	r0, [r3]
 1477              		.loc 1 1368 0
 1478 0004 7047     		bx	lr
 1479              	.L116:
 1480 0006 C046     		.align	2
 1481              	.L115:
 1482 0008 F0010540 		.word	1074070000
 1483              		.cfi_endproc
 1484              	.LFE37:
 1485              		.size	TCPWM_1_GetInterruptSource, .-TCPWM_1_GetInterruptSource
 1486              		.section	.text.TCPWM_1_ClearInterrupt,"ax",%progbits
 1487              		.align	1
 1488              		.global	TCPWM_1_ClearInterrupt
 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	TCPWM_1_ClearInterrupt, %function
 1492              	TCPWM_1_ClearInterrupt:
 1493              	.LFB38:
1369:Generated_Source\PSoC4/TCPWM_1.c **** 
1370:Generated_Source\PSoC4/TCPWM_1.c **** 
1371:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ClearInterrupt
1373:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1374:Generated_Source\PSoC4/TCPWM_1.c **** *
1375:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1376:Generated_Source\PSoC4/TCPWM_1.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/TCPWM_1.c **** *
1378:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1379:Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1381:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/TCPWM_1.c **** *
1384:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1385:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1386:Generated_Source\PSoC4/TCPWM_1.c **** *
1387:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/TCPWM_1.c **** {
 1494              		.loc 1 1389 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 56


 1495              		.cfi_startproc
 1496              	.LVL92:
1390:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_REQ_REG = interruptMask;
 1497              		.loc 1 1390 0
 1498 0000 014B     		ldr	r3, .L118
1391:Generated_Source\PSoC4/TCPWM_1.c **** }
 1499              		.loc 1 1391 0
 1500              		@ sp needed
1390:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_REQ_REG = interruptMask;
 1501              		.loc 1 1390 0
 1502 0002 1860     		str	r0, [r3]
 1503              		.loc 1 1391 0
 1504 0004 7047     		bx	lr
 1505              	.L119:
 1506 0006 C046     		.align	2
 1507              	.L118:
 1508 0008 F0010540 		.word	1074070000
 1509              		.cfi_endproc
 1510              	.LFE38:
 1511              		.size	TCPWM_1_ClearInterrupt, .-TCPWM_1_ClearInterrupt
 1512              		.section	.text.TCPWM_1_SetInterrupt,"ax",%progbits
 1513              		.align	1
 1514              		.global	TCPWM_1_SetInterrupt
 1515              		.code	16
 1516              		.thumb_func
 1517              		.type	TCPWM_1_SetInterrupt, %function
 1518              	TCPWM_1_SetInterrupt:
 1519              	.LFB39:
1392:Generated_Source\PSoC4/TCPWM_1.c **** 
1393:Generated_Source\PSoC4/TCPWM_1.c **** 
1394:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterrupt
1396:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1397:Generated_Source\PSoC4/TCPWM_1.c **** *
1398:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1399:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/TCPWM_1.c **** *
1401:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1402:Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1404:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/TCPWM_1.c **** *
1407:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1408:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1409:Generated_Source\PSoC4/TCPWM_1.c **** *
1410:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/TCPWM_1.c **** {
 1520              		.loc 1 1412 0
 1521              		.cfi_startproc
 1522              	.LVL93:
1413:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_SET_REG = interruptMask;
 1523              		.loc 1 1413 0
 1524 0000 014B     		ldr	r3, .L121
1414:Generated_Source\PSoC4/TCPWM_1.c **** }
 1525              		.loc 1 1414 0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 57


 1526              		@ sp needed
1413:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_SET_REG = interruptMask;
 1527              		.loc 1 1413 0
 1528 0002 1860     		str	r0, [r3]
 1529              		.loc 1 1414 0
 1530 0004 7047     		bx	lr
 1531              	.L122:
 1532 0006 C046     		.align	2
 1533              	.L121:
 1534 0008 F4010540 		.word	1074070004
 1535              		.cfi_endproc
 1536              	.LFE39:
 1537              		.size	TCPWM_1_SetInterrupt, .-TCPWM_1_SetInterrupt
 1538              		.global	TCPWM_1_initVar
 1539              		.bss
 1540              		.set	.LANCHOR0,. + 0
 1541              		.type	TCPWM_1_initVar, %object
 1542              		.size	TCPWM_1_initVar, 1
 1543              	TCPWM_1_initVar:
 1544 0000 00       		.space	1
 1545              		.text
 1546              	.Letext0:
 1547              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1548              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1549              		.section	.debug_info,"",%progbits
 1550              	.Ldebug_info0:
 1551 0000 5B090000 		.4byte	0x95b
 1552 0004 0400     		.2byte	0x4
 1553 0006 00000000 		.4byte	.Ldebug_abbrev0
 1554 000a 04       		.byte	0x4
 1555 000b 01       		.uleb128 0x1
 1556 000c 06000000 		.4byte	.LASF76
 1557 0010 01       		.byte	0x1
 1558 0011 9B030000 		.4byte	.LASF77
 1559 0015 C2040000 		.4byte	.LASF78
 1560 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1561 001d 00000000 		.4byte	0
 1562 0021 00000000 		.4byte	.Ldebug_line0
 1563 0025 02       		.uleb128 0x2
 1564 0026 01       		.byte	0x1
 1565 0027 06       		.byte	0x6
 1566 0028 66010000 		.4byte	.LASF0
 1567 002c 02       		.uleb128 0x2
 1568 002d 01       		.byte	0x1
 1569 002e 08       		.byte	0x8
 1570 002f E7030000 		.4byte	.LASF1
 1571 0033 02       		.uleb128 0x2
 1572 0034 02       		.byte	0x2
 1573 0035 05       		.byte	0x5
 1574 0036 36040000 		.4byte	.LASF2
 1575 003a 02       		.uleb128 0x2
 1576 003b 02       		.byte	0x2
 1577 003c 07       		.byte	0x7
 1578 003d 9F020000 		.4byte	.LASF3
 1579 0041 02       		.uleb128 0x2
 1580 0042 04       		.byte	0x4
 1581 0043 05       		.byte	0x5
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 58


 1582 0044 8D010000 		.4byte	.LASF4
 1583 0048 02       		.uleb128 0x2
 1584 0049 04       		.byte	0x4
 1585 004a 07       		.byte	0x7
 1586 004b 6D020000 		.4byte	.LASF5
 1587 004f 02       		.uleb128 0x2
 1588 0050 08       		.byte	0x8
 1589 0051 05       		.byte	0x5
 1590 0052 58010000 		.4byte	.LASF6
 1591 0056 02       		.uleb128 0x2
 1592 0057 08       		.byte	0x8
 1593 0058 07       		.byte	0x7
 1594 0059 0D010000 		.4byte	.LASF7
 1595 005d 03       		.uleb128 0x3
 1596 005e 04       		.byte	0x4
 1597 005f 05       		.byte	0x5
 1598 0060 696E7400 		.ascii	"int\000"
 1599 0064 02       		.uleb128 0x2
 1600 0065 04       		.byte	0x4
 1601 0066 07       		.byte	0x7
 1602 0067 41020000 		.4byte	.LASF8
 1603 006b 04       		.uleb128 0x4
 1604 006c AE010000 		.4byte	.LASF9
 1605 0070 02       		.byte	0x2
 1606 0071 B901     		.2byte	0x1b9
 1607 0073 2C000000 		.4byte	0x2c
 1608 0077 04       		.uleb128 0x4
 1609 0078 D2010000 		.4byte	.LASF10
 1610 007c 02       		.byte	0x2
 1611 007d BB01     		.2byte	0x1bb
 1612 007f 48000000 		.4byte	0x48
 1613 0083 02       		.uleb128 0x2
 1614 0084 04       		.byte	0x4
 1615 0085 04       		.byte	0x4
 1616 0086 8B030000 		.4byte	.LASF11
 1617 008a 02       		.uleb128 0x2
 1618 008b 08       		.byte	0x8
 1619 008c 04       		.byte	0x4
 1620 008d CB010000 		.4byte	.LASF12
 1621 0091 02       		.uleb128 0x2
 1622 0092 01       		.byte	0x1
 1623 0093 08       		.byte	0x8
 1624 0094 A4040000 		.4byte	.LASF13
 1625 0098 04       		.uleb128 0x4
 1626 0099 E8020000 		.4byte	.LASF14
 1627 009d 02       		.byte	0x2
 1628 009e 6502     		.2byte	0x265
 1629 00a0 A4000000 		.4byte	0xa4
 1630 00a4 05       		.uleb128 0x5
 1631 00a5 77000000 		.4byte	0x77
 1632 00a9 02       		.uleb128 0x2
 1633 00aa 04       		.byte	0x4
 1634 00ab 07       		.byte	0x7
 1635 00ac 11030000 		.4byte	.LASF15
 1636 00b0 06       		.uleb128 0x6
 1637 00b1 F8000000 		.4byte	.LASF16
 1638 00b5 01       		.byte	0x1
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 59


 1639 00b6 6702     		.2byte	0x267
 1640 00b8 01       		.byte	0x1
 1641 00b9 CA000000 		.4byte	0xca
 1642 00bd 07       		.uleb128 0x7
 1643 00be 00000000 		.4byte	.LASF18
 1644 00c2 01       		.byte	0x1
 1645 00c3 6702     		.2byte	0x267
 1646 00c5 77000000 		.4byte	0x77
 1647 00c9 00       		.byte	0
 1648 00ca 06       		.uleb128 0x6
 1649 00cb 64050000 		.4byte	.LASF17
 1650 00cf 01       		.byte	0x1
 1651 00d0 2705     		.2byte	0x527
 1652 00d2 01       		.byte	0x1
 1653 00d3 E4000000 		.4byte	0xe4
 1654 00d7 07       		.uleb128 0x7
 1655 00d8 56040000 		.4byte	.LASF19
 1656 00dc 01       		.byte	0x1
 1657 00dd 2705     		.2byte	0x527
 1658 00df 77000000 		.4byte	0x77
 1659 00e3 00       		.byte	0
 1660 00e4 06       		.uleb128 0x6
 1661 00e5 BC030000 		.4byte	.LASF20
 1662 00e9 01       		.byte	0x1
 1663 00ea B502     		.2byte	0x2b5
 1664 00ec 01       		.byte	0x1
 1665 00ed FE000000 		.4byte	0xfe
 1666 00f1 07       		.uleb128 0x7
 1667 00f2 5D050000 		.4byte	.LASF21
 1668 00f6 01       		.byte	0x1
 1669 00f7 B502     		.2byte	0x2b5
 1670 00f9 77000000 		.4byte	0x77
 1671 00fd 00       		.byte	0
 1672 00fe 06       		.uleb128 0x6
 1673 00ff F5030000 		.4byte	.LASF22
 1674 0103 01       		.byte	0x1
 1675 0104 5103     		.2byte	0x351
 1676 0106 01       		.byte	0x1
 1677 0107 18010000 		.4byte	0x118
 1678 010b 07       		.uleb128 0x7
 1679 010c 60030000 		.4byte	.LASF23
 1680 0110 01       		.byte	0x1
 1681 0111 5103     		.2byte	0x351
 1682 0113 77000000 		.4byte	0x77
 1683 0117 00       		.byte	0
 1684 0118 08       		.uleb128 0x8
 1685 0119 29030000 		.4byte	.LASF24
 1686 011d 01       		.byte	0x1
 1687 011e 26       		.byte	0x26
 1688 011f 00000000 		.4byte	.LFB0
 1689 0123 54000000 		.4byte	.LFE0-.LFB0
 1690 0127 01       		.uleb128 0x1
 1691 0128 9C       		.byte	0x9c
 1692 0129 92010000 		.4byte	0x192
 1693 012d 09       		.uleb128 0x9
 1694 012e B0000000 		.4byte	0xb0
 1695 0132 0A000000 		.4byte	.LBB10
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 60


 1696 0136 00000000 		.4byte	.Ldebug_ranges0+0
 1697 013a 01       		.byte	0x1
 1698 013b 67       		.byte	0x67
 1699 013c 47010000 		.4byte	0x147
 1700 0140 0A       		.uleb128 0xa
 1701 0141 BD000000 		.4byte	0xbd
 1702 0145 00       		.byte	0
 1703 0146 00       		.byte	0
 1704 0147 0B       		.uleb128 0xb
 1705 0148 CA000000 		.4byte	0xca
 1706 014c 1E000000 		.4byte	.LBB14
 1707 0150 06000000 		.4byte	.LBE14-.LBB14
 1708 0154 01       		.byte	0x1
 1709 0155 77       		.byte	0x77
 1710 0156 61010000 		.4byte	0x161
 1711 015a 0A       		.uleb128 0xa
 1712 015b D7000000 		.4byte	0xd7
 1713 015f 01       		.byte	0x1
 1714 0160 00       		.byte	0
 1715 0161 0B       		.uleb128 0xb
 1716 0162 E4000000 		.4byte	0xe4
 1717 0166 2A000000 		.4byte	.LBB16
 1718 016a 06000000 		.4byte	.LBE16-.LBB16
 1719 016e 01       		.byte	0x1
 1720 016f 92       		.byte	0x92
 1721 0170 7B010000 		.4byte	0x17b
 1722 0174 0A       		.uleb128 0xa
 1723 0175 F1000000 		.4byte	0xf1
 1724 0179 FF       		.byte	0xff
 1725 017a 00       		.byte	0
 1726 017b 0C       		.uleb128 0xc
 1727 017c FE000000 		.4byte	0xfe
 1728 0180 30000000 		.4byte	.LBB18
 1729 0184 04000000 		.4byte	.LBE18-.LBB18
 1730 0188 01       		.byte	0x1
 1731 0189 93       		.byte	0x93
 1732 018a 0A       		.uleb128 0xa
 1733 018b 0B010000 		.4byte	0x10b
 1734 018f 00       		.byte	0
 1735 0190 00       		.byte	0
 1736 0191 00       		.byte	0
 1737 0192 0D       		.uleb128 0xd
 1738 0193 34010000 		.4byte	.LASF25
 1739 0197 01       		.byte	0x1
 1740 0198 0001     		.2byte	0x100
 1741 019a 00000000 		.4byte	.LFB3
 1742 019e 1C000000 		.4byte	.LFE3-.LFB3
 1743 01a2 01       		.uleb128 0x1
 1744 01a3 9C       		.byte	0x9c
 1745 01a4 CB010000 		.4byte	0x1cb
 1746 01a8 0E       		.uleb128 0xe
 1747 01a9 88050000 		.4byte	.LASF27
 1748 01ad 01       		.byte	0x1
 1749 01ae 0201     		.2byte	0x102
 1750 01b0 6B000000 		.4byte	0x6b
 1751 01b4 00000000 		.4byte	.LLST0
 1752 01b8 0F       		.uleb128 0xf
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 61


 1753 01b9 06000000 		.4byte	.LVL4
 1754 01bd 46090000 		.4byte	0x946
 1755 01c1 0F       		.uleb128 0xf
 1756 01c2 14000000 		.4byte	.LVL5
 1757 01c6 51090000 		.4byte	0x951
 1758 01ca 00       		.byte	0
 1759 01cb 0D       		.uleb128 0xd
 1760 01cc C1000000 		.4byte	.LASF26
 1761 01d0 01       		.byte	0x1
 1762 01d1 2501     		.2byte	0x125
 1763 01d3 00000000 		.4byte	.LFB4
 1764 01d7 28000000 		.4byte	.LFE4-.LFB4
 1765 01db 01       		.uleb128 0x1
 1766 01dc 9C       		.byte	0x9c
 1767 01dd 14020000 		.4byte	0x214
 1768 01e1 10       		.uleb128 0x10
 1769 01e2 A9040000 		.4byte	.LASF29
 1770 01e6 01       		.byte	0x1
 1771 01e7 2501     		.2byte	0x125
 1772 01e9 77000000 		.4byte	0x77
 1773 01ed 13000000 		.4byte	.LLST1
 1774 01f1 0E       		.uleb128 0xe
 1775 01f2 88050000 		.4byte	.LASF27
 1776 01f6 01       		.byte	0x1
 1777 01f7 2701     		.2byte	0x127
 1778 01f9 6B000000 		.4byte	0x6b
 1779 01fd 3F000000 		.4byte	.LLST2
 1780 0201 0F       		.uleb128 0xf
 1781 0202 08000000 		.4byte	.LVL7
 1782 0206 46090000 		.4byte	0x946
 1783 020a 0F       		.uleb128 0xf
 1784 020b 1C000000 		.4byte	.LVL8
 1785 020f 51090000 		.4byte	0x951
 1786 0213 00       		.byte	0
 1787 0214 0D       		.uleb128 0xd
 1788 0215 D1000000 		.4byte	.LASF28
 1789 0219 01       		.byte	0x1
 1790 021a 4601     		.2byte	0x146
 1791 021c 00000000 		.4byte	.LFB5
 1792 0220 28000000 		.4byte	.LFE5-.LFB5
 1793 0224 01       		.uleb128 0x1
 1794 0225 9C       		.byte	0x9c
 1795 0226 5D020000 		.4byte	0x25d
 1796 022a 10       		.uleb128 0x10
 1797 022b 86010000 		.4byte	.LASF30
 1798 022f 01       		.byte	0x1
 1799 0230 4601     		.2byte	0x146
 1800 0232 77000000 		.4byte	0x77
 1801 0236 52000000 		.4byte	.LLST3
 1802 023a 0E       		.uleb128 0xe
 1803 023b 88050000 		.4byte	.LASF27
 1804 023f 01       		.byte	0x1
 1805 0240 4801     		.2byte	0x148
 1806 0242 6B000000 		.4byte	0x6b
 1807 0246 7E000000 		.4byte	.LLST4
 1808 024a 0F       		.uleb128 0xf
 1809 024b 08000000 		.4byte	.LVL11
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 62


 1810 024f 46090000 		.4byte	0x946
 1811 0253 0F       		.uleb128 0xf
 1812 0254 1C000000 		.4byte	.LVL12
 1813 0258 51090000 		.4byte	0x951
 1814 025c 00       		.byte	0
 1815 025d 0D       		.uleb128 0xd
 1816 025e E3000000 		.4byte	.LASF31
 1817 0262 01       		.byte	0x1
 1818 0263 6B01     		.2byte	0x16b
 1819 0265 00000000 		.4byte	.LFB6
 1820 0269 28000000 		.4byte	.LFE6-.LFB6
 1821 026d 01       		.uleb128 0x1
 1822 026e 9C       		.byte	0x9c
 1823 026f A6020000 		.4byte	0x2a6
 1824 0273 10       		.uleb128 0x10
 1825 0274 91030000 		.4byte	.LASF32
 1826 0278 01       		.byte	0x1
 1827 0279 6B01     		.2byte	0x16b
 1828 027b 77000000 		.4byte	0x77
 1829 027f 91000000 		.4byte	.LLST5
 1830 0283 0E       		.uleb128 0xe
 1831 0284 88050000 		.4byte	.LASF27
 1832 0288 01       		.byte	0x1
 1833 0289 6D01     		.2byte	0x16d
 1834 028b 6B000000 		.4byte	0x6b
 1835 028f BD000000 		.4byte	.LLST6
 1836 0293 0F       		.uleb128 0xf
 1837 0294 08000000 		.4byte	.LVL15
 1838 0298 46090000 		.4byte	0x946
 1839 029c 0F       		.uleb128 0xf
 1840 029d 1C000000 		.4byte	.LVL16
 1841 02a1 51090000 		.4byte	0x951
 1842 02a5 00       		.byte	0
 1843 02a6 0D       		.uleb128 0xd
 1844 02a7 D5020000 		.4byte	.LASF33
 1845 02ab 01       		.byte	0x1
 1846 02ac 8B01     		.2byte	0x18b
 1847 02ae 00000000 		.4byte	.LFB7
 1848 02b2 2C000000 		.4byte	.LFE7-.LFB7
 1849 02b6 01       		.uleb128 0x1
 1850 02b7 9C       		.byte	0x9c
 1851 02b8 EF020000 		.4byte	0x2ef
 1852 02bc 10       		.uleb128 0x10
 1853 02bd B2020000 		.4byte	.LASF34
 1854 02c1 01       		.byte	0x1
 1855 02c2 8B01     		.2byte	0x18b
 1856 02c4 77000000 		.4byte	0x77
 1857 02c8 D0000000 		.4byte	.LLST7
 1858 02cc 0E       		.uleb128 0xe
 1859 02cd 88050000 		.4byte	.LASF27
 1860 02d1 01       		.byte	0x1
 1861 02d2 8D01     		.2byte	0x18d
 1862 02d4 6B000000 		.4byte	0x6b
 1863 02d8 FC000000 		.4byte	.LLST8
 1864 02dc 0F       		.uleb128 0xf
 1865 02dd 08000000 		.4byte	.LVL19
 1866 02e1 46090000 		.4byte	0x946
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 63


 1867 02e5 0F       		.uleb128 0xf
 1868 02e6 22000000 		.4byte	.LVL20
 1869 02ea 51090000 		.4byte	0x951
 1870 02ee 00       		.byte	0
 1871 02ef 0D       		.uleb128 0xd
 1872 02f0 B0050000 		.4byte	.LASF35
 1873 02f4 01       		.byte	0x1
 1874 02f5 C101     		.2byte	0x1c1
 1875 02f7 00000000 		.4byte	.LFB8
 1876 02fb 10000000 		.4byte	.LFE8-.LFB8
 1877 02ff 01       		.uleb128 0x1
 1878 0300 9C       		.byte	0x9c
 1879 0301 16030000 		.4byte	0x316
 1880 0305 10       		.uleb128 0x10
 1881 0306 7F020000 		.4byte	.LASF36
 1882 030a 01       		.byte	0x1
 1883 030b C101     		.2byte	0x1c1
 1884 030d 77000000 		.4byte	0x77
 1885 0311 0F010000 		.4byte	.LLST9
 1886 0315 00       		.byte	0
 1887 0316 0D       		.uleb128 0xd
 1888 0317 3A050000 		.4byte	.LASF37
 1889 031b 01       		.byte	0x1
 1890 031c E501     		.2byte	0x1e5
 1891 031e 00000000 		.4byte	.LFB9
 1892 0322 28000000 		.4byte	.LFE9-.LFB9
 1893 0326 01       		.uleb128 0x1
 1894 0327 9C       		.byte	0x9c
 1895 0328 5F030000 		.4byte	0x35f
 1896 032c 10       		.uleb128 0x10
 1897 032d 1A030000 		.4byte	.LASF38
 1898 0331 01       		.byte	0x1
 1899 0332 E501     		.2byte	0x1e5
 1900 0334 77000000 		.4byte	0x77
 1901 0338 30010000 		.4byte	.LLST10
 1902 033c 0E       		.uleb128 0xe
 1903 033d 88050000 		.4byte	.LASF27
 1904 0341 01       		.byte	0x1
 1905 0342 E701     		.2byte	0x1e7
 1906 0344 6B000000 		.4byte	0x6b
 1907 0348 5C010000 		.4byte	.LLST11
 1908 034c 0F       		.uleb128 0xf
 1909 034d 08000000 		.4byte	.LVL25
 1910 0351 46090000 		.4byte	0x946
 1911 0355 0F       		.uleb128 0xf
 1912 0356 22000000 		.4byte	.LVL26
 1913 035a 51090000 		.4byte	0x951
 1914 035e 00       		.byte	0
 1915 035f 0D       		.uleb128 0xd
 1916 0360 EA010000 		.4byte	.LASF39
 1917 0364 01       		.byte	0x1
 1918 0365 0702     		.2byte	0x207
 1919 0367 00000000 		.4byte	.LFB10
 1920 036b 28000000 		.4byte	.LFE10-.LFB10
 1921 036f 01       		.uleb128 0x1
 1922 0370 9C       		.byte	0x9c
 1923 0371 A8030000 		.4byte	0x3a8
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 64


 1924 0375 10       		.uleb128 0x10
 1925 0376 0A040000 		.4byte	.LASF40
 1926 037a 01       		.byte	0x1
 1927 037b 0702     		.2byte	0x207
 1928 037d 77000000 		.4byte	0x77
 1929 0381 6F010000 		.4byte	.LLST12
 1930 0385 0E       		.uleb128 0xe
 1931 0386 88050000 		.4byte	.LASF27
 1932 038a 01       		.byte	0x1
 1933 038b 0902     		.2byte	0x209
 1934 038d 6B000000 		.4byte	0x6b
 1935 0391 9B010000 		.4byte	.LLST13
 1936 0395 0F       		.uleb128 0xf
 1937 0396 08000000 		.4byte	.LVL29
 1938 039a 46090000 		.4byte	0x946
 1939 039e 0F       		.uleb128 0xf
 1940 039f 22000000 		.4byte	.LVL30
 1941 03a3 51090000 		.4byte	0x951
 1942 03a7 00       		.byte	0
 1943 03a8 0D       		.uleb128 0xd
 1944 03a9 36030000 		.4byte	.LASF41
 1945 03ad 01       		.byte	0x1
 1946 03ae 2802     		.2byte	0x228
 1947 03b0 00000000 		.4byte	.LFB11
 1948 03b4 2C000000 		.4byte	.LFE11-.LFB11
 1949 03b8 01       		.uleb128 0x1
 1950 03b9 9C       		.byte	0x9c
 1951 03ba F1030000 		.4byte	0x3f1
 1952 03be 10       		.uleb128 0x10
 1953 03bf 17020000 		.4byte	.LASF42
 1954 03c3 01       		.byte	0x1
 1955 03c4 2802     		.2byte	0x228
 1956 03c6 77000000 		.4byte	0x77
 1957 03ca AE010000 		.4byte	.LLST14
 1958 03ce 0E       		.uleb128 0xe
 1959 03cf 88050000 		.4byte	.LASF27
 1960 03d3 01       		.byte	0x1
 1961 03d4 2A02     		.2byte	0x22a
 1962 03d6 6B000000 		.4byte	0x6b
 1963 03da DA010000 		.4byte	.LLST15
 1964 03de 0F       		.uleb128 0xf
 1965 03df 08000000 		.4byte	.LVL33
 1966 03e3 46090000 		.4byte	0x946
 1967 03e7 0F       		.uleb128 0xf
 1968 03e8 20000000 		.4byte	.LVL35
 1969 03ec 51090000 		.4byte	0x951
 1970 03f0 00       		.byte	0
 1971 03f1 0D       		.uleb128 0xd
 1972 03f2 C3050000 		.4byte	.LASF43
 1973 03f6 01       		.byte	0x1
 1974 03f7 4902     		.2byte	0x249
 1975 03f9 00000000 		.4byte	.LFB12
 1976 03fd 28000000 		.4byte	.LFE12-.LFB12
 1977 0401 01       		.uleb128 0x1
 1978 0402 9C       		.byte	0x9c
 1979 0403 3A040000 		.4byte	0x43a
 1980 0407 10       		.uleb128 0x10
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 65


 1981 0408 E5010000 		.4byte	.LASF44
 1982 040c 01       		.byte	0x1
 1983 040d 4902     		.2byte	0x249
 1984 040f 77000000 		.4byte	0x77
 1985 0413 ED010000 		.4byte	.LLST16
 1986 0417 0E       		.uleb128 0xe
 1987 0418 88050000 		.4byte	.LASF27
 1988 041c 01       		.byte	0x1
 1989 041d 4B02     		.2byte	0x24b
 1990 041f 6B000000 		.4byte	0x6b
 1991 0423 19020000 		.4byte	.LLST17
 1992 0427 0F       		.uleb128 0xf
 1993 0428 08000000 		.4byte	.LVL37
 1994 042c 46090000 		.4byte	0x946
 1995 0430 0F       		.uleb128 0xf
 1996 0431 1C000000 		.4byte	.LVL38
 1997 0435 51090000 		.4byte	0x951
 1998 0439 00       		.byte	0
 1999 043a 11       		.uleb128 0x11
 2000 043b B0000000 		.4byte	0xb0
 2001 043f 00000000 		.4byte	.LFB13
 2002 0443 0C000000 		.4byte	.LFE13-.LFB13
 2003 0447 01       		.uleb128 0x1
 2004 0448 9C       		.byte	0x9c
 2005 0449 57040000 		.4byte	0x457
 2006 044d 12       		.uleb128 0x12
 2007 044e BD000000 		.4byte	0xbd
 2008 0452 2C020000 		.4byte	.LLST18
 2009 0456 00       		.byte	0
 2010 0457 13       		.uleb128 0x13
 2011 0458 03020000 		.4byte	.LASF47
 2012 045c 01       		.byte	0x1
 2013 045d 7B02     		.2byte	0x27b
 2014 045f 77000000 		.4byte	0x77
 2015 0463 00000000 		.4byte	.LFB14
 2016 0467 0C000000 		.4byte	.LFE14-.LFB14
 2017 046b 01       		.uleb128 0x1
 2018 046c 9C       		.byte	0x9c
 2019 046d 0D       		.uleb128 0xd
 2020 046e 99050000 		.4byte	.LASF45
 2021 0472 01       		.byte	0x1
 2022 0473 9802     		.2byte	0x298
 2023 0475 00000000 		.4byte	.LFB15
 2024 0479 28000000 		.4byte	.LFE15-.LFB15
 2025 047d 01       		.uleb128 0x1
 2026 047e 9C       		.byte	0x9c
 2027 047f B6040000 		.4byte	0x4b6
 2028 0483 10       		.uleb128 0x10
 2029 0484 51050000 		.4byte	.LASF46
 2030 0488 01       		.byte	0x1
 2031 0489 9802     		.2byte	0x298
 2032 048b 77000000 		.4byte	0x77
 2033 048f 4D020000 		.4byte	.LLST19
 2034 0493 0E       		.uleb128 0xe
 2035 0494 88050000 		.4byte	.LASF27
 2036 0498 01       		.byte	0x1
 2037 0499 9A02     		.2byte	0x29a
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 66


 2038 049b 6B000000 		.4byte	0x6b
 2039 049f 79020000 		.4byte	.LLST20
 2040 04a3 0F       		.uleb128 0xf
 2041 04a4 08000000 		.4byte	.LVL43
 2042 04a8 46090000 		.4byte	0x946
 2043 04ac 0F       		.uleb128 0xf
 2044 04ad 1C000000 		.4byte	.LVL44
 2045 04b1 51090000 		.4byte	0x951
 2046 04b5 00       		.byte	0
 2047 04b6 11       		.uleb128 0x11
 2048 04b7 E4000000 		.4byte	0xe4
 2049 04bb 00000000 		.4byte	.LFB16
 2050 04bf 0C000000 		.4byte	.LFE16-.LFB16
 2051 04c3 01       		.uleb128 0x1
 2052 04c4 9C       		.byte	0x9c
 2053 04c5 D3040000 		.4byte	0x4d3
 2054 04c9 12       		.uleb128 0x12
 2055 04ca F1000000 		.4byte	0xf1
 2056 04ce 8C020000 		.4byte	.LLST21
 2057 04d2 00       		.byte	0
 2058 04d3 13       		.uleb128 0x13
 2059 04d4 7B040000 		.4byte	.LASF48
 2060 04d8 01       		.byte	0x1
 2061 04d9 C902     		.2byte	0x2c9
 2062 04db 77000000 		.4byte	0x77
 2063 04df 00000000 		.4byte	.LFB17
 2064 04e3 0C000000 		.4byte	.LFE17-.LFB17
 2065 04e7 01       		.uleb128 0x1
 2066 04e8 9C       		.byte	0x9c
 2067 04e9 0D       		.uleb128 0xd
 2068 04ea 41010000 		.4byte	.LASF49
 2069 04ee 01       		.byte	0x1
 2070 04ef E302     		.2byte	0x2e3
 2071 04f1 00000000 		.4byte	.LFB18
 2072 04f5 24000000 		.4byte	.LFE18-.LFB18
 2073 04f9 01       		.uleb128 0x1
 2074 04fa 9C       		.byte	0x9c
 2075 04fb 32050000 		.4byte	0x532
 2076 04ff 10       		.uleb128 0x10
 2077 0500 03060000 		.4byte	.LASF50
 2078 0504 01       		.byte	0x1
 2079 0505 E302     		.2byte	0x2e3
 2080 0507 77000000 		.4byte	0x77
 2081 050b AD020000 		.4byte	.LLST22
 2082 050f 0E       		.uleb128 0xe
 2083 0510 88050000 		.4byte	.LASF27
 2084 0514 01       		.byte	0x1
 2085 0515 E502     		.2byte	0x2e5
 2086 0517 6B000000 		.4byte	0x6b
 2087 051b D9020000 		.4byte	.LLST23
 2088 051f 0F       		.uleb128 0xf
 2089 0520 08000000 		.4byte	.LVL49
 2090 0524 46090000 		.4byte	0x946
 2091 0528 0F       		.uleb128 0xf
 2092 0529 1E000000 		.4byte	.LVL50
 2093 052d 51090000 		.4byte	0x951
 2094 0531 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 67


 2095 0532 0D       		.uleb128 0xd
 2096 0533 D0030000 		.4byte	.LASF51
 2097 0537 01       		.byte	0x1
 2098 0538 FE02     		.2byte	0x2fe
 2099 053a 00000000 		.4byte	.LFB19
 2100 053e 0C000000 		.4byte	.LFE19-.LFB19
 2101 0542 01       		.uleb128 0x1
 2102 0543 9C       		.byte	0x9c
 2103 0544 59050000 		.4byte	0x559
 2104 0548 10       		.uleb128 0x10
 2105 0549 0E060000 		.4byte	.LASF52
 2106 054d 01       		.byte	0x1
 2107 054e FE02     		.2byte	0x2fe
 2108 0550 77000000 		.4byte	0x77
 2109 0554 EC020000 		.4byte	.LLST24
 2110 0558 00       		.byte	0
 2111 0559 13       		.uleb128 0x13
 2112 055a 40040000 		.4byte	.LASF53
 2113 055e 01       		.byte	0x1
 2114 055f 1203     		.2byte	0x312
 2115 0561 77000000 		.4byte	0x77
 2116 0565 00000000 		.4byte	.LFB20
 2117 0569 0C000000 		.4byte	.LFE20-.LFB20
 2118 056d 01       		.uleb128 0x1
 2119 056e 9C       		.byte	0x9c
 2120 056f 0D       		.uleb128 0xd
 2121 0570 8E040000 		.4byte	.LASF54
 2122 0574 01       		.byte	0x1
 2123 0575 2C03     		.2byte	0x32c
 2124 0577 00000000 		.4byte	.LFB21
 2125 057b 28000000 		.4byte	.LFE21-.LFB21
 2126 057f 01       		.uleb128 0x1
 2127 0580 9C       		.byte	0x9c
 2128 0581 B8050000 		.4byte	0x5b8
 2129 0585 10       		.uleb128 0x10
 2130 0586 03060000 		.4byte	.LASF50
 2131 058a 01       		.byte	0x1
 2132 058b 2C03     		.2byte	0x32c
 2133 058d 77000000 		.4byte	0x77
 2134 0591 0D030000 		.4byte	.LLST25
 2135 0595 0E       		.uleb128 0xe
 2136 0596 88050000 		.4byte	.LASF27
 2137 059a 01       		.byte	0x1
 2138 059b 2E03     		.2byte	0x32e
 2139 059d 6B000000 		.4byte	0x6b
 2140 05a1 39030000 		.4byte	.LLST26
 2141 05a5 0F       		.uleb128 0xf
 2142 05a6 08000000 		.4byte	.LVL55
 2143 05aa 46090000 		.4byte	0x946
 2144 05ae 0F       		.uleb128 0xf
 2145 05af 22000000 		.4byte	.LVL56
 2146 05b3 51090000 		.4byte	0x951
 2147 05b7 00       		.byte	0
 2148 05b8 11       		.uleb128 0x11
 2149 05b9 FE000000 		.4byte	0xfe
 2150 05bd 00000000 		.4byte	.LFB22
 2151 05c1 0C000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 68


 2152 05c5 01       		.uleb128 0x1
 2153 05c6 9C       		.byte	0x9c
 2154 05c7 D5050000 		.4byte	0x5d5
 2155 05cb 12       		.uleb128 0x12
 2156 05cc 0B010000 		.4byte	0x10b
 2157 05d0 4C030000 		.4byte	.LLST27
 2158 05d4 00       		.byte	0
 2159 05d5 13       		.uleb128 0x13
 2160 05d6 72010000 		.4byte	.LASF55
 2161 05da 01       		.byte	0x1
 2162 05db 8403     		.2byte	0x384
 2163 05dd 77000000 		.4byte	0x77
 2164 05e1 00000000 		.4byte	.LFB23
 2165 05e5 0C000000 		.4byte	.LFE23-.LFB23
 2166 05e9 01       		.uleb128 0x1
 2167 05ea 9C       		.byte	0x9c
 2168 05eb 0D       		.uleb128 0xd
 2169 05ec 96010000 		.4byte	.LASF56
 2170 05f0 01       		.byte	0x1
 2171 05f1 BA03     		.2byte	0x3ba
 2172 05f3 00000000 		.4byte	.LFB24
 2173 05f7 0C000000 		.4byte	.LFE24-.LFB24
 2174 05fb 01       		.uleb128 0x1
 2175 05fc 9C       		.byte	0x9c
 2176 05fd 12060000 		.4byte	0x612
 2177 0601 10       		.uleb128 0x10
 2178 0602 7D050000 		.4byte	.LASF57
 2179 0606 01       		.byte	0x1
 2180 0607 BA03     		.2byte	0x3ba
 2181 0609 77000000 		.4byte	0x77
 2182 060d 6D030000 		.4byte	.LLST28
 2183 0611 00       		.byte	0
 2184 0612 13       		.uleb128 0x13
 2185 0613 64040000 		.4byte	.LASF58
 2186 0617 01       		.byte	0x1
 2187 0618 E803     		.2byte	0x3e8
 2188 061a 77000000 		.4byte	0x77
 2189 061e 00000000 		.4byte	.LFB25
 2190 0622 0C000000 		.4byte	.LFE25-.LFB25
 2191 0626 01       		.uleb128 0x1
 2192 0627 9C       		.byte	0x9c
 2193 0628 13       		.uleb128 0x13
 2194 0629 AE040000 		.4byte	.LASF59
 2195 062d 01       		.byte	0x1
 2196 062e 1604     		.2byte	0x416
 2197 0630 77000000 		.4byte	0x77
 2198 0634 00000000 		.4byte	.LFB26
 2199 0638 0C000000 		.4byte	.LFE26-.LFB26
 2200 063c 01       		.uleb128 0x1
 2201 063d 9C       		.byte	0x9c
 2202 063e 13       		.uleb128 0x13
 2203 063f AA000000 		.4byte	.LASF60
 2204 0643 01       		.byte	0x1
 2205 0644 2B04     		.2byte	0x42b
 2206 0646 77000000 		.4byte	0x77
 2207 064a 00000000 		.4byte	.LFB27
 2208 064e 0C000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 69


 2209 0652 01       		.uleb128 0x1
 2210 0653 9C       		.byte	0x9c
 2211 0654 0D       		.uleb128 0xd
 2212 0655 18060000 		.4byte	.LASF61
 2213 0659 01       		.byte	0x1
 2214 065a 4604     		.2byte	0x446
 2215 065c 00000000 		.4byte	.LFB28
 2216 0660 24000000 		.4byte	.LFE28-.LFB28
 2217 0664 01       		.uleb128 0x1
 2218 0665 9C       		.byte	0x9c
 2219 0666 9D060000 		.4byte	0x69d
 2220 066a 10       		.uleb128 0x10
 2221 066b D9010000 		.4byte	.LASF62
 2222 066f 01       		.byte	0x1
 2223 0670 4604     		.2byte	0x446
 2224 0672 77000000 		.4byte	0x77
 2225 0676 8E030000 		.4byte	.LLST29
 2226 067a 0E       		.uleb128 0xe
 2227 067b 88050000 		.4byte	.LASF27
 2228 067f 01       		.byte	0x1
 2229 0680 4804     		.2byte	0x448
 2230 0682 6B000000 		.4byte	0x6b
 2231 0686 BA030000 		.4byte	.LLST30
 2232 068a 0F       		.uleb128 0xf
 2233 068b 08000000 		.4byte	.LVL63
 2234 068f 46090000 		.4byte	0x946
 2235 0693 0F       		.uleb128 0xf
 2236 0694 1C000000 		.4byte	.LVL64
 2237 0698 51090000 		.4byte	0x951
 2238 069c 00       		.byte	0
 2239 069d 0D       		.uleb128 0xd
 2240 069e D8050000 		.4byte	.LASF63
 2241 06a2 01       		.byte	0x1
 2242 06a3 6704     		.2byte	0x467
 2243 06a5 00000000 		.4byte	.LFB29
 2244 06a9 24000000 		.4byte	.LFE29-.LFB29
 2245 06ad 01       		.uleb128 0x1
 2246 06ae 9C       		.byte	0x9c
 2247 06af E6060000 		.4byte	0x6e6
 2248 06b3 10       		.uleb128 0x10
 2249 06b4 D9010000 		.4byte	.LASF62
 2250 06b8 01       		.byte	0x1
 2251 06b9 6704     		.2byte	0x467
 2252 06bb 77000000 		.4byte	0x77
 2253 06bf CD030000 		.4byte	.LLST31
 2254 06c3 0E       		.uleb128 0xe
 2255 06c4 88050000 		.4byte	.LASF27
 2256 06c8 01       		.byte	0x1
 2257 06c9 6904     		.2byte	0x469
 2258 06cb 6B000000 		.4byte	0x6b
 2259 06cf F9030000 		.4byte	.LLST32
 2260 06d3 0F       		.uleb128 0xf
 2261 06d4 08000000 		.4byte	.LVL67
 2262 06d8 46090000 		.4byte	0x946
 2263 06dc 0F       		.uleb128 0xf
 2264 06dd 1E000000 		.4byte	.LVL68
 2265 06e1 51090000 		.4byte	0x951
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 70


 2266 06e5 00       		.byte	0
 2267 06e6 0D       		.uleb128 0xd
 2268 06e7 EE050000 		.4byte	.LASF64
 2269 06eb 01       		.byte	0x1
 2270 06ec 8804     		.2byte	0x488
 2271 06ee 00000000 		.4byte	.LFB30
 2272 06f2 28000000 		.4byte	.LFE30-.LFB30
 2273 06f6 01       		.uleb128 0x1
 2274 06f7 9C       		.byte	0x9c
 2275 06f8 2F070000 		.4byte	0x72f
 2276 06fc 10       		.uleb128 0x10
 2277 06fd D9010000 		.4byte	.LASF62
 2278 0701 01       		.byte	0x1
 2279 0702 8804     		.2byte	0x488
 2280 0704 77000000 		.4byte	0x77
 2281 0708 0C040000 		.4byte	.LLST33
 2282 070c 0E       		.uleb128 0xe
 2283 070d 88050000 		.4byte	.LASF27
 2284 0711 01       		.byte	0x1
 2285 0712 8A04     		.2byte	0x48a
 2286 0714 6B000000 		.4byte	0x6b
 2287 0718 38040000 		.4byte	.LLST34
 2288 071c 0F       		.uleb128 0xf
 2289 071d 08000000 		.4byte	.LVL71
 2290 0721 46090000 		.4byte	0x946
 2291 0725 0F       		.uleb128 0xf
 2292 0726 1E000000 		.4byte	.LVL72
 2293 072a 51090000 		.4byte	0x951
 2294 072e 00       		.byte	0
 2295 072f 0D       		.uleb128 0xd
 2296 0730 EE020000 		.4byte	.LASF65
 2297 0734 01       		.byte	0x1
 2298 0735 A804     		.2byte	0x4a8
 2299 0737 00000000 		.4byte	.LFB31
 2300 073b 24000000 		.4byte	.LFE31-.LFB31
 2301 073f 01       		.uleb128 0x1
 2302 0740 9C       		.byte	0x9c
 2303 0741 78070000 		.4byte	0x778
 2304 0745 10       		.uleb128 0x10
 2305 0746 D9010000 		.4byte	.LASF62
 2306 074a 01       		.byte	0x1
 2307 074b A804     		.2byte	0x4a8
 2308 074d 77000000 		.4byte	0x77
 2309 0751 4B040000 		.4byte	.LLST35
 2310 0755 0E       		.uleb128 0xe
 2311 0756 88050000 		.4byte	.LASF27
 2312 075a 01       		.byte	0x1
 2313 075b AA04     		.2byte	0x4aa
 2314 075d 6B000000 		.4byte	0x6b
 2315 0761 77040000 		.4byte	.LLST36
 2316 0765 0F       		.uleb128 0xf
 2317 0766 08000000 		.4byte	.LVL75
 2318 076a 46090000 		.4byte	0x946
 2319 076e 0F       		.uleb128 0xf
 2320 076f 1E000000 		.4byte	.LVL76
 2321 0773 51090000 		.4byte	0x951
 2322 0777 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 71


 2323 0778 0D       		.uleb128 0xd
 2324 0779 76030000 		.4byte	.LASF66
 2325 077d 01       		.byte	0x1
 2326 077e C904     		.2byte	0x4c9
 2327 0780 00000000 		.4byte	.LFB32
 2328 0784 24000000 		.4byte	.LFE32-.LFB32
 2329 0788 01       		.uleb128 0x1
 2330 0789 9C       		.byte	0x9c
 2331 078a C1070000 		.4byte	0x7c1
 2332 078e 10       		.uleb128 0x10
 2333 078f D9010000 		.4byte	.LASF62
 2334 0793 01       		.byte	0x1
 2335 0794 C904     		.2byte	0x4c9
 2336 0796 77000000 		.4byte	0x77
 2337 079a 8A040000 		.4byte	.LLST37
 2338 079e 0E       		.uleb128 0xe
 2339 079f 88050000 		.4byte	.LASF27
 2340 07a3 01       		.byte	0x1
 2341 07a4 CB04     		.2byte	0x4cb
 2342 07a6 6B000000 		.4byte	0x6b
 2343 07aa B6040000 		.4byte	.LLST38
 2344 07ae 0F       		.uleb128 0xf
 2345 07af 08000000 		.4byte	.LVL79
 2346 07b3 46090000 		.4byte	0x946
 2347 07b7 0F       		.uleb128 0xf
 2348 07b8 1E000000 		.4byte	.LVL80
 2349 07bc 51090000 		.4byte	0x951
 2350 07c0 00       		.byte	0
 2351 07c1 0D       		.uleb128 0xd
 2352 07c2 4E020000 		.4byte	.LASF67
 2353 07c6 01       		.byte	0x1
 2354 07c7 F104     		.2byte	0x4f1
 2355 07c9 00000000 		.4byte	.LFB33
 2356 07cd 1C000000 		.4byte	.LFE33-.LFB33
 2357 07d1 01       		.uleb128 0x1
 2358 07d2 9C       		.byte	0x9c
 2359 07d3 1A080000 		.4byte	0x81a
 2360 07d7 10       		.uleb128 0x10
 2361 07d8 E5010000 		.4byte	.LASF44
 2362 07dc 01       		.byte	0x1
 2363 07dd F104     		.2byte	0x4f1
 2364 07df 77000000 		.4byte	0x77
 2365 07e3 C9040000 		.4byte	.LLST39
 2366 07e7 10       		.uleb128 0x10
 2367 07e8 65020000 		.4byte	.LASF68
 2368 07ec 01       		.byte	0x1
 2369 07ed F104     		.2byte	0x4f1
 2370 07ef 77000000 		.4byte	0x77
 2371 07f3 EA040000 		.4byte	.LLST40
 2372 07f7 0E       		.uleb128 0xe
 2373 07f8 88050000 		.4byte	.LASF27
 2374 07fc 01       		.byte	0x1
 2375 07fd F304     		.2byte	0x4f3
 2376 07ff 6B000000 		.4byte	0x6b
 2377 0803 16050000 		.4byte	.LLST41
 2378 0807 0F       		.uleb128 0xf
 2379 0808 0C000000 		.4byte	.LVL83
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 72


 2380 080c 46090000 		.4byte	0x946
 2381 0810 0F       		.uleb128 0xf
 2382 0811 14000000 		.4byte	.LVL84
 2383 0815 51090000 		.4byte	0x951
 2384 0819 00       		.byte	0
 2385 081a 08       		.uleb128 0x8
 2386 081b 02030000 		.4byte	.LASF69
 2387 081f 01       		.byte	0x1
 2388 0820 B1       		.byte	0xb1
 2389 0821 00000000 		.4byte	.LFB1
 2390 0825 24000000 		.4byte	.LFE1-.LFB1
 2391 0829 01       		.uleb128 0x1
 2392 082a 9C       		.byte	0x9c
 2393 082b 66080000 		.4byte	0x866
 2394 082f 14       		.uleb128 0x14
 2395 0830 88050000 		.4byte	.LASF27
 2396 0834 01       		.byte	0x1
 2397 0835 B3       		.byte	0xb3
 2398 0836 6B000000 		.4byte	0x6b
 2399 083a 29050000 		.4byte	.LLST42
 2400 083e 0F       		.uleb128 0xf
 2401 083f 08000000 		.4byte	.LVL86
 2402 0843 46090000 		.4byte	0x946
 2403 0847 0F       		.uleb128 0xf
 2404 0848 14000000 		.4byte	.LVL87
 2405 084c 51090000 		.4byte	0x951
 2406 0850 15       		.uleb128 0x15
 2407 0851 1C000000 		.4byte	.LVL88
 2408 0855 C1070000 		.4byte	0x7c1
 2409 0859 16       		.uleb128 0x16
 2410 085a 01       		.uleb128 0x1
 2411 085b 51       		.byte	0x51
 2412 085c 01       		.uleb128 0x1
 2413 085d 48       		.byte	0x48
 2414 085e 16       		.uleb128 0x16
 2415 085f 01       		.uleb128 0x1
 2416 0860 50       		.byte	0x50
 2417 0861 02       		.uleb128 0x2
 2418 0862 74       		.byte	0x74
 2419 0863 00       		.sleb128 0
 2420 0864 00       		.byte	0
 2421 0865 00       		.byte	0
 2422 0866 08       		.uleb128 0x8
 2423 0867 68030000 		.4byte	.LASF70
 2424 086b 01       		.byte	0x1
 2425 086c E6       		.byte	0xe6
 2426 086d 00000000 		.4byte	.LFB2
 2427 0871 1C000000 		.4byte	.LFE2-.LFB2
 2428 0875 01       		.uleb128 0x1
 2429 0876 9C       		.byte	0x9c
 2430 0877 8E080000 		.4byte	0x88e
 2431 087b 0F       		.uleb128 0xf
 2432 087c 0E000000 		.4byte	.LVL89
 2433 0880 18010000 		.4byte	0x118
 2434 0884 0F       		.uleb128 0xf
 2435 0885 16000000 		.4byte	.LVL90
 2436 0889 1A080000 		.4byte	0x81a
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 73


 2437 088d 00       		.byte	0
 2438 088e 13       		.uleb128 0x13
 2439 088f 4D030000 		.4byte	.LASF71
 2440 0893 01       		.byte	0x1
 2441 0894 0E05     		.2byte	0x50e
 2442 0896 77000000 		.4byte	0x77
 2443 089a 00000000 		.4byte	.LFB34
 2444 089e 14000000 		.4byte	.LFE34-.LFB34
 2445 08a2 01       		.uleb128 0x1
 2446 08a3 9C       		.byte	0x9c
 2447 08a4 11       		.uleb128 0x11
 2448 08a5 CA000000 		.4byte	0xca
 2449 08a9 00000000 		.4byte	.LFB35
 2450 08ad 0C000000 		.4byte	.LFE35-.LFB35
 2451 08b1 01       		.uleb128 0x1
 2452 08b2 9C       		.byte	0x9c
 2453 08b3 BF080000 		.4byte	0x8bf
 2454 08b7 17       		.uleb128 0x17
 2455 08b8 D7000000 		.4byte	0xd7
 2456 08bc 01       		.uleb128 0x1
 2457 08bd 50       		.byte	0x50
 2458 08be 00       		.byte	0
 2459 08bf 13       		.uleb128 0x13
 2460 08c0 20020000 		.4byte	.LASF72
 2461 08c4 01       		.byte	0x1
 2462 08c5 3E05     		.2byte	0x53e
 2463 08c7 77000000 		.4byte	0x77
 2464 08cb 00000000 		.4byte	.LFB36
 2465 08cf 0C000000 		.4byte	.LFE36-.LFB36
 2466 08d3 01       		.uleb128 0x1
 2467 08d4 9C       		.byte	0x9c
 2468 08d5 13       		.uleb128 0x13
 2469 08d6 1B040000 		.4byte	.LASF73
 2470 08da 01       		.byte	0x1
 2471 08db 5505     		.2byte	0x555
 2472 08dd 77000000 		.4byte	0x77
 2473 08e1 00000000 		.4byte	.LFB37
 2474 08e5 0C000000 		.4byte	.LFE37-.LFB37
 2475 08e9 01       		.uleb128 0x1
 2476 08ea 9C       		.byte	0x9c
 2477 08eb 0D       		.uleb128 0xd
 2478 08ec B4010000 		.4byte	.LASF74
 2479 08f0 01       		.byte	0x1
 2480 08f1 6C05     		.2byte	0x56c
 2481 08f3 00000000 		.4byte	.LFB38
 2482 08f7 0C000000 		.4byte	.LFE38-.LFB38
 2483 08fb 01       		.uleb128 0x1
 2484 08fc 9C       		.byte	0x9c
 2485 08fd 10090000 		.4byte	0x910
 2486 0901 18       		.uleb128 0x18
 2487 0902 56040000 		.4byte	.LASF19
 2488 0906 01       		.byte	0x1
 2489 0907 6C05     		.2byte	0x56c
 2490 0909 77000000 		.4byte	0x77
 2491 090d 01       		.uleb128 0x1
 2492 090e 50       		.byte	0x50
 2493 090f 00       		.byte	0
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 74


 2494 0910 0D       		.uleb128 0xd
 2495 0911 C0020000 		.4byte	.LASF75
 2496 0915 01       		.byte	0x1
 2497 0916 8305     		.2byte	0x583
 2498 0918 00000000 		.4byte	.LFB39
 2499 091c 0C000000 		.4byte	.LFE39-.LFB39
 2500 0920 01       		.uleb128 0x1
 2501 0921 9C       		.byte	0x9c
 2502 0922 35090000 		.4byte	0x935
 2503 0926 18       		.uleb128 0x18
 2504 0927 56040000 		.4byte	.LASF19
 2505 092b 01       		.byte	0x1
 2506 092c 8305     		.2byte	0x583
 2507 092e 77000000 		.4byte	0x77
 2508 0932 01       		.uleb128 0x1
 2509 0933 50       		.byte	0x50
 2510 0934 00       		.byte	0
 2511 0935 19       		.uleb128 0x19
 2512 0936 24010000 		.4byte	.LASF79
 2513 093a 01       		.byte	0x1
 2514 093b 15       		.byte	0x15
 2515 093c 6B000000 		.4byte	0x6b
 2516 0940 05       		.uleb128 0x5
 2517 0941 03       		.byte	0x3
 2518 0942 00000000 		.4byte	TCPWM_1_initVar
 2519 0946 1A       		.uleb128 0x1a
 2520 0947 88020000 		.4byte	.LASF80
 2521 094b 03       		.byte	0x3
 2522 094c E5       		.byte	0xe5
 2523 094d 6B000000 		.4byte	0x6b
 2524 0951 1B       		.uleb128 0x1b
 2525 0952 94000000 		.4byte	.LASF81
 2526 0956 03       		.byte	0x3
 2527 0957 E6       		.byte	0xe6
 2528 0958 1C       		.uleb128 0x1c
 2529 0959 6B000000 		.4byte	0x6b
 2530 095d 00       		.byte	0
 2531 095e 00       		.byte	0
 2532              		.section	.debug_abbrev,"",%progbits
 2533              	.Ldebug_abbrev0:
 2534 0000 01       		.uleb128 0x1
 2535 0001 11       		.uleb128 0x11
 2536 0002 01       		.byte	0x1
 2537 0003 25       		.uleb128 0x25
 2538 0004 0E       		.uleb128 0xe
 2539 0005 13       		.uleb128 0x13
 2540 0006 0B       		.uleb128 0xb
 2541 0007 03       		.uleb128 0x3
 2542 0008 0E       		.uleb128 0xe
 2543 0009 1B       		.uleb128 0x1b
 2544 000a 0E       		.uleb128 0xe
 2545 000b 55       		.uleb128 0x55
 2546 000c 17       		.uleb128 0x17
 2547 000d 11       		.uleb128 0x11
 2548 000e 01       		.uleb128 0x1
 2549 000f 10       		.uleb128 0x10
 2550 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 75


 2551 0011 00       		.byte	0
 2552 0012 00       		.byte	0
 2553 0013 02       		.uleb128 0x2
 2554 0014 24       		.uleb128 0x24
 2555 0015 00       		.byte	0
 2556 0016 0B       		.uleb128 0xb
 2557 0017 0B       		.uleb128 0xb
 2558 0018 3E       		.uleb128 0x3e
 2559 0019 0B       		.uleb128 0xb
 2560 001a 03       		.uleb128 0x3
 2561 001b 0E       		.uleb128 0xe
 2562 001c 00       		.byte	0
 2563 001d 00       		.byte	0
 2564 001e 03       		.uleb128 0x3
 2565 001f 24       		.uleb128 0x24
 2566 0020 00       		.byte	0
 2567 0021 0B       		.uleb128 0xb
 2568 0022 0B       		.uleb128 0xb
 2569 0023 3E       		.uleb128 0x3e
 2570 0024 0B       		.uleb128 0xb
 2571 0025 03       		.uleb128 0x3
 2572 0026 08       		.uleb128 0x8
 2573 0027 00       		.byte	0
 2574 0028 00       		.byte	0
 2575 0029 04       		.uleb128 0x4
 2576 002a 16       		.uleb128 0x16
 2577 002b 00       		.byte	0
 2578 002c 03       		.uleb128 0x3
 2579 002d 0E       		.uleb128 0xe
 2580 002e 3A       		.uleb128 0x3a
 2581 002f 0B       		.uleb128 0xb
 2582 0030 3B       		.uleb128 0x3b
 2583 0031 05       		.uleb128 0x5
 2584 0032 49       		.uleb128 0x49
 2585 0033 13       		.uleb128 0x13
 2586 0034 00       		.byte	0
 2587 0035 00       		.byte	0
 2588 0036 05       		.uleb128 0x5
 2589 0037 35       		.uleb128 0x35
 2590 0038 00       		.byte	0
 2591 0039 49       		.uleb128 0x49
 2592 003a 13       		.uleb128 0x13
 2593 003b 00       		.byte	0
 2594 003c 00       		.byte	0
 2595 003d 06       		.uleb128 0x6
 2596 003e 2E       		.uleb128 0x2e
 2597 003f 01       		.byte	0x1
 2598 0040 3F       		.uleb128 0x3f
 2599 0041 19       		.uleb128 0x19
 2600 0042 03       		.uleb128 0x3
 2601 0043 0E       		.uleb128 0xe
 2602 0044 3A       		.uleb128 0x3a
 2603 0045 0B       		.uleb128 0xb
 2604 0046 3B       		.uleb128 0x3b
 2605 0047 05       		.uleb128 0x5
 2606 0048 27       		.uleb128 0x27
 2607 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 76


 2608 004a 20       		.uleb128 0x20
 2609 004b 0B       		.uleb128 0xb
 2610 004c 01       		.uleb128 0x1
 2611 004d 13       		.uleb128 0x13
 2612 004e 00       		.byte	0
 2613 004f 00       		.byte	0
 2614 0050 07       		.uleb128 0x7
 2615 0051 05       		.uleb128 0x5
 2616 0052 00       		.byte	0
 2617 0053 03       		.uleb128 0x3
 2618 0054 0E       		.uleb128 0xe
 2619 0055 3A       		.uleb128 0x3a
 2620 0056 0B       		.uleb128 0xb
 2621 0057 3B       		.uleb128 0x3b
 2622 0058 05       		.uleb128 0x5
 2623 0059 49       		.uleb128 0x49
 2624 005a 13       		.uleb128 0x13
 2625 005b 00       		.byte	0
 2626 005c 00       		.byte	0
 2627 005d 08       		.uleb128 0x8
 2628 005e 2E       		.uleb128 0x2e
 2629 005f 01       		.byte	0x1
 2630 0060 3F       		.uleb128 0x3f
 2631 0061 19       		.uleb128 0x19
 2632 0062 03       		.uleb128 0x3
 2633 0063 0E       		.uleb128 0xe
 2634 0064 3A       		.uleb128 0x3a
 2635 0065 0B       		.uleb128 0xb
 2636 0066 3B       		.uleb128 0x3b
 2637 0067 0B       		.uleb128 0xb
 2638 0068 27       		.uleb128 0x27
 2639 0069 19       		.uleb128 0x19
 2640 006a 11       		.uleb128 0x11
 2641 006b 01       		.uleb128 0x1
 2642 006c 12       		.uleb128 0x12
 2643 006d 06       		.uleb128 0x6
 2644 006e 40       		.uleb128 0x40
 2645 006f 18       		.uleb128 0x18
 2646 0070 9742     		.uleb128 0x2117
 2647 0072 19       		.uleb128 0x19
 2648 0073 01       		.uleb128 0x1
 2649 0074 13       		.uleb128 0x13
 2650 0075 00       		.byte	0
 2651 0076 00       		.byte	0
 2652 0077 09       		.uleb128 0x9
 2653 0078 1D       		.uleb128 0x1d
 2654 0079 01       		.byte	0x1
 2655 007a 31       		.uleb128 0x31
 2656 007b 13       		.uleb128 0x13
 2657 007c 52       		.uleb128 0x52
 2658 007d 01       		.uleb128 0x1
 2659 007e 55       		.uleb128 0x55
 2660 007f 17       		.uleb128 0x17
 2661 0080 58       		.uleb128 0x58
 2662 0081 0B       		.uleb128 0xb
 2663 0082 59       		.uleb128 0x59
 2664 0083 0B       		.uleb128 0xb
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 77


 2665 0084 01       		.uleb128 0x1
 2666 0085 13       		.uleb128 0x13
 2667 0086 00       		.byte	0
 2668 0087 00       		.byte	0
 2669 0088 0A       		.uleb128 0xa
 2670 0089 05       		.uleb128 0x5
 2671 008a 00       		.byte	0
 2672 008b 31       		.uleb128 0x31
 2673 008c 13       		.uleb128 0x13
 2674 008d 1C       		.uleb128 0x1c
 2675 008e 0B       		.uleb128 0xb
 2676 008f 00       		.byte	0
 2677 0090 00       		.byte	0
 2678 0091 0B       		.uleb128 0xb
 2679 0092 1D       		.uleb128 0x1d
 2680 0093 01       		.byte	0x1
 2681 0094 31       		.uleb128 0x31
 2682 0095 13       		.uleb128 0x13
 2683 0096 11       		.uleb128 0x11
 2684 0097 01       		.uleb128 0x1
 2685 0098 12       		.uleb128 0x12
 2686 0099 06       		.uleb128 0x6
 2687 009a 58       		.uleb128 0x58
 2688 009b 0B       		.uleb128 0xb
 2689 009c 59       		.uleb128 0x59
 2690 009d 0B       		.uleb128 0xb
 2691 009e 01       		.uleb128 0x1
 2692 009f 13       		.uleb128 0x13
 2693 00a0 00       		.byte	0
 2694 00a1 00       		.byte	0
 2695 00a2 0C       		.uleb128 0xc
 2696 00a3 1D       		.uleb128 0x1d
 2697 00a4 01       		.byte	0x1
 2698 00a5 31       		.uleb128 0x31
 2699 00a6 13       		.uleb128 0x13
 2700 00a7 11       		.uleb128 0x11
 2701 00a8 01       		.uleb128 0x1
 2702 00a9 12       		.uleb128 0x12
 2703 00aa 06       		.uleb128 0x6
 2704 00ab 58       		.uleb128 0x58
 2705 00ac 0B       		.uleb128 0xb
 2706 00ad 59       		.uleb128 0x59
 2707 00ae 0B       		.uleb128 0xb
 2708 00af 00       		.byte	0
 2709 00b0 00       		.byte	0
 2710 00b1 0D       		.uleb128 0xd
 2711 00b2 2E       		.uleb128 0x2e
 2712 00b3 01       		.byte	0x1
 2713 00b4 3F       		.uleb128 0x3f
 2714 00b5 19       		.uleb128 0x19
 2715 00b6 03       		.uleb128 0x3
 2716 00b7 0E       		.uleb128 0xe
 2717 00b8 3A       		.uleb128 0x3a
 2718 00b9 0B       		.uleb128 0xb
 2719 00ba 3B       		.uleb128 0x3b
 2720 00bb 05       		.uleb128 0x5
 2721 00bc 27       		.uleb128 0x27
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 78


 2722 00bd 19       		.uleb128 0x19
 2723 00be 11       		.uleb128 0x11
 2724 00bf 01       		.uleb128 0x1
 2725 00c0 12       		.uleb128 0x12
 2726 00c1 06       		.uleb128 0x6
 2727 00c2 40       		.uleb128 0x40
 2728 00c3 18       		.uleb128 0x18
 2729 00c4 9742     		.uleb128 0x2117
 2730 00c6 19       		.uleb128 0x19
 2731 00c7 01       		.uleb128 0x1
 2732 00c8 13       		.uleb128 0x13
 2733 00c9 00       		.byte	0
 2734 00ca 00       		.byte	0
 2735 00cb 0E       		.uleb128 0xe
 2736 00cc 34       		.uleb128 0x34
 2737 00cd 00       		.byte	0
 2738 00ce 03       		.uleb128 0x3
 2739 00cf 0E       		.uleb128 0xe
 2740 00d0 3A       		.uleb128 0x3a
 2741 00d1 0B       		.uleb128 0xb
 2742 00d2 3B       		.uleb128 0x3b
 2743 00d3 05       		.uleb128 0x5
 2744 00d4 49       		.uleb128 0x49
 2745 00d5 13       		.uleb128 0x13
 2746 00d6 02       		.uleb128 0x2
 2747 00d7 17       		.uleb128 0x17
 2748 00d8 00       		.byte	0
 2749 00d9 00       		.byte	0
 2750 00da 0F       		.uleb128 0xf
 2751 00db 898201   		.uleb128 0x4109
 2752 00de 00       		.byte	0
 2753 00df 11       		.uleb128 0x11
 2754 00e0 01       		.uleb128 0x1
 2755 00e1 31       		.uleb128 0x31
 2756 00e2 13       		.uleb128 0x13
 2757 00e3 00       		.byte	0
 2758 00e4 00       		.byte	0
 2759 00e5 10       		.uleb128 0x10
 2760 00e6 05       		.uleb128 0x5
 2761 00e7 00       		.byte	0
 2762 00e8 03       		.uleb128 0x3
 2763 00e9 0E       		.uleb128 0xe
 2764 00ea 3A       		.uleb128 0x3a
 2765 00eb 0B       		.uleb128 0xb
 2766 00ec 3B       		.uleb128 0x3b
 2767 00ed 05       		.uleb128 0x5
 2768 00ee 49       		.uleb128 0x49
 2769 00ef 13       		.uleb128 0x13
 2770 00f0 02       		.uleb128 0x2
 2771 00f1 17       		.uleb128 0x17
 2772 00f2 00       		.byte	0
 2773 00f3 00       		.byte	0
 2774 00f4 11       		.uleb128 0x11
 2775 00f5 2E       		.uleb128 0x2e
 2776 00f6 01       		.byte	0x1
 2777 00f7 31       		.uleb128 0x31
 2778 00f8 13       		.uleb128 0x13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 79


 2779 00f9 11       		.uleb128 0x11
 2780 00fa 01       		.uleb128 0x1
 2781 00fb 12       		.uleb128 0x12
 2782 00fc 06       		.uleb128 0x6
 2783 00fd 40       		.uleb128 0x40
 2784 00fe 18       		.uleb128 0x18
 2785 00ff 9742     		.uleb128 0x2117
 2786 0101 19       		.uleb128 0x19
 2787 0102 01       		.uleb128 0x1
 2788 0103 13       		.uleb128 0x13
 2789 0104 00       		.byte	0
 2790 0105 00       		.byte	0
 2791 0106 12       		.uleb128 0x12
 2792 0107 05       		.uleb128 0x5
 2793 0108 00       		.byte	0
 2794 0109 31       		.uleb128 0x31
 2795 010a 13       		.uleb128 0x13
 2796 010b 02       		.uleb128 0x2
 2797 010c 17       		.uleb128 0x17
 2798 010d 00       		.byte	0
 2799 010e 00       		.byte	0
 2800 010f 13       		.uleb128 0x13
 2801 0110 2E       		.uleb128 0x2e
 2802 0111 00       		.byte	0
 2803 0112 3F       		.uleb128 0x3f
 2804 0113 19       		.uleb128 0x19
 2805 0114 03       		.uleb128 0x3
 2806 0115 0E       		.uleb128 0xe
 2807 0116 3A       		.uleb128 0x3a
 2808 0117 0B       		.uleb128 0xb
 2809 0118 3B       		.uleb128 0x3b
 2810 0119 05       		.uleb128 0x5
 2811 011a 27       		.uleb128 0x27
 2812 011b 19       		.uleb128 0x19
 2813 011c 49       		.uleb128 0x49
 2814 011d 13       		.uleb128 0x13
 2815 011e 11       		.uleb128 0x11
 2816 011f 01       		.uleb128 0x1
 2817 0120 12       		.uleb128 0x12
 2818 0121 06       		.uleb128 0x6
 2819 0122 40       		.uleb128 0x40
 2820 0123 18       		.uleb128 0x18
 2821 0124 9742     		.uleb128 0x2117
 2822 0126 19       		.uleb128 0x19
 2823 0127 00       		.byte	0
 2824 0128 00       		.byte	0
 2825 0129 14       		.uleb128 0x14
 2826 012a 34       		.uleb128 0x34
 2827 012b 00       		.byte	0
 2828 012c 03       		.uleb128 0x3
 2829 012d 0E       		.uleb128 0xe
 2830 012e 3A       		.uleb128 0x3a
 2831 012f 0B       		.uleb128 0xb
 2832 0130 3B       		.uleb128 0x3b
 2833 0131 0B       		.uleb128 0xb
 2834 0132 49       		.uleb128 0x49
 2835 0133 13       		.uleb128 0x13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 80


 2836 0134 02       		.uleb128 0x2
 2837 0135 17       		.uleb128 0x17
 2838 0136 00       		.byte	0
 2839 0137 00       		.byte	0
 2840 0138 15       		.uleb128 0x15
 2841 0139 898201   		.uleb128 0x4109
 2842 013c 01       		.byte	0x1
 2843 013d 11       		.uleb128 0x11
 2844 013e 01       		.uleb128 0x1
 2845 013f 31       		.uleb128 0x31
 2846 0140 13       		.uleb128 0x13
 2847 0141 00       		.byte	0
 2848 0142 00       		.byte	0
 2849 0143 16       		.uleb128 0x16
 2850 0144 8A8201   		.uleb128 0x410a
 2851 0147 00       		.byte	0
 2852 0148 02       		.uleb128 0x2
 2853 0149 18       		.uleb128 0x18
 2854 014a 9142     		.uleb128 0x2111
 2855 014c 18       		.uleb128 0x18
 2856 014d 00       		.byte	0
 2857 014e 00       		.byte	0
 2858 014f 17       		.uleb128 0x17
 2859 0150 05       		.uleb128 0x5
 2860 0151 00       		.byte	0
 2861 0152 31       		.uleb128 0x31
 2862 0153 13       		.uleb128 0x13
 2863 0154 02       		.uleb128 0x2
 2864 0155 18       		.uleb128 0x18
 2865 0156 00       		.byte	0
 2866 0157 00       		.byte	0
 2867 0158 18       		.uleb128 0x18
 2868 0159 05       		.uleb128 0x5
 2869 015a 00       		.byte	0
 2870 015b 03       		.uleb128 0x3
 2871 015c 0E       		.uleb128 0xe
 2872 015d 3A       		.uleb128 0x3a
 2873 015e 0B       		.uleb128 0xb
 2874 015f 3B       		.uleb128 0x3b
 2875 0160 05       		.uleb128 0x5
 2876 0161 49       		.uleb128 0x49
 2877 0162 13       		.uleb128 0x13
 2878 0163 02       		.uleb128 0x2
 2879 0164 18       		.uleb128 0x18
 2880 0165 00       		.byte	0
 2881 0166 00       		.byte	0
 2882 0167 19       		.uleb128 0x19
 2883 0168 34       		.uleb128 0x34
 2884 0169 00       		.byte	0
 2885 016a 03       		.uleb128 0x3
 2886 016b 0E       		.uleb128 0xe
 2887 016c 3A       		.uleb128 0x3a
 2888 016d 0B       		.uleb128 0xb
 2889 016e 3B       		.uleb128 0x3b
 2890 016f 0B       		.uleb128 0xb
 2891 0170 49       		.uleb128 0x49
 2892 0171 13       		.uleb128 0x13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 81


 2893 0172 3F       		.uleb128 0x3f
 2894 0173 19       		.uleb128 0x19
 2895 0174 02       		.uleb128 0x2
 2896 0175 18       		.uleb128 0x18
 2897 0176 00       		.byte	0
 2898 0177 00       		.byte	0
 2899 0178 1A       		.uleb128 0x1a
 2900 0179 2E       		.uleb128 0x2e
 2901 017a 00       		.byte	0
 2902 017b 3F       		.uleb128 0x3f
 2903 017c 19       		.uleb128 0x19
 2904 017d 03       		.uleb128 0x3
 2905 017e 0E       		.uleb128 0xe
 2906 017f 3A       		.uleb128 0x3a
 2907 0180 0B       		.uleb128 0xb
 2908 0181 3B       		.uleb128 0x3b
 2909 0182 0B       		.uleb128 0xb
 2910 0183 27       		.uleb128 0x27
 2911 0184 19       		.uleb128 0x19
 2912 0185 49       		.uleb128 0x49
 2913 0186 13       		.uleb128 0x13
 2914 0187 3C       		.uleb128 0x3c
 2915 0188 19       		.uleb128 0x19
 2916 0189 00       		.byte	0
 2917 018a 00       		.byte	0
 2918 018b 1B       		.uleb128 0x1b
 2919 018c 2E       		.uleb128 0x2e
 2920 018d 01       		.byte	0x1
 2921 018e 3F       		.uleb128 0x3f
 2922 018f 19       		.uleb128 0x19
 2923 0190 03       		.uleb128 0x3
 2924 0191 0E       		.uleb128 0xe
 2925 0192 3A       		.uleb128 0x3a
 2926 0193 0B       		.uleb128 0xb
 2927 0194 3B       		.uleb128 0x3b
 2928 0195 0B       		.uleb128 0xb
 2929 0196 27       		.uleb128 0x27
 2930 0197 19       		.uleb128 0x19
 2931 0198 3C       		.uleb128 0x3c
 2932 0199 19       		.uleb128 0x19
 2933 019a 00       		.byte	0
 2934 019b 00       		.byte	0
 2935 019c 1C       		.uleb128 0x1c
 2936 019d 05       		.uleb128 0x5
 2937 019e 00       		.byte	0
 2938 019f 49       		.uleb128 0x49
 2939 01a0 13       		.uleb128 0x13
 2940 01a1 00       		.byte	0
 2941 01a2 00       		.byte	0
 2942 01a3 00       		.byte	0
 2943              		.section	.debug_loc,"",%progbits
 2944              	.Ldebug_loc0:
 2945              	.LLST0:
 2946 0000 06000000 		.4byte	.LVL4
 2947 0004 13000000 		.4byte	.LVL5-1
 2948 0008 0100     		.2byte	0x1
 2949 000a 50       		.byte	0x50
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 82


 2950 000b 00000000 		.4byte	0
 2951 000f 00000000 		.4byte	0
 2952              	.LLST1:
 2953 0013 00000000 		.4byte	.LVL6
 2954 0017 07000000 		.4byte	.LVL7-1
 2955 001b 0100     		.2byte	0x1
 2956 001d 50       		.byte	0x50
 2957 001e 07000000 		.4byte	.LVL7-1
 2958 0022 1C000000 		.4byte	.LVL9
 2959 0026 0100     		.2byte	0x1
 2960 0028 54       		.byte	0x54
 2961 0029 1C000000 		.4byte	.LVL9
 2962 002d 28000000 		.4byte	.LFE4
 2963 0031 0400     		.2byte	0x4
 2964 0033 F3       		.byte	0xf3
 2965 0034 01       		.uleb128 0x1
 2966 0035 50       		.byte	0x50
 2967 0036 9F       		.byte	0x9f
 2968 0037 00000000 		.4byte	0
 2969 003b 00000000 		.4byte	0
 2970              	.LLST2:
 2971 003f 08000000 		.4byte	.LVL7
 2972 0043 1B000000 		.4byte	.LVL8-1
 2973 0047 0100     		.2byte	0x1
 2974 0049 50       		.byte	0x50
 2975 004a 00000000 		.4byte	0
 2976 004e 00000000 		.4byte	0
 2977              	.LLST3:
 2978 0052 00000000 		.4byte	.LVL10
 2979 0056 07000000 		.4byte	.LVL11-1
 2980 005a 0100     		.2byte	0x1
 2981 005c 50       		.byte	0x50
 2982 005d 07000000 		.4byte	.LVL11-1
 2983 0061 1C000000 		.4byte	.LVL13
 2984 0065 0100     		.2byte	0x1
 2985 0067 54       		.byte	0x54
 2986 0068 1C000000 		.4byte	.LVL13
 2987 006c 28000000 		.4byte	.LFE5
 2988 0070 0400     		.2byte	0x4
 2989 0072 F3       		.byte	0xf3
 2990 0073 01       		.uleb128 0x1
 2991 0074 50       		.byte	0x50
 2992 0075 9F       		.byte	0x9f
 2993 0076 00000000 		.4byte	0
 2994 007a 00000000 		.4byte	0
 2995              	.LLST4:
 2996 007e 08000000 		.4byte	.LVL11
 2997 0082 1B000000 		.4byte	.LVL12-1
 2998 0086 0100     		.2byte	0x1
 2999 0088 50       		.byte	0x50
 3000 0089 00000000 		.4byte	0
 3001 008d 00000000 		.4byte	0
 3002              	.LLST5:
 3003 0091 00000000 		.4byte	.LVL14
 3004 0095 07000000 		.4byte	.LVL15-1
 3005 0099 0100     		.2byte	0x1
 3006 009b 50       		.byte	0x50
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 83


 3007 009c 07000000 		.4byte	.LVL15-1
 3008 00a0 1C000000 		.4byte	.LVL17
 3009 00a4 0100     		.2byte	0x1
 3010 00a6 54       		.byte	0x54
 3011 00a7 1C000000 		.4byte	.LVL17
 3012 00ab 28000000 		.4byte	.LFE6
 3013 00af 0400     		.2byte	0x4
 3014 00b1 F3       		.byte	0xf3
 3015 00b2 01       		.uleb128 0x1
 3016 00b3 50       		.byte	0x50
 3017 00b4 9F       		.byte	0x9f
 3018 00b5 00000000 		.4byte	0
 3019 00b9 00000000 		.4byte	0
 3020              	.LLST6:
 3021 00bd 08000000 		.4byte	.LVL15
 3022 00c1 1B000000 		.4byte	.LVL16-1
 3023 00c5 0100     		.2byte	0x1
 3024 00c7 50       		.byte	0x50
 3025 00c8 00000000 		.4byte	0
 3026 00cc 00000000 		.4byte	0
 3027              	.LLST7:
 3028 00d0 00000000 		.4byte	.LVL18
 3029 00d4 07000000 		.4byte	.LVL19-1
 3030 00d8 0100     		.2byte	0x1
 3031 00da 50       		.byte	0x50
 3032 00db 07000000 		.4byte	.LVL19-1
 3033 00df 22000000 		.4byte	.LVL21
 3034 00e3 0100     		.2byte	0x1
 3035 00e5 54       		.byte	0x54
 3036 00e6 22000000 		.4byte	.LVL21
 3037 00ea 2C000000 		.4byte	.LFE7
 3038 00ee 0400     		.2byte	0x4
 3039 00f0 F3       		.byte	0xf3
 3040 00f1 01       		.uleb128 0x1
 3041 00f2 50       		.byte	0x50
 3042 00f3 9F       		.byte	0x9f
 3043 00f4 00000000 		.4byte	0
 3044 00f8 00000000 		.4byte	0
 3045              	.LLST8:
 3046 00fc 08000000 		.4byte	.LVL19
 3047 0100 21000000 		.4byte	.LVL20-1
 3048 0104 0100     		.2byte	0x1
 3049 0106 50       		.byte	0x50
 3050 0107 00000000 		.4byte	0
 3051 010b 00000000 		.4byte	0
 3052              	.LLST9:
 3053 010f 00000000 		.4byte	.LVL22
 3054 0113 04000000 		.4byte	.LVL23
 3055 0117 0100     		.2byte	0x1
 3056 0119 50       		.byte	0x50
 3057 011a 04000000 		.4byte	.LVL23
 3058 011e 10000000 		.4byte	.LFE8
 3059 0122 0400     		.2byte	0x4
 3060 0124 F3       		.byte	0xf3
 3061 0125 01       		.uleb128 0x1
 3062 0126 50       		.byte	0x50
 3063 0127 9F       		.byte	0x9f
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 84


 3064 0128 00000000 		.4byte	0
 3065 012c 00000000 		.4byte	0
 3066              	.LLST10:
 3067 0130 00000000 		.4byte	.LVL24
 3068 0134 07000000 		.4byte	.LVL25-1
 3069 0138 0100     		.2byte	0x1
 3070 013a 50       		.byte	0x50
 3071 013b 07000000 		.4byte	.LVL25-1
 3072 013f 22000000 		.4byte	.LVL27
 3073 0143 0100     		.2byte	0x1
 3074 0145 54       		.byte	0x54
 3075 0146 22000000 		.4byte	.LVL27
 3076 014a 28000000 		.4byte	.LFE9
 3077 014e 0400     		.2byte	0x4
 3078 0150 F3       		.byte	0xf3
 3079 0151 01       		.uleb128 0x1
 3080 0152 50       		.byte	0x50
 3081 0153 9F       		.byte	0x9f
 3082 0154 00000000 		.4byte	0
 3083 0158 00000000 		.4byte	0
 3084              	.LLST11:
 3085 015c 08000000 		.4byte	.LVL25
 3086 0160 21000000 		.4byte	.LVL26-1
 3087 0164 0100     		.2byte	0x1
 3088 0166 50       		.byte	0x50
 3089 0167 00000000 		.4byte	0
 3090 016b 00000000 		.4byte	0
 3091              	.LLST12:
 3092 016f 00000000 		.4byte	.LVL28
 3093 0173 07000000 		.4byte	.LVL29-1
 3094 0177 0100     		.2byte	0x1
 3095 0179 50       		.byte	0x50
 3096 017a 07000000 		.4byte	.LVL29-1
 3097 017e 22000000 		.4byte	.LVL31
 3098 0182 0100     		.2byte	0x1
 3099 0184 54       		.byte	0x54
 3100 0185 22000000 		.4byte	.LVL31
 3101 0189 28000000 		.4byte	.LFE10
 3102 018d 0400     		.2byte	0x4
 3103 018f F3       		.byte	0xf3
 3104 0190 01       		.uleb128 0x1
 3105 0191 50       		.byte	0x50
 3106 0192 9F       		.byte	0x9f
 3107 0193 00000000 		.4byte	0
 3108 0197 00000000 		.4byte	0
 3109              	.LLST13:
 3110 019b 08000000 		.4byte	.LVL29
 3111 019f 21000000 		.4byte	.LVL30-1
 3112 01a3 0100     		.2byte	0x1
 3113 01a5 50       		.byte	0x50
 3114 01a6 00000000 		.4byte	0
 3115 01aa 00000000 		.4byte	0
 3116              	.LLST14:
 3117 01ae 00000000 		.4byte	.LVL32
 3118 01b2 07000000 		.4byte	.LVL33-1
 3119 01b6 0100     		.2byte	0x1
 3120 01b8 50       		.byte	0x50
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 85


 3121 01b9 07000000 		.4byte	.LVL33-1
 3122 01bd 10000000 		.4byte	.LVL34
 3123 01c1 0100     		.2byte	0x1
 3124 01c3 54       		.byte	0x54
 3125 01c4 10000000 		.4byte	.LVL34
 3126 01c8 2C000000 		.4byte	.LFE11
 3127 01cc 0400     		.2byte	0x4
 3128 01ce F3       		.byte	0xf3
 3129 01cf 01       		.uleb128 0x1
 3130 01d0 50       		.byte	0x50
 3131 01d1 9F       		.byte	0x9f
 3132 01d2 00000000 		.4byte	0
 3133 01d6 00000000 		.4byte	0
 3134              	.LLST15:
 3135 01da 08000000 		.4byte	.LVL33
 3136 01de 1F000000 		.4byte	.LVL35-1
 3137 01e2 0100     		.2byte	0x1
 3138 01e4 50       		.byte	0x50
 3139 01e5 00000000 		.4byte	0
 3140 01e9 00000000 		.4byte	0
 3141              	.LLST16:
 3142 01ed 00000000 		.4byte	.LVL36
 3143 01f1 07000000 		.4byte	.LVL37-1
 3144 01f5 0100     		.2byte	0x1
 3145 01f7 50       		.byte	0x50
 3146 01f8 07000000 		.4byte	.LVL37-1
 3147 01fc 1C000000 		.4byte	.LVL39
 3148 0200 0100     		.2byte	0x1
 3149 0202 54       		.byte	0x54
 3150 0203 1C000000 		.4byte	.LVL39
 3151 0207 28000000 		.4byte	.LFE12
 3152 020b 0400     		.2byte	0x4
 3153 020d F3       		.byte	0xf3
 3154 020e 01       		.uleb128 0x1
 3155 020f 50       		.byte	0x50
 3156 0210 9F       		.byte	0x9f
 3157 0211 00000000 		.4byte	0
 3158 0215 00000000 		.4byte	0
 3159              	.LLST17:
 3160 0219 08000000 		.4byte	.LVL37
 3161 021d 1B000000 		.4byte	.LVL38-1
 3162 0221 0100     		.2byte	0x1
 3163 0223 50       		.byte	0x50
 3164 0224 00000000 		.4byte	0
 3165 0228 00000000 		.4byte	0
 3166              	.LLST18:
 3167 022c 00000000 		.4byte	.LVL40
 3168 0230 04000000 		.4byte	.LVL41
 3169 0234 0100     		.2byte	0x1
 3170 0236 50       		.byte	0x50
 3171 0237 04000000 		.4byte	.LVL41
 3172 023b 0C000000 		.4byte	.LFE13
 3173 023f 0400     		.2byte	0x4
 3174 0241 F3       		.byte	0xf3
 3175 0242 01       		.uleb128 0x1
 3176 0243 50       		.byte	0x50
 3177 0244 9F       		.byte	0x9f
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 86


 3178 0245 00000000 		.4byte	0
 3179 0249 00000000 		.4byte	0
 3180              	.LLST19:
 3181 024d 00000000 		.4byte	.LVL42
 3182 0251 07000000 		.4byte	.LVL43-1
 3183 0255 0100     		.2byte	0x1
 3184 0257 50       		.byte	0x50
 3185 0258 07000000 		.4byte	.LVL43-1
 3186 025c 1C000000 		.4byte	.LVL45
 3187 0260 0100     		.2byte	0x1
 3188 0262 54       		.byte	0x54
 3189 0263 1C000000 		.4byte	.LVL45
 3190 0267 28000000 		.4byte	.LFE15
 3191 026b 0400     		.2byte	0x4
 3192 026d F3       		.byte	0xf3
 3193 026e 01       		.uleb128 0x1
 3194 026f 50       		.byte	0x50
 3195 0270 9F       		.byte	0x9f
 3196 0271 00000000 		.4byte	0
 3197 0275 00000000 		.4byte	0
 3198              	.LLST20:
 3199 0279 08000000 		.4byte	.LVL43
 3200 027d 1B000000 		.4byte	.LVL44-1
 3201 0281 0100     		.2byte	0x1
 3202 0283 50       		.byte	0x50
 3203 0284 00000000 		.4byte	0
 3204 0288 00000000 		.4byte	0
 3205              	.LLST21:
 3206 028c 00000000 		.4byte	.LVL46
 3207 0290 04000000 		.4byte	.LVL47
 3208 0294 0100     		.2byte	0x1
 3209 0296 50       		.byte	0x50
 3210 0297 04000000 		.4byte	.LVL47
 3211 029b 0C000000 		.4byte	.LFE16
 3212 029f 0400     		.2byte	0x4
 3213 02a1 F3       		.byte	0xf3
 3214 02a2 01       		.uleb128 0x1
 3215 02a3 50       		.byte	0x50
 3216 02a4 9F       		.byte	0x9f
 3217 02a5 00000000 		.4byte	0
 3218 02a9 00000000 		.4byte	0
 3219              	.LLST22:
 3220 02ad 00000000 		.4byte	.LVL48
 3221 02b1 07000000 		.4byte	.LVL49-1
 3222 02b5 0100     		.2byte	0x1
 3223 02b7 50       		.byte	0x50
 3224 02b8 07000000 		.4byte	.LVL49-1
 3225 02bc 1E000000 		.4byte	.LVL51
 3226 02c0 0100     		.2byte	0x1
 3227 02c2 54       		.byte	0x54
 3228 02c3 1E000000 		.4byte	.LVL51
 3229 02c7 24000000 		.4byte	.LFE18
 3230 02cb 0400     		.2byte	0x4
 3231 02cd F3       		.byte	0xf3
 3232 02ce 01       		.uleb128 0x1
 3233 02cf 50       		.byte	0x50
 3234 02d0 9F       		.byte	0x9f
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 87


 3235 02d1 00000000 		.4byte	0
 3236 02d5 00000000 		.4byte	0
 3237              	.LLST23:
 3238 02d9 08000000 		.4byte	.LVL49
 3239 02dd 1D000000 		.4byte	.LVL50-1
 3240 02e1 0100     		.2byte	0x1
 3241 02e3 50       		.byte	0x50
 3242 02e4 00000000 		.4byte	0
 3243 02e8 00000000 		.4byte	0
 3244              	.LLST24:
 3245 02ec 00000000 		.4byte	.LVL52
 3246 02f0 04000000 		.4byte	.LVL53
 3247 02f4 0100     		.2byte	0x1
 3248 02f6 50       		.byte	0x50
 3249 02f7 04000000 		.4byte	.LVL53
 3250 02fb 0C000000 		.4byte	.LFE19
 3251 02ff 0400     		.2byte	0x4
 3252 0301 F3       		.byte	0xf3
 3253 0302 01       		.uleb128 0x1
 3254 0303 50       		.byte	0x50
 3255 0304 9F       		.byte	0x9f
 3256 0305 00000000 		.4byte	0
 3257 0309 00000000 		.4byte	0
 3258              	.LLST25:
 3259 030d 00000000 		.4byte	.LVL54
 3260 0311 07000000 		.4byte	.LVL55-1
 3261 0315 0100     		.2byte	0x1
 3262 0317 50       		.byte	0x50
 3263 0318 07000000 		.4byte	.LVL55-1
 3264 031c 22000000 		.4byte	.LVL57
 3265 0320 0100     		.2byte	0x1
 3266 0322 54       		.byte	0x54
 3267 0323 22000000 		.4byte	.LVL57
 3268 0327 28000000 		.4byte	.LFE21
 3269 032b 0400     		.2byte	0x4
 3270 032d F3       		.byte	0xf3
 3271 032e 01       		.uleb128 0x1
 3272 032f 50       		.byte	0x50
 3273 0330 9F       		.byte	0x9f
 3274 0331 00000000 		.4byte	0
 3275 0335 00000000 		.4byte	0
 3276              	.LLST26:
 3277 0339 08000000 		.4byte	.LVL55
 3278 033d 21000000 		.4byte	.LVL56-1
 3279 0341 0100     		.2byte	0x1
 3280 0343 50       		.byte	0x50
 3281 0344 00000000 		.4byte	0
 3282 0348 00000000 		.4byte	0
 3283              	.LLST27:
 3284 034c 00000000 		.4byte	.LVL58
 3285 0350 04000000 		.4byte	.LVL59
 3286 0354 0100     		.2byte	0x1
 3287 0356 50       		.byte	0x50
 3288 0357 04000000 		.4byte	.LVL59
 3289 035b 0C000000 		.4byte	.LFE22
 3290 035f 0400     		.2byte	0x4
 3291 0361 F3       		.byte	0xf3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 88


 3292 0362 01       		.uleb128 0x1
 3293 0363 50       		.byte	0x50
 3294 0364 9F       		.byte	0x9f
 3295 0365 00000000 		.4byte	0
 3296 0369 00000000 		.4byte	0
 3297              	.LLST28:
 3298 036d 00000000 		.4byte	.LVL60
 3299 0371 04000000 		.4byte	.LVL61
 3300 0375 0100     		.2byte	0x1
 3301 0377 50       		.byte	0x50
 3302 0378 04000000 		.4byte	.LVL61
 3303 037c 0C000000 		.4byte	.LFE24
 3304 0380 0400     		.2byte	0x4
 3305 0382 F3       		.byte	0xf3
 3306 0383 01       		.uleb128 0x1
 3307 0384 50       		.byte	0x50
 3308 0385 9F       		.byte	0x9f
 3309 0386 00000000 		.4byte	0
 3310 038a 00000000 		.4byte	0
 3311              	.LLST29:
 3312 038e 00000000 		.4byte	.LVL62
 3313 0392 07000000 		.4byte	.LVL63-1
 3314 0396 0100     		.2byte	0x1
 3315 0398 50       		.byte	0x50
 3316 0399 07000000 		.4byte	.LVL63-1
 3317 039d 1C000000 		.4byte	.LVL65
 3318 03a1 0100     		.2byte	0x1
 3319 03a3 54       		.byte	0x54
 3320 03a4 1C000000 		.4byte	.LVL65
 3321 03a8 24000000 		.4byte	.LFE28
 3322 03ac 0400     		.2byte	0x4
 3323 03ae F3       		.byte	0xf3
 3324 03af 01       		.uleb128 0x1
 3325 03b0 50       		.byte	0x50
 3326 03b1 9F       		.byte	0x9f
 3327 03b2 00000000 		.4byte	0
 3328 03b6 00000000 		.4byte	0
 3329              	.LLST30:
 3330 03ba 08000000 		.4byte	.LVL63
 3331 03be 1B000000 		.4byte	.LVL64-1
 3332 03c2 0100     		.2byte	0x1
 3333 03c4 50       		.byte	0x50
 3334 03c5 00000000 		.4byte	0
 3335 03c9 00000000 		.4byte	0
 3336              	.LLST31:
 3337 03cd 00000000 		.4byte	.LVL66
 3338 03d1 07000000 		.4byte	.LVL67-1
 3339 03d5 0100     		.2byte	0x1
 3340 03d7 50       		.byte	0x50
 3341 03d8 07000000 		.4byte	.LVL67-1
 3342 03dc 1E000000 		.4byte	.LVL69
 3343 03e0 0100     		.2byte	0x1
 3344 03e2 54       		.byte	0x54
 3345 03e3 1E000000 		.4byte	.LVL69
 3346 03e7 24000000 		.4byte	.LFE29
 3347 03eb 0400     		.2byte	0x4
 3348 03ed F3       		.byte	0xf3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 89


 3349 03ee 01       		.uleb128 0x1
 3350 03ef 50       		.byte	0x50
 3351 03f0 9F       		.byte	0x9f
 3352 03f1 00000000 		.4byte	0
 3353 03f5 00000000 		.4byte	0
 3354              	.LLST32:
 3355 03f9 08000000 		.4byte	.LVL67
 3356 03fd 1D000000 		.4byte	.LVL68-1
 3357 0401 0100     		.2byte	0x1
 3358 0403 50       		.byte	0x50
 3359 0404 00000000 		.4byte	0
 3360 0408 00000000 		.4byte	0
 3361              	.LLST33:
 3362 040c 00000000 		.4byte	.LVL70
 3363 0410 07000000 		.4byte	.LVL71-1
 3364 0414 0100     		.2byte	0x1
 3365 0416 50       		.byte	0x50
 3366 0417 07000000 		.4byte	.LVL71-1
 3367 041b 1E000000 		.4byte	.LVL73
 3368 041f 0100     		.2byte	0x1
 3369 0421 54       		.byte	0x54
 3370 0422 1E000000 		.4byte	.LVL73
 3371 0426 28000000 		.4byte	.LFE30
 3372 042a 0400     		.2byte	0x4
 3373 042c F3       		.byte	0xf3
 3374 042d 01       		.uleb128 0x1
 3375 042e 50       		.byte	0x50
 3376 042f 9F       		.byte	0x9f
 3377 0430 00000000 		.4byte	0
 3378 0434 00000000 		.4byte	0
 3379              	.LLST34:
 3380 0438 08000000 		.4byte	.LVL71
 3381 043c 1D000000 		.4byte	.LVL72-1
 3382 0440 0100     		.2byte	0x1
 3383 0442 50       		.byte	0x50
 3384 0443 00000000 		.4byte	0
 3385 0447 00000000 		.4byte	0
 3386              	.LLST35:
 3387 044b 00000000 		.4byte	.LVL74
 3388 044f 07000000 		.4byte	.LVL75-1
 3389 0453 0100     		.2byte	0x1
 3390 0455 50       		.byte	0x50
 3391 0456 07000000 		.4byte	.LVL75-1
 3392 045a 1E000000 		.4byte	.LVL77
 3393 045e 0100     		.2byte	0x1
 3394 0460 54       		.byte	0x54
 3395 0461 1E000000 		.4byte	.LVL77
 3396 0465 24000000 		.4byte	.LFE31
 3397 0469 0400     		.2byte	0x4
 3398 046b F3       		.byte	0xf3
 3399 046c 01       		.uleb128 0x1
 3400 046d 50       		.byte	0x50
 3401 046e 9F       		.byte	0x9f
 3402 046f 00000000 		.4byte	0
 3403 0473 00000000 		.4byte	0
 3404              	.LLST36:
 3405 0477 08000000 		.4byte	.LVL75
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 90


 3406 047b 1D000000 		.4byte	.LVL76-1
 3407 047f 0100     		.2byte	0x1
 3408 0481 50       		.byte	0x50
 3409 0482 00000000 		.4byte	0
 3410 0486 00000000 		.4byte	0
 3411              	.LLST37:
 3412 048a 00000000 		.4byte	.LVL78
 3413 048e 07000000 		.4byte	.LVL79-1
 3414 0492 0100     		.2byte	0x1
 3415 0494 50       		.byte	0x50
 3416 0495 07000000 		.4byte	.LVL79-1
 3417 0499 1E000000 		.4byte	.LVL81
 3418 049d 0100     		.2byte	0x1
 3419 049f 54       		.byte	0x54
 3420 04a0 1E000000 		.4byte	.LVL81
 3421 04a4 24000000 		.4byte	.LFE32
 3422 04a8 0400     		.2byte	0x4
 3423 04aa F3       		.byte	0xf3
 3424 04ab 01       		.uleb128 0x1
 3425 04ac 50       		.byte	0x50
 3426 04ad 9F       		.byte	0x9f
 3427 04ae 00000000 		.4byte	0
 3428 04b2 00000000 		.4byte	0
 3429              	.LLST38:
 3430 04b6 08000000 		.4byte	.LVL79
 3431 04ba 1D000000 		.4byte	.LVL80-1
 3432 04be 0100     		.2byte	0x1
 3433 04c0 50       		.byte	0x50
 3434 04c1 00000000 		.4byte	0
 3435 04c5 00000000 		.4byte	0
 3436              	.LLST39:
 3437 04c9 00000000 		.4byte	.LVL82
 3438 04cd 0B000000 		.4byte	.LVL83-1
 3439 04d1 0100     		.2byte	0x1
 3440 04d3 50       		.byte	0x50
 3441 04d4 0B000000 		.4byte	.LVL83-1
 3442 04d8 1C000000 		.4byte	.LFE33
 3443 04dc 0400     		.2byte	0x4
 3444 04de F3       		.byte	0xf3
 3445 04df 01       		.uleb128 0x1
 3446 04e0 50       		.byte	0x50
 3447 04e1 9F       		.byte	0x9f
 3448 04e2 00000000 		.4byte	0
 3449 04e6 00000000 		.4byte	0
 3450              	.LLST40:
 3451 04ea 00000000 		.4byte	.LVL82
 3452 04ee 0B000000 		.4byte	.LVL83-1
 3453 04f2 0100     		.2byte	0x1
 3454 04f4 51       		.byte	0x51
 3455 04f5 0B000000 		.4byte	.LVL83-1
 3456 04f9 14000000 		.4byte	.LVL85
 3457 04fd 0100     		.2byte	0x1
 3458 04ff 55       		.byte	0x55
 3459 0500 14000000 		.4byte	.LVL85
 3460 0504 1C000000 		.4byte	.LFE33
 3461 0508 0400     		.2byte	0x4
 3462 050a F3       		.byte	0xf3
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 91


 3463 050b 01       		.uleb128 0x1
 3464 050c 51       		.byte	0x51
 3465 050d 9F       		.byte	0x9f
 3466 050e 00000000 		.4byte	0
 3467 0512 00000000 		.4byte	0
 3468              	.LLST41:
 3469 0516 0C000000 		.4byte	.LVL83
 3470 051a 13000000 		.4byte	.LVL84-1
 3471 051e 0100     		.2byte	0x1
 3472 0520 50       		.byte	0x50
 3473 0521 00000000 		.4byte	0
 3474 0525 00000000 		.4byte	0
 3475              	.LLST42:
 3476 0529 08000000 		.4byte	.LVL86
 3477 052d 13000000 		.4byte	.LVL87-1
 3478 0531 0100     		.2byte	0x1
 3479 0533 50       		.byte	0x50
 3480 0534 00000000 		.4byte	0
 3481 0538 00000000 		.4byte	0
 3482              		.section	.debug_aranges,"",%progbits
 3483 0000 54010000 		.4byte	0x154
 3484 0004 0200     		.2byte	0x2
 3485 0006 00000000 		.4byte	.Ldebug_info0
 3486 000a 04       		.byte	0x4
 3487 000b 00       		.byte	0
 3488 000c 0000     		.2byte	0
 3489 000e 0000     		.2byte	0
 3490 0010 00000000 		.4byte	.LFB0
 3491 0014 54000000 		.4byte	.LFE0-.LFB0
 3492 0018 00000000 		.4byte	.LFB3
 3493 001c 1C000000 		.4byte	.LFE3-.LFB3
 3494 0020 00000000 		.4byte	.LFB4
 3495 0024 28000000 		.4byte	.LFE4-.LFB4
 3496 0028 00000000 		.4byte	.LFB5
 3497 002c 28000000 		.4byte	.LFE5-.LFB5
 3498 0030 00000000 		.4byte	.LFB6
 3499 0034 28000000 		.4byte	.LFE6-.LFB6
 3500 0038 00000000 		.4byte	.LFB7
 3501 003c 2C000000 		.4byte	.LFE7-.LFB7
 3502 0040 00000000 		.4byte	.LFB8
 3503 0044 10000000 		.4byte	.LFE8-.LFB8
 3504 0048 00000000 		.4byte	.LFB9
 3505 004c 28000000 		.4byte	.LFE9-.LFB9
 3506 0050 00000000 		.4byte	.LFB10
 3507 0054 28000000 		.4byte	.LFE10-.LFB10
 3508 0058 00000000 		.4byte	.LFB11
 3509 005c 2C000000 		.4byte	.LFE11-.LFB11
 3510 0060 00000000 		.4byte	.LFB12
 3511 0064 28000000 		.4byte	.LFE12-.LFB12
 3512 0068 00000000 		.4byte	.LFB13
 3513 006c 0C000000 		.4byte	.LFE13-.LFB13
 3514 0070 00000000 		.4byte	.LFB14
 3515 0074 0C000000 		.4byte	.LFE14-.LFB14
 3516 0078 00000000 		.4byte	.LFB15
 3517 007c 28000000 		.4byte	.LFE15-.LFB15
 3518 0080 00000000 		.4byte	.LFB16
 3519 0084 0C000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 92


 3520 0088 00000000 		.4byte	.LFB17
 3521 008c 0C000000 		.4byte	.LFE17-.LFB17
 3522 0090 00000000 		.4byte	.LFB18
 3523 0094 24000000 		.4byte	.LFE18-.LFB18
 3524 0098 00000000 		.4byte	.LFB19
 3525 009c 0C000000 		.4byte	.LFE19-.LFB19
 3526 00a0 00000000 		.4byte	.LFB20
 3527 00a4 0C000000 		.4byte	.LFE20-.LFB20
 3528 00a8 00000000 		.4byte	.LFB21
 3529 00ac 28000000 		.4byte	.LFE21-.LFB21
 3530 00b0 00000000 		.4byte	.LFB22
 3531 00b4 0C000000 		.4byte	.LFE22-.LFB22
 3532 00b8 00000000 		.4byte	.LFB23
 3533 00bc 0C000000 		.4byte	.LFE23-.LFB23
 3534 00c0 00000000 		.4byte	.LFB24
 3535 00c4 0C000000 		.4byte	.LFE24-.LFB24
 3536 00c8 00000000 		.4byte	.LFB25
 3537 00cc 0C000000 		.4byte	.LFE25-.LFB25
 3538 00d0 00000000 		.4byte	.LFB26
 3539 00d4 0C000000 		.4byte	.LFE26-.LFB26
 3540 00d8 00000000 		.4byte	.LFB27
 3541 00dc 0C000000 		.4byte	.LFE27-.LFB27
 3542 00e0 00000000 		.4byte	.LFB28
 3543 00e4 24000000 		.4byte	.LFE28-.LFB28
 3544 00e8 00000000 		.4byte	.LFB29
 3545 00ec 24000000 		.4byte	.LFE29-.LFB29
 3546 00f0 00000000 		.4byte	.LFB30
 3547 00f4 28000000 		.4byte	.LFE30-.LFB30
 3548 00f8 00000000 		.4byte	.LFB31
 3549 00fc 24000000 		.4byte	.LFE31-.LFB31
 3550 0100 00000000 		.4byte	.LFB32
 3551 0104 24000000 		.4byte	.LFE32-.LFB32
 3552 0108 00000000 		.4byte	.LFB33
 3553 010c 1C000000 		.4byte	.LFE33-.LFB33
 3554 0110 00000000 		.4byte	.LFB1
 3555 0114 24000000 		.4byte	.LFE1-.LFB1
 3556 0118 00000000 		.4byte	.LFB2
 3557 011c 1C000000 		.4byte	.LFE2-.LFB2
 3558 0120 00000000 		.4byte	.LFB34
 3559 0124 14000000 		.4byte	.LFE34-.LFB34
 3560 0128 00000000 		.4byte	.LFB35
 3561 012c 0C000000 		.4byte	.LFE35-.LFB35
 3562 0130 00000000 		.4byte	.LFB36
 3563 0134 0C000000 		.4byte	.LFE36-.LFB36
 3564 0138 00000000 		.4byte	.LFB37
 3565 013c 0C000000 		.4byte	.LFE37-.LFB37
 3566 0140 00000000 		.4byte	.LFB38
 3567 0144 0C000000 		.4byte	.LFE38-.LFB38
 3568 0148 00000000 		.4byte	.LFB39
 3569 014c 0C000000 		.4byte	.LFE39-.LFB39
 3570 0150 00000000 		.4byte	0
 3571 0154 00000000 		.4byte	0
 3572              		.section	.debug_ranges,"",%progbits
 3573              	.Ldebug_ranges0:
 3574 0000 0A000000 		.4byte	.LBB10
 3575 0004 0C000000 		.4byte	.LBE10
 3576 0008 0E000000 		.4byte	.LBB13
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 93


 3577 000c 12000000 		.4byte	.LBE13
 3578 0010 00000000 		.4byte	0
 3579 0014 00000000 		.4byte	0
 3580 0018 00000000 		.4byte	.LFB0
 3581 001c 54000000 		.4byte	.LFE0
 3582 0020 00000000 		.4byte	.LFB3
 3583 0024 1C000000 		.4byte	.LFE3
 3584 0028 00000000 		.4byte	.LFB4
 3585 002c 28000000 		.4byte	.LFE4
 3586 0030 00000000 		.4byte	.LFB5
 3587 0034 28000000 		.4byte	.LFE5
 3588 0038 00000000 		.4byte	.LFB6
 3589 003c 28000000 		.4byte	.LFE6
 3590 0040 00000000 		.4byte	.LFB7
 3591 0044 2C000000 		.4byte	.LFE7
 3592 0048 00000000 		.4byte	.LFB8
 3593 004c 10000000 		.4byte	.LFE8
 3594 0050 00000000 		.4byte	.LFB9
 3595 0054 28000000 		.4byte	.LFE9
 3596 0058 00000000 		.4byte	.LFB10
 3597 005c 28000000 		.4byte	.LFE10
 3598 0060 00000000 		.4byte	.LFB11
 3599 0064 2C000000 		.4byte	.LFE11
 3600 0068 00000000 		.4byte	.LFB12
 3601 006c 28000000 		.4byte	.LFE12
 3602 0070 00000000 		.4byte	.LFB13
 3603 0074 0C000000 		.4byte	.LFE13
 3604 0078 00000000 		.4byte	.LFB14
 3605 007c 0C000000 		.4byte	.LFE14
 3606 0080 00000000 		.4byte	.LFB15
 3607 0084 28000000 		.4byte	.LFE15
 3608 0088 00000000 		.4byte	.LFB16
 3609 008c 0C000000 		.4byte	.LFE16
 3610 0090 00000000 		.4byte	.LFB17
 3611 0094 0C000000 		.4byte	.LFE17
 3612 0098 00000000 		.4byte	.LFB18
 3613 009c 24000000 		.4byte	.LFE18
 3614 00a0 00000000 		.4byte	.LFB19
 3615 00a4 0C000000 		.4byte	.LFE19
 3616 00a8 00000000 		.4byte	.LFB20
 3617 00ac 0C000000 		.4byte	.LFE20
 3618 00b0 00000000 		.4byte	.LFB21
 3619 00b4 28000000 		.4byte	.LFE21
 3620 00b8 00000000 		.4byte	.LFB22
 3621 00bc 0C000000 		.4byte	.LFE22
 3622 00c0 00000000 		.4byte	.LFB23
 3623 00c4 0C000000 		.4byte	.LFE23
 3624 00c8 00000000 		.4byte	.LFB24
 3625 00cc 0C000000 		.4byte	.LFE24
 3626 00d0 00000000 		.4byte	.LFB25
 3627 00d4 0C000000 		.4byte	.LFE25
 3628 00d8 00000000 		.4byte	.LFB26
 3629 00dc 0C000000 		.4byte	.LFE26
 3630 00e0 00000000 		.4byte	.LFB27
 3631 00e4 0C000000 		.4byte	.LFE27
 3632 00e8 00000000 		.4byte	.LFB28
 3633 00ec 24000000 		.4byte	.LFE28
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 94


 3634 00f0 00000000 		.4byte	.LFB29
 3635 00f4 24000000 		.4byte	.LFE29
 3636 00f8 00000000 		.4byte	.LFB30
 3637 00fc 28000000 		.4byte	.LFE30
 3638 0100 00000000 		.4byte	.LFB31
 3639 0104 24000000 		.4byte	.LFE31
 3640 0108 00000000 		.4byte	.LFB32
 3641 010c 24000000 		.4byte	.LFE32
 3642 0110 00000000 		.4byte	.LFB33
 3643 0114 1C000000 		.4byte	.LFE33
 3644 0118 00000000 		.4byte	.LFB1
 3645 011c 24000000 		.4byte	.LFE1
 3646 0120 00000000 		.4byte	.LFB2
 3647 0124 1C000000 		.4byte	.LFE2
 3648 0128 00000000 		.4byte	.LFB34
 3649 012c 14000000 		.4byte	.LFE34
 3650 0130 00000000 		.4byte	.LFB35
 3651 0134 0C000000 		.4byte	.LFE35
 3652 0138 00000000 		.4byte	.LFB36
 3653 013c 0C000000 		.4byte	.LFE36
 3654 0140 00000000 		.4byte	.LFB37
 3655 0144 0C000000 		.4byte	.LFE37
 3656 0148 00000000 		.4byte	.LFB38
 3657 014c 0C000000 		.4byte	.LFE38
 3658 0150 00000000 		.4byte	.LFB39
 3659 0154 0C000000 		.4byte	.LFE39
 3660 0158 00000000 		.4byte	0
 3661 015c 00000000 		.4byte	0
 3662              		.section	.debug_line,"",%progbits
 3663              	.Ldebug_line0:
 3664 0000 F2030000 		.section	.debug_str,"MS",%progbits,1
 3664      02004F00 
 3664      00000201 
 3664      FB0E0D00 
 3664      01010101 
 3665              	.LASF18:
 3666 0000 636F756E 		.ascii	"count\000"
 3666      7400
 3667              	.LASF76:
 3668 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3668      4320342E 
 3668      392E3320 
 3668      32303135 
 3668      30333033 
 3669 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3669      20726576 
 3669      6973696F 
 3669      6E203232 
 3669      31323230 
 3670 006c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3670      66756E63 
 3670      74696F6E 
 3670      2D736563 
 3670      74696F6E 
 3671              	.LASF81:
 3672 0094 43794578 		.ascii	"CyExitCriticalSection\000"
 3672      69744372 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 95


 3672      69746963 
 3672      616C5365 
 3672      6374696F 
 3673              	.LASF60:
 3674 00aa 54435057 		.ascii	"TCPWM_1_ReadCaptureBuf\000"
 3674      4D5F315F 
 3674      52656164 
 3674      43617074 
 3674      75726542 
 3675              	.LASF26:
 3676 00c1 54435057 		.ascii	"TCPWM_1_SetMode\000"
 3676      4D5F315F 
 3676      5365744D 
 3676      6F646500 
 3677              	.LASF28:
 3678 00d1 54435057 		.ascii	"TCPWM_1_SetQDMode\000"
 3678      4D5F315F 
 3678      53657451 
 3678      444D6F64 
 3678      6500
 3679              	.LASF31:
 3680 00e3 54435057 		.ascii	"TCPWM_1_SetPrescaler\000"
 3680      4D5F315F 
 3680      53657450 
 3680      72657363 
 3680      616C6572 
 3681              	.LASF16:
 3682 00f8 54435057 		.ascii	"TCPWM_1_WriteCounter\000"
 3682      4D5F315F 
 3682      57726974 
 3682      65436F75 
 3682      6E746572 
 3683              	.LASF7:
 3684 010d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3684      206C6F6E 
 3684      6720756E 
 3684      7369676E 
 3684      65642069 
 3685              	.LASF79:
 3686 0124 54435057 		.ascii	"TCPWM_1_initVar\000"
 3686      4D5F315F 
 3686      696E6974 
 3686      56617200 
 3687              	.LASF25:
 3688 0134 54435057 		.ascii	"TCPWM_1_Stop\000"
 3688      4D5F315F 
 3688      53746F70 
 3688      00
 3689              	.LASF49:
 3690 0141 54435057 		.ascii	"TCPWM_1_SetCompareSwap\000"
 3690      4D5F315F 
 3690      53657443 
 3690      6F6D7061 
 3690      72655377 
 3691              	.LASF6:
 3692 0158 6C6F6E67 		.ascii	"long long int\000"
 3692      206C6F6E 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 96


 3692      6720696E 
 3692      7400
 3693              	.LASF0:
 3694 0166 7369676E 		.ascii	"signed char\000"
 3694      65642063 
 3694      68617200 
 3695              	.LASF55:
 3696 0172 54435057 		.ascii	"TCPWM_1_ReadCompare\000"
 3696      4D5F315F 
 3696      52656164 
 3696      436F6D70 
 3696      61726500 
 3697              	.LASF30:
 3698 0186 71644D6F 		.ascii	"qdMode\000"
 3698      646500
 3699              	.LASF4:
 3700 018d 6C6F6E67 		.ascii	"long int\000"
 3700      20696E74 
 3700      00
 3701              	.LASF56:
 3702 0196 54435057 		.ascii	"TCPWM_1_WriteCompareBuf\000"
 3702      4D5F315F 
 3702      57726974 
 3702      65436F6D 
 3702      70617265 
 3703              	.LASF9:
 3704 01ae 75696E74 		.ascii	"uint8\000"
 3704      3800
 3705              	.LASF74:
 3706 01b4 54435057 		.ascii	"TCPWM_1_ClearInterrupt\000"
 3706      4D5F315F 
 3706      436C6561 
 3706      72496E74 
 3706      65727275 
 3707              	.LASF12:
 3708 01cb 646F7562 		.ascii	"double\000"
 3708      6C6500
 3709              	.LASF10:
 3710 01d2 75696E74 		.ascii	"uint32\000"
 3710      333200
 3711              	.LASF62:
 3712 01d9 74726967 		.ascii	"triggerMode\000"
 3712      6765724D 
 3712      6F646500 
 3713              	.LASF44:
 3714 01e5 6D61736B 		.ascii	"mask\000"
 3714      00
 3715              	.LASF39:
 3716 01ea 54435057 		.ascii	"TCPWM_1_SetPWMStopOnKill\000"
 3716      4D5F315F 
 3716      53657450 
 3716      574D5374 
 3716      6F704F6E 
 3717              	.LASF47:
 3718 0203 54435057 		.ascii	"TCPWM_1_ReadCounter\000"
 3718      4D5F315F 
 3718      52656164 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 97


 3718      436F756E 
 3718      74657200 
 3719              	.LASF42:
 3720 0217 64656164 		.ascii	"deadTime\000"
 3720      54696D65 
 3720      00
 3721              	.LASF72:
 3722 0220 54435057 		.ascii	"TCPWM_1_GetInterruptSourceMasked\000"
 3722      4D5F315F 
 3722      47657449 
 3722      6E746572 
 3722      72757074 
 3723              	.LASF8:
 3724 0241 756E7369 		.ascii	"unsigned int\000"
 3724      676E6564 
 3724      20696E74 
 3724      00
 3725              	.LASF67:
 3726 024e 54435057 		.ascii	"TCPWM_1_TriggerCommand\000"
 3726      4D5F315F 
 3726      54726967 
 3726      67657243 
 3726      6F6D6D61 
 3727              	.LASF68:
 3728 0265 636F6D6D 		.ascii	"command\000"
 3728      616E6400 
 3729              	.LASF5:
 3730 026d 6C6F6E67 		.ascii	"long unsigned int\000"
 3730      20756E73 
 3730      69676E65 
 3730      6420696E 
 3730      7400
 3731              	.LASF36:
 3732 027f 6D6F6465 		.ascii	"modeMask\000"
 3732      4D61736B 
 3732      00
 3733              	.LASF80:
 3734 0288 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3734      74657243 
 3734      72697469 
 3734      63616C53 
 3734      65637469 
 3735              	.LASF3:
 3736 029f 73686F72 		.ascii	"short unsigned int\000"
 3736      7420756E 
 3736      7369676E 
 3736      65642069 
 3736      6E7400
 3737              	.LASF34:
 3738 02b2 6F6E6553 		.ascii	"oneShotEnable\000"
 3738      686F7445 
 3738      6E61626C 
 3738      6500
 3739              	.LASF75:
 3740 02c0 54435057 		.ascii	"TCPWM_1_SetInterrupt\000"
 3740      4D5F315F 
 3740      53657449 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 98


 3740      6E746572 
 3740      72757074 
 3741              	.LASF33:
 3742 02d5 54435057 		.ascii	"TCPWM_1_SetOneShot\000"
 3742      4D5F315F 
 3742      5365744F 
 3742      6E655368 
 3742      6F7400
 3743              	.LASF14:
 3744 02e8 72656733 		.ascii	"reg32\000"
 3744      3200
 3745              	.LASF65:
 3746 02ee 54435057 		.ascii	"TCPWM_1_SetStopMode\000"
 3746      4D5F315F 
 3746      53657453 
 3746      746F704D 
 3746      6F646500 
 3747              	.LASF69:
 3748 0302 54435057 		.ascii	"TCPWM_1_Enable\000"
 3748      4D5F315F 
 3748      456E6162 
 3748      6C6500
 3749              	.LASF15:
 3750 0311 73697A65 		.ascii	"sizetype\000"
 3750      74797065 
 3750      00
 3751              	.LASF38:
 3752 031a 73796E63 		.ascii	"syncKillEnable\000"
 3752      4B696C6C 
 3752      456E6162 
 3752      6C6500
 3753              	.LASF24:
 3754 0329 54435057 		.ascii	"TCPWM_1_Init\000"
 3754      4D5F315F 
 3754      496E6974 
 3754      00
 3755              	.LASF41:
 3756 0336 54435057 		.ascii	"TCPWM_1_SetPWMDeadTime\000"
 3756      4D5F315F 
 3756      53657450 
 3756      574D4465 
 3756      61645469 
 3757              	.LASF71:
 3758 034d 54435057 		.ascii	"TCPWM_1_ReadStatus\000"
 3758      4D5F315F 
 3758      52656164 
 3758      53746174 
 3758      757300
 3759              	.LASF23:
 3760 0360 636F6D70 		.ascii	"compare\000"
 3760      61726500 
 3761              	.LASF70:
 3762 0368 54435057 		.ascii	"TCPWM_1_Start\000"
 3762      4D5F315F 
 3762      53746172 
 3762      7400
 3763              	.LASF66:
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 99


 3764 0376 54435057 		.ascii	"TCPWM_1_SetCountMode\000"
 3764      4D5F315F 
 3764      53657443 
 3764      6F756E74 
 3764      4D6F6465 
 3765              	.LASF11:
 3766 038b 666C6F61 		.ascii	"float\000"
 3766      7400
 3767              	.LASF32:
 3768 0391 70726573 		.ascii	"prescaler\000"
 3768      63616C65 
 3768      7200
 3769              	.LASF77:
 3770 039b 47656E65 		.ascii	"Generated_Source\\PSoC4\\TCPWM_1.c\000"
 3770      72617465 
 3770      645F536F 
 3770      75726365 
 3770      5C50536F 
 3771              	.LASF20:
 3772 03bc 54435057 		.ascii	"TCPWM_1_WritePeriod\000"
 3772      4D5F315F 
 3772      57726974 
 3772      65506572 
 3772      696F6400 
 3773              	.LASF51:
 3774 03d0 54435057 		.ascii	"TCPWM_1_WritePeriodBuf\000"
 3774      4D5F315F 
 3774      57726974 
 3774      65506572 
 3774      696F6442 
 3775              	.LASF1:
 3776 03e7 756E7369 		.ascii	"unsigned char\000"
 3776      676E6564 
 3776      20636861 
 3776      7200
 3777              	.LASF22:
 3778 03f5 54435057 		.ascii	"TCPWM_1_WriteCompare\000"
 3778      4D5F315F 
 3778      57726974 
 3778      65436F6D 
 3778      70617265 
 3779              	.LASF40:
 3780 040a 73746F70 		.ascii	"stopOnKillEnable\000"
 3780      4F6E4B69 
 3780      6C6C456E 
 3780      61626C65 
 3780      00
 3781              	.LASF73:
 3782 041b 54435057 		.ascii	"TCPWM_1_GetInterruptSource\000"
 3782      4D5F315F 
 3782      47657449 
 3782      6E746572 
 3782      72757074 
 3783              	.LASF2:
 3784 0436 73686F72 		.ascii	"short int\000"
 3784      7420696E 
 3784      7400
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 100


 3785              	.LASF53:
 3786 0440 54435057 		.ascii	"TCPWM_1_ReadPeriodBuf\000"
 3786      4D5F315F 
 3786      52656164 
 3786      50657269 
 3786      6F644275 
 3787              	.LASF19:
 3788 0456 696E7465 		.ascii	"interruptMask\000"
 3788      72727570 
 3788      744D6173 
 3788      6B00
 3789              	.LASF58:
 3790 0464 54435057 		.ascii	"TCPWM_1_ReadCompareBuf\000"
 3790      4D5F315F 
 3790      52656164 
 3790      436F6D70 
 3790      61726542 
 3791              	.LASF48:
 3792 047b 54435057 		.ascii	"TCPWM_1_ReadPeriod\000"
 3792      4D5F315F 
 3792      52656164 
 3792      50657269 
 3792      6F6400
 3793              	.LASF54:
 3794 048e 54435057 		.ascii	"TCPWM_1_SetPeriodSwap\000"
 3794      4D5F315F 
 3794      53657450 
 3794      6572696F 
 3794      64537761 
 3795              	.LASF13:
 3796 04a4 63686172 		.ascii	"char\000"
 3796      00
 3797              	.LASF29:
 3798 04a9 6D6F6465 		.ascii	"mode\000"
 3798      00
 3799              	.LASF59:
 3800 04ae 54435057 		.ascii	"TCPWM_1_ReadCapture\000"
 3800      4D5F315F 
 3800      52656164 
 3800      43617074 
 3800      75726500 
 3801              	.LASF78:
 3802 04c2 433A5C55 		.ascii	"C:\\Users\\Tech Consulting\\Desktop\\PSOC4 projects"
 3802      73657273 
 3802      5C546563 
 3802      6820436F 
 3802      6E73756C 
 3803 04f1 5C537465 		.ascii	"\\Stepper Projects GearBest\\DualStepperController-"
 3803      70706572 
 3803      2050726F 
 3803      6A656374 
 3803      73204765 
 3804 0522 50536F43 		.ascii	"PSoC4200-GearBest.cydsn\000"
 3804      34323030 
 3804      2D476561 
 3804      72426573 
 3804      742E6379 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 101


 3805              	.LASF37:
 3806 053a 54435057 		.ascii	"TCPWM_1_SetPWMSyncKill\000"
 3806      4D5F315F 
 3806      53657450 
 3806      574D5379 
 3806      6E634B69 
 3807              	.LASF46:
 3808 0551 636F756E 		.ascii	"counterMode\000"
 3808      7465724D 
 3808      6F646500 
 3809              	.LASF21:
 3810 055d 70657269 		.ascii	"period\000"
 3810      6F6400
 3811              	.LASF17:
 3812 0564 54435057 		.ascii	"TCPWM_1_SetInterruptMode\000"
 3812      4D5F315F 
 3812      53657449 
 3812      6E746572 
 3812      72757074 
 3813              	.LASF57:
 3814 057d 636F6D70 		.ascii	"compareBuf\000"
 3814      61726542 
 3814      756600
 3815              	.LASF27:
 3816 0588 656E6162 		.ascii	"enableInterrupts\000"
 3816      6C65496E 
 3816      74657272 
 3816      75707473 
 3816      00
 3817              	.LASF45:
 3818 0599 54435057 		.ascii	"TCPWM_1_SetCounterMode\000"
 3818      4D5F315F 
 3818      53657443 
 3818      6F756E74 
 3818      65724D6F 
 3819              	.LASF35:
 3820 05b0 54435057 		.ascii	"TCPWM_1_SetPWMMode\000"
 3820      4D5F315F 
 3820      53657450 
 3820      574D4D6F 
 3820      646500
 3821              	.LASF43:
 3822 05c3 54435057 		.ascii	"TCPWM_1_SetPWMInvert\000"
 3822      4D5F315F 
 3822      53657450 
 3822      574D496E 
 3822      76657274 
 3823              	.LASF63:
 3824 05d8 54435057 		.ascii	"TCPWM_1_SetReloadMode\000"
 3824      4D5F315F 
 3824      53657452 
 3824      656C6F61 
 3824      644D6F64 
 3825              	.LASF64:
 3826 05ee 54435057 		.ascii	"TCPWM_1_SetStartMode\000"
 3826      4D5F315F 
 3826      53657453 
ARM GAS  C:\Users\TECHCO~1\AppData\Local\Temp\ccHSvJXp.s 			page 102


 3826      74617274 
 3826      4D6F6465 
 3827              	.LASF50:
 3828 0603 73776170 		.ascii	"swapEnable\000"
 3828      456E6162 
 3828      6C6500
 3829              	.LASF52:
 3830 060e 70657269 		.ascii	"periodBuf\000"
 3830      6F644275 
 3830      6600
 3831              	.LASF61:
 3832 0618 54435057 		.ascii	"TCPWM_1_SetCaptureMode\000"
 3832      4D5F315F 
 3832      53657443 
 3832      61707475 
 3832      72654D6F 
 3833              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
